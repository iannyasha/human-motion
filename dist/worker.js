/*
  Human: Motion Analytics Demo
  author: <https://github.com/vladmandic>'
*/

var Ts=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,a)=>(typeof require<"u"?require:t)[a]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var h5=Object.defineProperty,dS=(e,t,a)=>t in e?h5(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,Io=(e=>typeof Ts<"u"?Ts:typeof Proxy<"u"?new Proxy(e,{get:(t,a)=>(typeof Ts<"u"?Ts:t)[a]}):e)(function(e){if(typeof Ts<"u")return Ts.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),jr=(e,t)=>{for(var a in t)h5(e,a,{get:t[a],enumerable:!0})},ue=(e,t,a)=>(dS(e,typeof t!="symbol"?t+"":t,a),a),f5=(e,t,a)=>{if(!t.has(e))throw TypeError("Cannot "+a)},Zn=(e,t,a)=>(f5(e,t,"read from private field"),a?a.call(e):t.get(e)),fu=(e,t,a)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,a)},Pp=(e,t,a,n)=>(f5(e,t,"write to private field"),n?n.call(e,a):t.set(e,a),a),O2={};jr(O2,{Abs:()=>ul,Acos:()=>ud,Acosh:()=>dd,AdadeltaOptimizer:()=>_h,AdagradOptimizer:()=>$h,AdamOptimizer:()=>Mh,AdamaxOptimizer:()=>Fh,Add:()=>ur,AddN:()=>li,All:()=>dl,Any:()=>pl,ArgMax:()=>ui,ArgMin:()=>pd,Asin:()=>cd,Asinh:()=>hd,Atan:()=>fd,Atan2:()=>cl,Atanh:()=>md,AvgPool:()=>di,AvgPool3D:()=>Hc,AvgPool3DGrad:()=>U2,AvgPoolGrad:()=>V2,BackendWasm:()=>B6,BatchMatMul:()=>pi,BatchToSpaceND:()=>hl,Bincount:()=>jc,BroadcastArgs:()=>qc,BroadcastTo:()=>e9,Cast:()=>ci,Ceil:()=>Xr,ClipByValue:()=>Kr,Complex:()=>gd,ComplexAbs:()=>Xc,Concat:()=>fl,Conv2D:()=>hi,Conv2DBackpropFilter:()=>Kc,Conv2DBackpropInput:()=>fi,Conv3D:()=>Zc,Conv3DBackpropFilterV2:()=>G2,Conv3DBackpropInputV2:()=>Yc,Cos:()=>mi,Cosh:()=>gi,CropAndResize:()=>xi,Cumprod:()=>Ai,Cumsum:()=>yi,DataStorage:()=>od,DenseBincount:()=>Jc,DepthToSpace:()=>bi,DepthwiseConv2dNative:()=>vi,DepthwiseConv2dNativeBackpropFilter:()=>Qc,DepthwiseConv2dNativeBackpropInput:()=>eh,Diag:()=>th,Dilation2D:()=>ah,Dilation2DBackpropFilter:()=>Rm,Dilation2DBackpropInput:()=>Em,ENV:()=>W2,Einsum:()=>Ad,Elu:()=>ki,EluGrad:()=>H2,Environment:()=>C5,Equal:()=>Zr,Erf:()=>yd,Exp:()=>Yr,ExpandDims:()=>ml,Expm1:()=>Ii,FFT:()=>nh,Fill:()=>gl,FlipLeftRight:()=>Si,Floor:()=>Jr,FloorDiv:()=>Ti,FromPixels:()=>Vu,FusedBatchNorm:()=>Ni,FusedConv2D:()=>Wr,FusedDepthwiseConv2D:()=>Br,GPGPUContext:()=>Pu,GatherNd:()=>Ci,GatherV2:()=>Al,GraphModel:()=>Dh,Greater:()=>Qr,GreaterEqual:()=>es,IFFT:()=>rh,Identity:()=>Ei,Imag:()=>xd,IsFinite:()=>bd,IsInf:()=>vd,IsNan:()=>yl,KernelBackend:()=>ol,LRN:()=>ih,LRNGrad:()=>j2,LeakyRelu:()=>Ri,Less:()=>ts,LessEqual:()=>as,LinSpace:()=>sh,Log:()=>ns,Log1p:()=>wd,LogSoftmax:()=>t9,LogicalAnd:()=>_i,LogicalNot:()=>$i,LogicalOr:()=>xl,LogicalXor:()=>R5,LowerBound:()=>a9,MathBackendCPU:()=>zh,MathBackendWebGL:()=>Jd,Max:()=>Mi,MaxPool:()=>Fi,MaxPool3D:()=>oh,MaxPool3DGrad:()=>X2,MaxPoolGrad:()=>q2,MaxPoolWithArgmax:()=>lh,Maximum:()=>rs,Mean:()=>Oi,Min:()=>Pi,Minimum:()=>ss,MirrorPad:()=>Di,Mod:()=>kd,MomentumOptimizer:()=>Oh,Multinomial:()=>uh,Multiply:()=>is,Neg:()=>bl,NonMaxSuppressionV3:()=>zi,NonMaxSuppressionV4:()=>vl,NonMaxSuppressionV5:()=>Li,NotEqual:()=>os,OP_SCOPE_SUFFIX:()=>Q2,OneHot:()=>kl,OnesLike:()=>wl,Optimizer:()=>As,OptimizerConstructors:()=>kr,Pack:()=>Il,PadV2:()=>Wi,Pool:()=>n9,Pow:()=>Bi,Prelu:()=>Vi,Prod:()=>Ui,RMSPropOptimizer:()=>Ph,RaggedGather:()=>dh,RaggedRange:()=>ph,RaggedTensorToTensor:()=>ch,Range:()=>Sl,Rank:()=>Mm,Real:()=>Id,RealDiv:()=>wi,Reciprocal:()=>Tl,Reduction:()=>ha,Relu:()=>Gi,Relu6:()=>qi,Reshape:()=>Nl,ResizeBilinear:()=>ji,ResizeBilinearGrad:()=>Z2,ResizeNearestNeighbor:()=>Hi,ResizeNearestNeighborGrad:()=>K2,Reverse:()=>Cl,RotateWithOffset:()=>no,Round:()=>El,Rsqrt:()=>ls,SGDOptimizer:()=>Xd,ScatterNd:()=>Xi,SearchSorted:()=>hh,Select:()=>Rl,Selu:()=>Sd,Sigmoid:()=>us,Sign:()=>Td,Sin:()=>Ki,Sinh:()=>$l,Slice:()=>_l,Softmax:()=>Yi,Softplus:()=>Nd,SpaceToBatchND:()=>Ml,SparseFillEmptyRows:()=>Cd,SparseReshape:()=>Ol,SparseSegmentMean:()=>Ed,SparseSegmentSum:()=>Rd,SparseToDense:()=>_d,SplitV:()=>Fl,Sqrt:()=>ds,Square:()=>$d,SquaredDifference:()=>ps,Step:()=>ao,StridedSlice:()=>Ji,StringNGrams:()=>Pl,StringSplit:()=>Md,StringToHashBucketFast:()=>Fd,Sub:()=>cs,Sum:()=>Zi,Tan:()=>Dl,Tanh:()=>Qi,Tensor:()=>ft,TensorBuffer:()=>Ct,Tile:()=>hs,TopK:()=>eo,Transform:()=>to,Transpose:()=>nr,Unique:()=>fh,Unpack:()=>zl,UnsortedSegmentSum:()=>mh,UpperBound:()=>r9,Variable:()=>Hu,WebGPUBackend:()=>Hh,ZerosLike:()=>Ll,_FusedMatMul:()=>Lr,abs:()=>Oa,acos:()=>kb,acosh:()=>Ib,add:()=>ke,addN:()=>gg,all:()=>Sb,any:()=>Tb,argMax:()=>Bl,argMin:()=>Nb,asin:()=>Cb,asinh:()=>Eb,atan:()=>Rb,atan2:()=>_b,atanh:()=>$b,avgPool:()=>yg,avgPool3d:()=>Pb,backend:()=>Nr,backend_util:()=>T,basicLSTMCell:()=>Db,batchNorm:()=>Vd,batchNorm2d:()=>zb,batchNorm3d:()=>Lb,batchNorm4d:()=>Wb,batchToSpaceND:()=>xg,bincount:()=>bg,booleanMaskAsync:()=>yv,broadcastArgs:()=>Bb,broadcastTo:()=>Gs,broadcast_util:()=>ro,browser:()=>Ir,buffer:()=>xe,cast:()=>Xe,ceil:()=>Vb,clipByValue:()=>Ub,clone:()=>Ca,complex:()=>sr,concat:()=>ut,concat1d:()=>Gb,concat2d:()=>yh,concat3d:()=>Hb,concat4d:()=>jb,conv1d:()=>qb,conv2d:()=>Ud,conv2dTranspose:()=>Kb,conv3d:()=>Zb,conv3dTranspose:()=>Yb,copyRegisteredKernels:()=>u9,cos:()=>Jb,cosh:()=>Qb,cosineWindow:()=>Th,cumprod:()=>e3,cumsum:()=>t3,customGrad:()=>Un,denseBincount:()=>a3,deprecationWarn:()=>ig,depthToSpace:()=>n3,depthwiseConv2d:()=>xh,deregisterOp:()=>qM,device_util:()=>zd,diag:()=>r3,dilation2d:()=>s3,disableDeprecationWarnings:()=>DT,dispose:()=>le,disposeVariables:()=>zT,div:()=>Ne,divNoNan:()=>i3,dot:()=>o3,dropout:()=>kv,einsum:()=>l3,elu:()=>wg,enableDebugMode:()=>PT,enableProdMode:()=>nb,enclosingPowerOfTwo:()=>Jg,engine:()=>Dt,env:()=>B,equal:()=>vg,erf:()=>u3,euclideanNorm:()=>c3,exp:()=>Vr,expandDims:()=>Pa,expm1:()=>h3,eye:()=>Ig,fft:()=>Ih,fill:()=>ir,findBackend:()=>rb,findBackendFactory:()=>UT,floor:()=>Sg,floorDiv:()=>Ah,forceHalfFloat:()=>ok,fused:()=>Qg,gather:()=>Tg,gatherND:()=>wv,gather_util:()=>dg,getBackend:()=>Xt,getGradient:()=>_m,getKernel:()=>bc,getKernelsForBackend:()=>Ks,getThreadsCount:()=>ene,gpgpu_util:()=>Lw,grad:()=>AE,grads:()=>yE,greater:()=>jd,greaterEqual:()=>Ng,ifft:()=>Yu,imag:()=>Wd,image:()=>Ue,inTopKAsync:()=>Iv,io:()=>er,irfft:()=>Xg,isFinite:()=>f3,isInf:()=>m3,isNaN:()=>g3,keep:()=>zn,kernel_impls:()=>An,leakyRelu:()=>Cg,less:()=>A3,lessEqual:()=>bh,linalg:()=>$v,linspace:()=>y3,loadGraphModel:()=>o7,loadGraphModelSync:()=>ZF,localResponseNormalization:()=>x3,log:()=>Yo,log1p:()=>Eg,logSigmoid:()=>v3,logSoftmax:()=>w3,logSumExp:()=>_g,logicalAnd:()=>Ku,logicalNot:()=>$g,logicalOr:()=>Mg,logicalXor:()=>k3,losses:()=>Mv,lowerBound:()=>I3,matMul:()=>Qe,math:()=>ab,max:()=>hn,maxPool:()=>Fg,maxPool3d:()=>S3,maxPoolWithArgmax:()=>T3,maximum:()=>Og,mean:()=>Zu,memory:()=>LT,meshgrid:()=>N3,min:()=>Hs,minimum:()=>Pg,mirrorPad:()=>C3,mod:()=>kh,moments:()=>E3,movingAverage:()=>xv,mul:()=>ie,multiRNNCell:()=>R3,multinomial:()=>_3,neg:()=>Ln,nextFrame:()=>Pv,norm:()=>Hd,notEqual:()=>Dg,oneHot:()=>kc,ones:()=>Rr,onesLike:()=>$3,op:()=>z,outerProduct:()=>M3,pad:()=>gs,pad1d:()=>F3,pad2d:()=>O3,pad3d:()=>P3,pad4d:()=>D3,pool:()=>z3,pow:()=>Zo,prelu:()=>Lg,print:()=>ng,prod:()=>L3,profile:()=>WT,raggedGather:()=>W3,raggedRange:()=>B3,raggedTensorToTensor:()=>V3,rand:()=>U3,randomGamma:()=>G3,randomNormal:()=>Vg,randomStandardNormal:()=>H3,randomUniform:()=>Ug,range:()=>Jo,ready:()=>og,real:()=>Xo,reciprocal:()=>j3,registerBackend:()=>Wl,registerGradient:()=>i9,registerKernel:()=>Tn,registerOp:()=>jM,relu:()=>qd,relu6:()=>Gg,removeBackend:()=>VT,reshape:()=>te,reverse:()=>Ur,reverse1d:()=>q3,reverse2d:()=>X3,reverse3d:()=>K3,reverse4d:()=>Z3,rfft:()=>Sh,round:()=>Hg,rsqrt:()=>Y3,scalar:()=>$e,scatterND:()=>bv,scatter_util:()=>pg,searchSorted:()=>wh,selu:()=>J3,separableConv2d:()=>Q3,serialization:()=>Ab,setBackend:()=>Ic,setPlatform:()=>GT,setThreadsCount:()=>Qae,setWasmPath:()=>Jae,setWasmPaths:()=>x2,setWebGLContext:()=>x1,setdiff1dAsync:()=>ev,shared:()=>r1,sigmoid:()=>Wn,sign:()=>tv,signal:()=>_v,sin:()=>av,sinh:()=>nv,slice:()=>Ve,slice1d:()=>rv,slice2d:()=>sv,slice3d:()=>Nc,slice4d:()=>jg,slice_util:()=>gt,softmax:()=>qg,softplus:()=>Rg,spaceToBatchND:()=>zg,sparse:()=>Fv,sparseToDense:()=>vv,spectral:()=>Rv,split:()=>Gn,sqrt:()=>Vn,square:()=>fn,squaredDifference:()=>Kg,squeeze:()=>it,stack:()=>en,step:()=>Zg,stridedSlice:()=>iv,string:()=>Ov,sub:()=>we,sum:()=>at,sumOutType:()=>Dd,tan:()=>ov,tanh:()=>Tc,tensor:()=>Be,tensor1d:()=>na,tensor2d:()=>Fr,tensor3d:()=>ug,tensor4d:()=>lv,tensor5d:()=>uv,tensor6d:()=>dv,tensor_util:()=>F5,test_util:()=>xb,tidy:()=>De,tile:()=>js,time:()=>BT,topk:()=>pv,train:()=>U$,transpose:()=>Ko,truncatedNormal:()=>cv,unique:()=>hv,unregisterGradient:()=>l9,unregisterKernel:()=>o9,unsortedSegmentSum:()=>fv,unstack:()=>gn,upcastType:()=>Yt,upperBound:()=>mv,util:()=>v,valueAndGrad:()=>xE,valueAndGrads:()=>bE,variable:()=>gv,variableGrads:()=>b3,version:()=>X1,version_converter:()=>JF,version_core:()=>wb,version_cpu:()=>sP,version_wasm:()=>tne,version_webgl:()=>HU,webgl:()=>jU,webgl_util:()=>uw,webgpu_util:()=>G6,where:()=>Js,whereAsync:()=>Yg,zeros:()=>Nn,zerosLike:()=>Ba});var pS=Object.create,P2=Object.defineProperty,cS=Object.getOwnPropertyDescriptor,hS=Object.getOwnPropertyNames,fS=Object.getPrototypeOf,mS=Object.prototype.hasOwnProperty,m5=(e=>typeof Io<"u"?Io:typeof Proxy<"u"?new Proxy(e,{get:(t,a)=>(typeof Io<"u"?Io:t)[a]}):e)(function(e){if(typeof Io<"u")return Io.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),zt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Le=(e,t)=>{for(var a in t)P2(e,a,{get:t[a],enumerable:!0})},gS=(e,t,a,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of hS(t))!mS.call(e,r)&&r!==a&&P2(e,r,{get:()=>t[r],enumerable:!(n=cS(t,r))||n.enumerable});return e},il=(e,t,a)=>(a=e!=null?pS(fS(e)):{},gS(t||!e||!e.__esModule?P2(a,"default",{value:e,enumerable:!0}):a,e)),AS=zt((e,t)=>{t.exports=n;var a=null;try{a=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function n(I,R,P){this.low=I|0,this.high=R|0,this.unsigned=!!P}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0});function r(I){return(I&&I.__isLong__)===!0}n.isLong=r;var s={},i={};function o(I,R){var P,D,W;return R?(I>>>=0,(W=0<=I&&I<256)&&(D=i[I],D)?D:(P=u(I,(I|0)<0?-1:0,!0),W&&(i[I]=P),P)):(I|=0,(W=-128<=I&&I<128)&&(D=s[I],D)?D:(P=u(I,I<0?-1:0,!1),W&&(s[I]=P),P))}n.fromInt=o;function l(I,R){if(isNaN(I))return R?b:x;if(R){if(I<0)return b;if(I>=g)return M}else{if(I<=-A)return $;if(I+1>=A)return C}return I<0?l(-I,R).neg():u(I%m|0,I/m|0,R)}n.fromNumber=l;function u(I,R,P){return new n(I,R,P)}n.fromBits=u;var d=Math.pow;function c(I,R,P){if(I.length===0)throw Error("empty string");if(I==="NaN"||I==="Infinity"||I==="+Infinity"||I==="-Infinity")return x;if(typeof R=="number"?(P=R,R=!1):R=!!R,P=P||10,P<2||36<P)throw RangeError("radix");var D;if((D=I.indexOf("-"))>0)throw Error("interior hyphen");if(D===0)return c(I.substring(1),R,P).neg();for(var W=l(d(P,8)),V=x,G=0;G<I.length;G+=8){var U=Math.min(8,I.length-G),H=parseInt(I.substring(G,G+U),P);if(U<8){var Z=l(d(P,U));V=V.mul(Z).add(l(H))}else V=V.mul(W),V=V.add(l(H))}return V.unsigned=R,V}n.fromString=c;function p(I,R){return typeof I=="number"?l(I,R):typeof I=="string"?c(I,R):u(I.low,I.high,typeof R=="boolean"?R:I.unsigned)}n.fromValue=p;var h=1<<16,f=1<<24,m=h*h,g=m*m,A=g/2,y=o(f),x=o(0);n.ZERO=x;var b=o(0,!0);n.UZERO=b;var w=o(1);n.ONE=w;var S=o(1,!0);n.UONE=S;var N=o(-1);n.NEG_ONE=N;var C=u(-1,2147483647,!1);n.MAX_VALUE=C;var M=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=M;var $=u(0,-2147483648,!1);n.MIN_VALUE=$;var E=n.prototype;E.toInt=function(){return this.unsigned?this.low>>>0:this.low},E.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},E.toString=function(I){if(I=I||10,I<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq($)){var R=l(I),P=this.div(R),D=P.mul(R).sub(this);return P.toString(I)+D.toInt().toString(I)}else return"-"+this.neg().toString(I);for(var W=l(d(I,6),this.unsigned),V=this,G="";;){var U=V.div(W),H=V.sub(U.mul(W)).toInt()>>>0,Z=H.toString(I);if(V=U,V.isZero())return Z+G;for(;Z.length<6;)Z="0"+Z;G=""+Z+G}},E.getHighBits=function(){return this.high},E.getHighBitsUnsigned=function(){return this.high>>>0},E.getLowBits=function(){return this.low},E.getLowBitsUnsigned=function(){return this.low>>>0},E.getNumBitsAbs=function(){if(this.isNegative())return this.eq($)?64:this.neg().getNumBitsAbs();for(var I=this.high!=0?this.high:this.low,R=31;R>0&&(I&1<<R)==0;R--);return this.high!=0?R+33:R+1},E.isZero=function(){return this.high===0&&this.low===0},E.eqz=E.isZero,E.isNegative=function(){return!this.unsigned&&this.high<0},E.isPositive=function(){return this.unsigned||this.high>=0},E.isOdd=function(){return(this.low&1)===1},E.isEven=function(){return(this.low&1)===0},E.equals=function(I){return r(I)||(I=p(I)),this.unsigned!==I.unsigned&&this.high>>>31===1&&I.high>>>31===1?!1:this.high===I.high&&this.low===I.low},E.eq=E.equals,E.notEquals=function(I){return!this.eq(I)},E.neq=E.notEquals,E.ne=E.notEquals,E.lessThan=function(I){return this.comp(I)<0},E.lt=E.lessThan,E.lessThanOrEqual=function(I){return this.comp(I)<=0},E.lte=E.lessThanOrEqual,E.le=E.lessThanOrEqual,E.greaterThan=function(I){return this.comp(I)>0},E.gt=E.greaterThan,E.greaterThanOrEqual=function(I){return this.comp(I)>=0},E.gte=E.greaterThanOrEqual,E.ge=E.greaterThanOrEqual,E.compare=function(I){if(r(I)||(I=p(I)),this.eq(I))return 0;var R=this.isNegative(),P=I.isNegative();return R&&!P?-1:!R&&P?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},E.comp=E.compare,E.negate=function(){return!this.unsigned&&this.eq($)?$:this.not().add(w)},E.neg=E.negate,E.add=function(I){r(I)||(I=p(I));var R=this.high>>>16,P=this.high&65535,D=this.low>>>16,W=this.low&65535,V=I.high>>>16,G=I.high&65535,U=I.low>>>16,H=I.low&65535,Z=0,Q=0,Y=0,ee=0;return ee+=W+H,Y+=ee>>>16,ee&=65535,Y+=D+U,Q+=Y>>>16,Y&=65535,Q+=P+G,Z+=Q>>>16,Q&=65535,Z+=R+V,Z&=65535,u(Y<<16|ee,Z<<16|Q,this.unsigned)},E.subtract=function(I){return r(I)||(I=p(I)),this.add(I.neg())},E.sub=E.subtract,E.multiply=function(I){if(this.isZero())return x;if(r(I)||(I=p(I)),a){var R=a.mul(this.low,this.high,I.low,I.high);return u(R,a.get_high(),this.unsigned)}if(I.isZero())return x;if(this.eq($))return I.isOdd()?$:x;if(I.eq($))return this.isOdd()?$:x;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(y)&&I.lt(y))return l(this.toNumber()*I.toNumber(),this.unsigned);var P=this.high>>>16,D=this.high&65535,W=this.low>>>16,V=this.low&65535,G=I.high>>>16,U=I.high&65535,H=I.low>>>16,Z=I.low&65535,Q=0,Y=0,ee=0,ne=0;return ne+=V*Z,ee+=ne>>>16,ne&=65535,ee+=W*Z,Y+=ee>>>16,ee&=65535,ee+=V*H,Y+=ee>>>16,ee&=65535,Y+=D*Z,Q+=Y>>>16,Y&=65535,Y+=W*H,Q+=Y>>>16,Y&=65535,Y+=V*U,Q+=Y>>>16,Y&=65535,Q+=P*Z+D*H+W*U+V*G,Q&=65535,u(ee<<16|ne,Q<<16|Y,this.unsigned)},E.mul=E.multiply,E.divide=function(I){if(r(I)||(I=p(I)),I.isZero())throw Error("division by zero");if(a){if(!this.unsigned&&this.high===-2147483648&&I.low===-1&&I.high===-1)return this;var R=(this.unsigned?a.div_u:a.div_s)(this.low,this.high,I.low,I.high);return u(R,a.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:x;var P,D,W;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return b;if(I.gt(this.shru(1)))return S;W=b}else{if(this.eq($)){if(I.eq(w)||I.eq(N))return $;if(I.eq($))return w;var V=this.shr(1);return P=V.div(I).shl(1),P.eq(x)?I.isNegative()?w:N:(D=this.sub(I.mul(P)),W=P.add(D.div(I)),W)}else if(I.eq($))return this.unsigned?b:x;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();W=x}for(D=this;D.gte(I);){P=Math.max(1,Math.floor(D.toNumber()/I.toNumber()));for(var G=Math.ceil(Math.log(P)/Math.LN2),U=G<=48?1:d(2,G-48),H=l(P),Z=H.mul(I);Z.isNegative()||Z.gt(D);)P-=U,H=l(P,this.unsigned),Z=H.mul(I);H.isZero()&&(H=w),W=W.add(H),D=D.sub(Z)}return W},E.div=E.divide,E.modulo=function(I){if(r(I)||(I=p(I)),a){var R=(this.unsigned?a.rem_u:a.rem_s)(this.low,this.high,I.low,I.high);return u(R,a.get_high(),this.unsigned)}return this.sub(this.div(I).mul(I))},E.mod=E.modulo,E.rem=E.modulo,E.not=function(){return u(~this.low,~this.high,this.unsigned)},E.and=function(I){return r(I)||(I=p(I)),u(this.low&I.low,this.high&I.high,this.unsigned)},E.or=function(I){return r(I)||(I=p(I)),u(this.low|I.low,this.high|I.high,this.unsigned)},E.xor=function(I){return r(I)||(I=p(I)),u(this.low^I.low,this.high^I.high,this.unsigned)},E.shiftLeft=function(I){return r(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?u(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):u(0,this.low<<I-32,this.unsigned)},E.shl=E.shiftLeft,E.shiftRight=function(I){return r(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?u(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):u(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},E.shr=E.shiftRight,E.shiftRightUnsigned=function(I){if(r(I)&&(I=I.toInt()),I&=63,I===0)return this;var R=this.high;if(I<32){var P=this.low;return u(P>>>I|R<<32-I,R>>>I,this.unsigned)}else return I===32?u(R,0,this.unsigned):u(R>>>I-32,0,this.unsigned)},E.shru=E.shiftRightUnsigned,E.shr_u=E.shiftRightUnsigned,E.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},E.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},E.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},E.toBytesLE=function(){var I=this.high,R=this.low;return[R&255,R>>>8&255,R>>>16&255,R>>>24,I&255,I>>>8&255,I>>>16&255,I>>>24]},E.toBytesBE=function(){var I=this.high,R=this.low;return[I>>>24,I>>>16&255,I>>>8&255,I&255,R>>>24,R>>>16&255,R>>>8&255,R&255]},n.fromBytes=function(I,R,P){return P?n.fromBytesLE(I,R):n.fromBytesBE(I,R)},n.fromBytesLE=function(I,R){return new n(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,R)},n.fromBytesBE=function(I,R){return new n(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],R)}}),yS=zt(()=>{}),xS=zt(()=>{}),bS=zt((e,t)=>{(function(a,n,r){function s(u){var d=this,c=l();d.next=function(){var p=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=p-(d.c=p|0)},d.c=1,d.s0=c(" "),d.s1=c(" "),d.s2=c(" "),d.s0-=c(u),d.s0<0&&(d.s0+=1),d.s1-=c(u),d.s1<0&&(d.s1+=1),d.s2-=c(u),d.s2<0&&(d.s2+=1),c=null}function i(u,d){return d.c=u.c,d.s0=u.s0,d.s1=u.s1,d.s2=u.s2,d}function o(u,d){var c=new s(u),p=d&&d.state,h=c.next;return h.int32=function(){return c.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,p&&(typeof p=="object"&&i(p,c),h.state=function(){return i(c,{})}),h}function l(){var u=4022871197,d=function(c){c=String(c);for(var p=0;p<c.length;p++){u+=c.charCodeAt(p);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return d}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),vS=zt((e,t)=>{(function(a,n,r){function s(l){var u=this,d="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:d+=l;for(var c=0;c<d.length+64;c++)u.x^=d.charCodeAt(c)|0,u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function o(l,u){var d=new s(l),c=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var h=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=d.next,p.quick=p,c&&(typeof c=="object"&&i(c,d),p.state=function(){return i(d,{})}),p}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),wS=zt((e,t)=>{(function(a,n,r){function s(l){var u=this,d="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:d+=l;for(var c=0;c<d.length+64;c++)u.x^=d.charCodeAt(c)|0,c==d.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function o(l,u){var d=new s(l),c=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var h=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=d.next,p.quick=p,c&&(typeof c=="object"&&i(c,d),p.state=function(){return i(d,{})}),p}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),kS=zt((e,t)=>{(function(a,n,r){function s(l){var u=this;u.next=function(){var c=u.x,p=u.i,h,f,m;return h=c[p],h^=h>>>7,f=h^h<<24,h=c[p+1&7],f^=h^h>>>10,h=c[p+3&7],f^=h^h>>>3,h=c[p+4&7],f^=h^h<<7,h=c[p+7&7],h=h^h<<13,f^=h^h<<9,c[p]=f,u.i=p+1&7,f};function d(c,p){var h,f,m=[];if(p===(p|0))f=m[0]=p;else for(p=""+p,h=0;h<p.length;++h)m[h&7]=m[h&7]<<15^p.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],c.x=m,c.i=0,h=256;h>0;--h)c.next()}d(u,l)}function i(l,u){return u.x=l.x.slice(),u.i=l.i,u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),c=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var h=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=d.next,p.quick=p,c&&(c.x&&i(c,d),p.state=function(){return i(d,{})}),p}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),IS=zt((e,t)=>{(function(a,n,r){function s(l){var u=this;u.next=function(){var c=u.w,p=u.X,h=u.i,f,m;return u.w=c=c+1640531527|0,m=p[h+34&127],f=p[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=p[h]=m^f,u.i=h,m+(c^c>>>16)|0};function d(c,p){var h,f,m,g,A,y=[],x=128;for(p===(p|0)?(f=p,p=null):(p=p+"\0",f=0,x=Math.max(x,p.length)),m=0,g=-32;g<x;++g)p&&(f^=p.charCodeAt((g+32)%p.length)),g===0&&(A=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(A=A+1640531527|0,h=y[g&127]^=f+A,m=h==0?m+1:0);for(m>=128&&(y[(p&&p.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;c.w=A,c.X=y,c.i=m}d(u,l)}function i(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function o(l,u){l==null&&(l=+new Date);var d=new s(l),c=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var h=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=d.next,p.quick=p,c&&(c.X&&i(c,d),p.state=function(){return i(d,{})}),p}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),SS=zt((e,t)=>{(function(a,n,r){function s(l){var u=this,d="";u.next=function(){var p=u.b,h=u.c,f=u.d,m=u.a;return p=p<<25^p>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-p|0,u.b=p=p<<20^p>>>12^h,u.c=h=h-f|0,u.d=f<<16^h>>>16^m,u.a=m-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):d+=l;for(var c=0;c<d.length+20;c++)u.b^=d.charCodeAt(c)|0,u.next()}function i(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function o(l,u){var d=new s(l),c=u&&u.state,p=function(){return(d.next()>>>0)/4294967296};return p.double=function(){do var h=d.next()>>>11,f=(d.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},p.int32=d.next,p.quick=p,c&&(typeof c=="object"&&i(c,d),p.state=function(){return i(d,{})}),p}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),TS=zt(()=>{}),NS=zt((e,t)=>{(function(a,n,r){var s=256,i=6,o=52,l="random",u=r.pow(s,i),d=r.pow(2,o),c=d*2,p=s-1,h;function f(w,S,N){var C=[];S=S==!0?{entropy:!0}:S||{};var M=y(A(S.entropy?[w,b(n)]:w??x(),3),C),$=new m(C),E=function(){for(var I=$.g(i),R=u,P=0;I<d;)I=(I+P)*s,R*=s,P=$.g(1);for(;I>=c;)I/=2,R/=2,P>>>=1;return(I+P)/R};return E.int32=function(){return $.g(4)|0},E.quick=function(){return $.g(4)/4294967296},E.double=E,y(b($.S),n),(S.pass||N||function(I,R,P,D){return D&&(D.S&&g(D,$),I.state=function(){return g($,{})}),P?(r[l]=I,R):I})(E,M,"global"in S?S.global:this==r,S.state)}function m(w){var S,N=w.length,C=this,M=0,$=C.i=C.j=0,E=C.S=[];for(N||(w=[N++]);M<s;)E[M]=M++;for(M=0;M<s;M++)E[M]=E[$=p&$+w[M%N]+(S=E[M])],E[$]=S;(C.g=function(I){for(var R,P=0,D=C.i,W=C.j,V=C.S;I--;)R=V[D=p&D+1],P=P*s+V[p&(V[D]=V[W=p&W+R])+(V[W]=R)];return C.i=D,C.j=W,P})(s)}function g(w,S){return S.i=w.i,S.j=w.j,S.S=w.S.slice(),S}function A(w,S){var N=[],C=typeof w,M;if(S&&C=="object")for(M in w)try{N.push(A(w[M],S-1))}catch{}return N.length?N:C=="string"?w:w+"\0"}function y(w,S){for(var N=w+"",C,M=0;M<N.length;)S[p&M]=p&(C^=S[p&M]*19)+N.charCodeAt(M++);return b(S)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(s):(w=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(w)),b(w)}catch{var S=a.navigator,N=S&&S.plugins;return[+new Date,a,N,a.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(y(r.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=TS()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+l]=f})(typeof self<"u"?self:e,[],Math)}),g5=zt((e,t)=>{var a=bS(),n=vS(),r=wS(),s=kS(),i=IS(),o=SS(),l=NS();l.alea=a,l.xor128=n,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}),Ac=zt(()=>{}),A5=zt(()=>{}),CS=zt(()=>{}),ES=zt(()=>{}),RS=zt(()=>{}),_S=zt((e,t)=>{var a=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(r){r=r||{};function s(){return X.buffer!=ze&&st(X.buffer),ot}function i(){return X.buffer!=ze&&st(X.buffer),_a}function o(){return X.buffer!=ze&&st(X.buffer),Et}function l(){return X.buffer!=ze&&st(X.buffer),qt}function u(){return X.buffer!=ze&&st(X.buffer),ba}function d(){return X.buffer!=ze&&st(X.buffer),Ha}function c(){return X.buffer!=ze&&st(X.buffer),va}var p=typeof r<"u"?r:{},h,f;p.ready=new Promise(function(O,j){h=O,f=j});var m;typeof process<"u"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},p),A=[],y="./this.program",x=(O,j)=>{throw j},b=typeof window=="object",w=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=p.ENVIRONMENT_IS_PTHREAD||!1,C="";function M(O){return p.locateFile?p.locateFile(O,C):C+O}var $,E,I,R;function P(O){O instanceof Is||H("exiting due to exception: "+O)}if(S){w?C=Ac().dirname(C)+"/":C=__dirname+"/";var D,W;typeof m5=="function"&&(D=A5(),W=Ac()),$=(j,re)=>(j=W.normalize(j),D.readFileSync(j,re?void 0:"utf8")),I=j=>{var re=$(j,!0);return re.buffer||(re=new Uint8Array(re)),re},E=(j,re,de)=>{j=W.normalize(j),D.readFile(j,function(Se,qe){Se?de(Se):re(qe.buffer)})},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),A=process.argv.slice(2),process.on("uncaughtException",function(j){if(!(j instanceof Is))throw j}),process.on("unhandledRejection",function(j){throw j}),x=(j,re)=>{if(nn())throw process.exitCode=j,re;P(re),process.exit(j)},p.inspect=function(){return"[Emscripten Module object]"};let O;try{O=CS()}catch(j){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),j}global.Worker=O.Worker}else(b||w)&&(w?C=self.location.href:typeof document<"u"&&document.currentScript&&(C=document.currentScript.src),typeof n<"u"&&n&&(C=n),C.indexOf("blob:")!==0?C=C.substr(0,C.replace(/[?#].*/,"").lastIndexOf("/")+1):C="",S||($=O=>{var j=new XMLHttpRequest;return j.open("GET",O,!1),j.send(null),j.responseText},w&&(I=O=>{var j=new XMLHttpRequest;return j.open("GET",O,!1),j.responseType="arraybuffer",j.send(null),new Uint8Array(j.response)}),E=(O,j,re)=>{var de=new XMLHttpRequest;de.open("GET",O,!0),de.responseType="arraybuffer",de.onload=()=>{if(de.status==200||de.status==0&&de.response){j(de.response);return}re()},de.onerror=re,de.send(null)}),R=O=>document.title=O);S&&typeof performance>"u"&&(global.performance=ES().performance);var V=console.log.bind(console),G=console.warn.bind(console);S&&(V=O=>D.writeSync(1,O+`
`),G=O=>D.writeSync(2,O+`
`));var U=p.print||V,H=p.printErr||G;Object.assign(p,g),g=null,p.arguments&&(A=p.arguments),p.thisProgram&&(y=p.thisProgram),p.quit&&(x=p.quit);var Z=4,Q=Atomics.load,Y=Atomics.store,ee=Atomics.compareExchange,ne;p.wasmBinary&&(ne=p.wasmBinary);var J=p.noExitRuntime||!0;typeof WebAssembly!="object"&&Ao("no native wasm support detected");var X,fe,Ae=!1,Te;function Ie(O,j){O||Ao(j)}var Pe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Ye(O,j,re){for(var de=j+re,Se=j;O[Se]&&!(Se>=de);)++Se;if(Se-j>16&&O.buffer&&Pe)return Pe.decode(O.buffer instanceof SharedArrayBuffer?O.slice(j,Se):O.subarray(j,Se));for(var qe="";j<Se;){var Re=O[j++];if(!(Re&128)){qe+=String.fromCharCode(Re);continue}var Me=O[j++]&63;if((Re&224)==192){qe+=String.fromCharCode((Re&31)<<6|Me);continue}var _t=O[j++]&63;if((Re&240)==224?Re=(Re&15)<<12|Me<<6|_t:Re=(Re&7)<<18|Me<<12|_t<<6|O[j++]&63,Re<65536)qe+=String.fromCharCode(Re);else{var qa=Re-65536;qe+=String.fromCharCode(55296|qa>>10,56320|qa&1023)}}return qe}function rt(O,j){return O?Ye(i(),O,j):""}function Ze(O,j,re,de){if(!(de>0))return 0;for(var Se=re,qe=re+de-1,Re=0;Re<O.length;++Re){var Me=O.charCodeAt(Re);if(Me>=55296&&Me<=57343){var _t=O.charCodeAt(++Re);Me=65536+((Me&1023)<<10)|_t&1023}if(Me<=127){if(re>=qe)break;j[re++]=Me}else if(Me<=2047){if(re+1>=qe)break;j[re++]=192|Me>>6,j[re++]=128|Me&63}else if(Me<=65535){if(re+2>=qe)break;j[re++]=224|Me>>12,j[re++]=128|Me>>6&63,j[re++]=128|Me&63}else{if(re+3>=qe)break;j[re++]=240|Me>>18,j[re++]=128|Me>>12&63,j[re++]=128|Me>>6&63,j[re++]=128|Me&63}}return j[re]=0,re-Se}function Je(O,j,re){return Ze(O,i(),j,re)}var ze,ot,_a,Et,Ga,qt,ba,Ha,va;N&&(ze=p.buffer);function st(O){ze=O,p.HEAP8=ot=new Int8Array(O),p.HEAP16=Et=new Int16Array(O),p.HEAP32=qt=new Int32Array(O),p.HEAPU8=_a=new Uint8Array(O),p.HEAPU16=Ga=new Uint16Array(O),p.HEAPU32=ba=new Uint32Array(O),p.HEAPF32=Ha=new Float32Array(O),p.HEAPF64=va=new Float64Array(O)}var wa=p.INITIAL_MEMORY||16777216;if(N)X=p.wasmMemory,ze=p.buffer;else if(p.wasmMemory)X=p.wasmMemory;else if(X=new WebAssembly.Memory({initial:wa/65536,maximum:32768,shared:!0}),!(X.buffer instanceof SharedArrayBuffer))throw H("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),S&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");X&&(ze=X.buffer),wa=ze.byteLength,st(ze);var $a,jn=[],fo=[],$n=[],su=!1;function nn(){return J}function mo(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)Qh(p.preRun.shift());uu(jn)}function Wt(){su=!0,!N&&uu(fo)}function dp(){if(!N){if(p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)lA(p.postRun.shift());uu($n)}}function Qh(O){jn.unshift(O)}function e0(O){fo.unshift(O)}function lA(O){$n.unshift(O)}var yr=0,go=null,qn=null;function uA(O){yr++,p.monitorRunDependencies&&p.monitorRunDependencies(yr)}function dA(O){if(yr--,p.monitorRunDependencies&&p.monitorRunDependencies(yr),yr==0&&(go!==null&&(clearInterval(go),go=null),qn)){var j=qn;qn=null,j()}}function Ao(O){N?postMessage({cmd:"onAbort",arg:O}):p.onAbort&&p.onAbort(O),O="Aborted("+O+")",H(O),Ae=!0,Te=1,O+=". Build with -sASSERTIONS for more info.";var j=new WebAssembly.RuntimeError(O);throw f(j),j}var t0="data:application/octet-stream;base64,";function pp(O){return O.startsWith(t0)}function iu(O){return O.startsWith("file://")}var sa;sa="tfjs-backend-wasm-threaded-simd.wasm",pp(sa)||(sa=M(sa));function cp(O){try{if(O==sa&&ne)return new Uint8Array(ne);if(I)return I(O);throw"both async and sync fetching of the wasm failed"}catch(j){Ao(j)}}function a0(){if(!ne&&(b||w)){if(typeof fetch=="function"&&!iu(sa))return fetch(sa,{credentials:"same-origin"}).then(function(O){if(!O.ok)throw"failed to load wasm binary file at '"+sa+"'";return O.arrayBuffer()}).catch(function(){return cp(sa)});if(E)return new Promise(function(O,j){E(sa,function(re){O(new Uint8Array(re))},j)})}return Promise.resolve().then(function(){return cp(sa)})}function n0(){var O={env:Ip,wasi_snapshot_preview1:Ip};function j(Re,Me){var _t=Re.exports;if(p.asm=_t,h0(p.asm._emscripten_tls_init),$a=p.asm.__indirect_function_table,e0(p.asm.__wasm_call_ctors),fe=Me,!N){var qa=_e.unusedWorkers.length;_e.unusedWorkers.forEach(function(Kn){_e.loadWasmModuleToWorker(Kn,function(){--qa||dA("wasm-instantiate")})})}}N||uA("wasm-instantiate");function re(Re){j(Re.instance,Re.module)}function de(Re){return a0().then(function(Me){return WebAssembly.instantiate(Me,O)}).then(function(Me){return Me}).then(Re,function(Me){H("failed to asynchronously prepare wasm: "+Me),Ao(Me)})}function Se(){return!ne&&typeof WebAssembly.instantiateStreaming=="function"&&!pp(sa)&&!iu(sa)&&!S&&typeof fetch=="function"?fetch(sa,{credentials:"same-origin"}).then(function(Re){var Me=WebAssembly.instantiateStreaming(Re,O);return Me.then(re,function(_t){return H("wasm streaming compile failed: "+_t),H("falling back to ArrayBuffer instantiation"),de(re)})}):de(re)}if(p.instantiateWasm)try{var qe=p.instantiateWasm(O,j);return qe}catch(Re){H("Module.instantiateWasm callback failed with error: "+Re),f(Re)}return Se().catch(f),{}}var r0,pA,s0={};function Is(O){this.name="ExitStatus",this.message="Program terminated with exit("+O+")",this.status=O}function i0(O){var j=_e.pthreads[O];delete _e.pthreads[O],j.terminate(),Pf(O),_e.runningWorkers.splice(_e.runningWorkers.indexOf(j),1),j.pthread_ptr=0}function o0(O){var j=_e.pthreads[O];j.postMessage({cmd:"cancel"})}function ou(O){var j=_e.pthreads[O];Ie(j),_e.returnWorkerToPool(j)}function hp(O){var j=_e.getNewWorker();if(!j)return 6;_e.runningWorkers.push(j),_e.pthreads[O.pthread_ptr]=j,j.pthread_ptr=O.pthread_ptr;var re={cmd:"run",start_routine:O.startRoutine,arg:O.arg,pthread_ptr:O.pthread_ptr};return j.runPthread=()=>{re.time=performance.now(),j.postMessage(re,O.transferList)},j.loaded&&(j.runPthread(),delete j.runPthread),0}var fp={varargs:void 0,get:function(){fp.varargs+=4;var O=l()[fp.varargs-4>>2];return O},getStr:function(O){var j=rt(O);return j}};function lu(O){if(N)return xr(1,1,O);Te=O,nn()||(_e.terminateAllThreads(),p.onExit&&p.onExit(O),Ae=!0),x(O,new Is(O))}function cA(O,j){if(Te=O,!j&&N)throw gp(O),"unwind";lu(O)}var mp=cA;function l0(O){if(O instanceof Is||O=="unwind")return Te;x(1,O)}var _e={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){N?_e.initWorker():_e.initMainThread()},initMainThread:function(){for(var O=8;O--;)_e.allocateUnusedWorker()},initWorker:function(){J=!1},setExitStatus:function(O){Te=O},terminateAllThreads:function(){for(var O of Object.values(_e.pthreads))_e.returnWorkerToPool(O);for(var O of _e.unusedWorkers)O.terminate();_e.unusedWorkers=[]},returnWorkerToPool:function(O){var j=O.pthread_ptr;delete _e.pthreads[j],_e.unusedWorkers.push(O),_e.runningWorkers.splice(_e.runningWorkers.indexOf(O),1),O.pthread_ptr=0,Pf(j)},receiveObjectTransfer:function(O){},threadInitTLS:function(){_e.tlsInitFunctions.forEach(O=>O())},loadWasmModuleToWorker:function(O,j){O.onmessage=re=>{var de=re.data,Se=de.cmd;if(O.pthread_ptr&&(_e.currentProxiedOperationCallerThread=O.pthread_ptr),de.targetThread&&de.targetThread!=Rp()){var qe=_e.pthreads[de.targetThread];qe?qe.postMessage(de,de.transferList):H('Internal error! Worker sent a message "'+Se+'" to target pthread '+de.targetThread+", but that thread no longer exists!"),_e.currentProxiedOperationCallerThread=void 0;return}Se==="processProxyingQueue"?du(de.queue):Se==="spawnThread"?hp(de):Se==="cleanupThread"?ou(de.thread):Se==="killThread"?i0(de.thread):Se==="cancelThread"?o0(de.thread):Se==="loaded"?(O.loaded=!0,j&&j(O),O.runPthread&&(O.runPthread(),delete O.runPthread)):Se==="print"?U("Thread "+de.threadId+": "+de.text):Se==="printErr"?H("Thread "+de.threadId+": "+de.text):Se==="alert"?alert("Thread "+de.threadId+": "+de.text):de.target==="setimmediate"?O.postMessage(de):Se==="onAbort"?p.onAbort&&p.onAbort(de.arg):Se&&H("worker sent an unknown command "+Se),_e.currentProxiedOperationCallerThread=void 0},O.onerror=re=>{var de="worker sent an error!";throw H(de+" "+re.filename+":"+re.lineno+": "+re.message),re},S&&(O.on("message",function(re){O.onmessage({data:re})}),O.on("error",function(re){O.onerror(re)}),O.on("detachedExit",function(){})),O.postMessage({cmd:"load",urlOrBlob:p.mainScriptUrlOrBlob||n,wasmMemory:X,wasmModule:fe})},allocateUnusedWorker:function(){var O=M("tfjs-backend-wasm-threaded-simd.worker.js");_e.unusedWorkers.push(new Worker(O))},getNewWorker:function(){return _e.unusedWorkers.length==0&&(_e.allocateUnusedWorker(),_e.loadWasmModuleToWorker(_e.unusedWorkers[0])),_e.unusedWorkers.pop()}};p.PThread=_e;function uu(O){for(;O.length>0;)O.shift()(p)}function u0(O){var j=Df(),re=O();return _p(j),re}function hA(O){return O}function fA(O){var j=/\b_Z[\w\d_]+/g;return O.replace(j,function(re){var de=re;return re===de?re:de+" ["+re+"]"})}function d0(){var O=Rp(),j=l()[O+44>>2],re=l()[O+48>>2],de=j-re;vA(j,de),_p(j)}p.establishStackSpace=d0;function gp(O){if(N)return xr(2,0,O);try{mp(O)}catch(j){l0(j)}}var yo=[];function p0(O){var j=yo[O];return j||(O>=yo.length&&(yo.length=O+1),yo[O]=j=$a.get(O)),j}function c0(O,j){var re=p0(O)(j);nn()?_e.setExitStatus(re):bA(re)}p.invokeEntryPoint=c0;function mA(){var O=new Error;if(!O.stack){try{throw new Error}catch(j){O=j}if(!O.stack)return"(no stack trace available)"}return O.stack.toString()}function h0(O){_e.tlsInitFunctions.push(O)}function f0(O,j){s().set(O,j)}function m0(O){AA(O,!w,1,!b),_e.threadInitTLS()}function g0(O){N?postMessage({cmd:"cleanupThread",thread:O}):ou(O)}function Ap(O,j,re,de){return N?xr(3,1,O,j,re,de):yp(O,j,re,de)}function yp(O,j,re,de){if(typeof SharedArrayBuffer>"u")return H("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Se=[],qe=0;if(N&&(Se.length===0||qe))return Ap(O,j,re,de);if(qe)return qe;var Re={startRoutine:re,pthread_ptr:O,arg:de,transferList:Se};return N?(Re.cmd="spawnThread",postMessage(Re,Se),0):hp(Re)}function A0(){return 2097152}var y0=!0;function x0(){return y0}function du(O){Atomics.store(l(),O>>2,1),Rp()&&xA(O),Atomics.compareExchange(l(),O>>2,1,0)}p.executeNotifiedProxyingQueue=du;function b0(O,j,re,de){if(O==j)setTimeout(()=>du(de));else if(N)postMessage({targetThread:O,cmd:"processProxyingQueue",queue:de});else{var Se=_e.pthreads[O];if(!Se)return;Se.postMessage({cmd:"processProxyingQueue",queue:de})}return 1}function v0(O,j,re){return-1}function w0(){Ao("")}function Ss(O){Ss.shown||(Ss.shown={}),Ss.shown[O]||(Ss.shown[O]=1,S&&(O="warning: "+O),H(O))}function k0(){S||w||Ss("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function I0(){return Date.now()}function xp(){return 2147483648}function S0(){return xp()}var xo;S?xo=()=>{var O=process.hrtime();return O[0]*1e3+O[1]/1e6}:N?xo=()=>performance.now()-p.__performance_now_clock_drift:xo=()=>performance.now();function T0(O,j,re){i().copyWithin(O,j,j+re)}function N0(){return S?RS().cpus().length:navigator.hardwareConcurrency}function xr(O,j){var re=arguments.length-2,de=arguments;return u0(()=>{for(var Se=re,qe=$p(Se*8),Re=qe>>3,Me=0;Me<re;Me++){var _t=de[2+Me];c()[Re+Me]=_t}return yA(O,Se,qe,j)})}var pu=[];function C0(O,j,re){pu.length=j;for(var de=re>>3,Se=0;Se<j;Se++)pu[Se]=c()[de+Se];var qe=O<0,Re=qe?s0[-O-1]:P0[O];return Re.apply(null,pu)}function E0(O){try{return X.grow(O-ze.byteLength+65535>>>16),st(X.buffer),1}catch{}}function R0(O){var j=i().length;if(O=O>>>0,O<=j)return!1;var re=xp();if(O>re)return!1;let de=(_t,qa)=>_t+(qa-_t%qa)%qa;for(var Se=1;Se<=4;Se*=2){var qe=j*(1+.2/Se);qe=Math.min(qe,O+100663296);var Re=Math.min(re,de(Math.max(O,qe),65536)),Me=E0(Re);if(Me)return!0}return!1}function _0(){throw"unwind"}function bp(O){return N?xr(4,1,O):52}function vp(O,j,re,de,Se){return N?xr(5,1,O,j,re,de,Se):70}var $0=[null,[],[]];function M0(O,j){var re=$0[O];j===0||j===10?((O===1?U:H)(Ye(re,0)),re.length=0):re.push(j)}function wp(O,j,re,de){if(N)return xr(6,1,O,j,re,de);for(var Se=0,qe=0;qe<re;qe++){var Re=u()[j>>2],Me=u()[j+4>>2];j+=8;for(var _t=0;_t<Me;_t++)M0(O,i()[Re+_t]);Se+=Me}return u()[de>>2]=Se,0}function kp(O){var j=p["_"+O];return j}function F0(O,j,re,de,Se){var qe={string:Xa=>{var ko=0;if(Xa!=null&&Xa!==0){var IA=(Xa.length<<2)+1;ko=$p(IA),Je(Xa,ko,IA)}return ko},array:Xa=>{var ko=$p(Xa.length);return f0(Xa,ko),ko}};function Re(Xa){return j==="string"?rt(Xa):j==="boolean"?Boolean(Xa):Xa}var Me=kp(O),_t=[],qa=0;if(de)for(var Kn=0;Kn<de.length;Kn++){var kA=qe[re[Kn]];kA?(qa===0&&(qa=Df()),_t[Kn]=kA(de[Kn])):_t[Kn]=de[Kn]}var zf=Me.apply(null,_t);function uS(Xa){return qa!==0&&_p(qa),Re(Xa)}return zf=uS(zf),zf}function O0(O,j,re,de){re=re||[];var Se=re.every(Re=>Re==="number"||Re==="boolean"),qe=j!=="string";return qe&&Se&&!de?kp(O):function(){return F0(O,j,re,arguments,de)}}_e.init();var P0=[null,lu,gp,Ap,bp,vp,wp],Ip={__emscripten_init_main_thread_js:m0,__emscripten_thread_cleanup:g0,__pthread_create_js:yp,_emscripten_default_pthread_stack_size:A0,_emscripten_get_now_is_monotonic:x0,_emscripten_notify_task_queue:b0,_emscripten_set_offscreencanvas_size:v0,abort:w0,emscripten_check_blocking_allowed:k0,emscripten_date_now:I0,emscripten_get_heap_max:S0,emscripten_get_now:xo,emscripten_memcpy_big:T0,emscripten_num_logical_cores:N0,emscripten_receive_on_main_thread_js:C0,emscripten_resize_heap:R0,emscripten_unwind_to_js_event_loop:_0,exit:mp,fd_close:bp,fd_seek:vp,fd_write:wp,memory:X||p.wasmMemory},gA=n0(),D0=p.___wasm_call_ctors=function(){return(D0=p.___wasm_call_ctors=p.asm.__wasm_call_ctors).apply(null,arguments)},z0=p._init=function(){return(z0=p._init=p.asm.init).apply(null,arguments)},L0=p._init_with_threads_count=function(){return(L0=p._init_with_threads_count=p.asm.init_with_threads_count).apply(null,arguments)},W0=p._get_threads_count=function(){return(W0=p._get_threads_count=p.asm.get_threads_count).apply(null,arguments)},B0=p._register_tensor=function(){return(B0=p._register_tensor=p.asm.register_tensor).apply(null,arguments)},V0=p._dispose_data=function(){return(V0=p._dispose_data=p.asm.dispose_data).apply(null,arguments)},U0=p._dispose=function(){return(U0=p._dispose=p.asm.dispose).apply(null,arguments)},G0=p._Abs=function(){return(G0=p._Abs=p.asm.Abs).apply(null,arguments)},H0=p._Add=function(){return(H0=p._Add=p.asm.Add).apply(null,arguments)},j0=p._AddN=function(){return(j0=p._AddN=p.asm.AddN).apply(null,arguments)},q0=p._All=function(){return(q0=p._All=p.asm.All).apply(null,arguments)},X0=p._Any=function(){return(X0=p._Any=p.asm.Any).apply(null,arguments)},K0=p._ArgMax=function(){return(K0=p._ArgMax=p.asm.ArgMax).apply(null,arguments)},Z0=p._AvgPool=function(){return(Z0=p._AvgPool=p.asm.AvgPool).apply(null,arguments)},Y0=p._BatchMatMul=function(){return(Y0=p._BatchMatMul=p.asm.BatchMatMul).apply(null,arguments)},J0=p._Ceil=function(){return(J0=p._Ceil=p.asm.Ceil).apply(null,arguments)},Q0=p._ClipByValue=function(){return(Q0=p._ClipByValue=p.asm.ClipByValue).apply(null,arguments)},ef=p._Conv2D=function(){return(ef=p._Conv2D=p.asm.Conv2D).apply(null,arguments)},tf=p._Conv2DBackpropInput=function(){return(tf=p._Conv2DBackpropInput=p.asm.Conv2DBackpropInput).apply(null,arguments)},af=p._Cos=function(){return(af=p._Cos=p.asm.Cos).apply(null,arguments)},nf=p._Cosh=function(){return(nf=p._Cosh=p.asm.Cosh).apply(null,arguments)},rf=p._CropAndResize=function(){return(rf=p._CropAndResize=p.asm.CropAndResize).apply(null,arguments)},sf=p._Cumprod=function(){return(sf=p._Cumprod=p.asm.Cumprod).apply(null,arguments)},of=p._Cumsum=function(){return(of=p._Cumsum=p.asm.Cumsum).apply(null,arguments)},lf=p._DepthToSpace=function(){return(lf=p._DepthToSpace=p.asm.DepthToSpace).apply(null,arguments)},uf=p._DepthwiseConv2dNative=function(){return(uf=p._DepthwiseConv2dNative=p.asm.DepthwiseConv2dNative).apply(null,arguments)},df=p._Elu=function(){return(df=p._Elu=p.asm.Elu).apply(null,arguments)},pf=p._Equal=function(){return(pf=p._Equal=p.asm.Equal).apply(null,arguments)},cf=p._Exp=function(){return(cf=p._Exp=p.asm.Exp).apply(null,arguments)},hf=p._FlipLeftRight=function(){return(hf=p._FlipLeftRight=p.asm.FlipLeftRight).apply(null,arguments)},ff=p._Floor=function(){return(ff=p._Floor=p.asm.Floor).apply(null,arguments)},mf=p._FloorDiv=function(){return(mf=p._FloorDiv=p.asm.FloorDiv).apply(null,arguments)},gf=p._FusedBatchNorm=function(){return(gf=p._FusedBatchNorm=p.asm.FusedBatchNorm).apply(null,arguments)},Af=p._FusedConv2D=function(){return(Af=p._FusedConv2D=p.asm.FusedConv2D).apply(null,arguments)},yf=p._FusedDepthwiseConv2D=function(){return(yf=p._FusedDepthwiseConv2D=p.asm.FusedDepthwiseConv2D).apply(null,arguments)},xf=p._Gather=function(){return(xf=p._Gather=p.asm.Gather).apply(null,arguments)},bf=p._GatherNd=function(){return(bf=p._GatherNd=p.asm.GatherNd).apply(null,arguments)},vf=p._Greater=function(){return(vf=p._Greater=p.asm.Greater).apply(null,arguments)},wf=p._GreaterEqual=function(){return(wf=p._GreaterEqual=p.asm.GreaterEqual).apply(null,arguments)},kf=p._LeakyRelu=function(){return(kf=p._LeakyRelu=p.asm.LeakyRelu).apply(null,arguments)},If=p._Less=function(){return(If=p._Less=p.asm.Less).apply(null,arguments)},Sf=p._LessEqual=function(){return(Sf=p._LessEqual=p.asm.LessEqual).apply(null,arguments)},Tf=p._Log=function(){return(Tf=p._Log=p.asm.Log).apply(null,arguments)},Nf=p._LogicalAnd=function(){return(Nf=p._LogicalAnd=p.asm.LogicalAnd).apply(null,arguments)},Cf=p._LogicalNot=function(){return(Cf=p._LogicalNot=p.asm.LogicalNot).apply(null,arguments)},Ef=p._LogicalOr=function(){return(Ef=p._LogicalOr=p.asm.LogicalOr).apply(null,arguments)},Rf=p._LogicalXor=function(){return(Rf=p._LogicalXor=p.asm.LogicalXor).apply(null,arguments)},_f=p._Max=function(){return(_f=p._Max=p.asm.Max).apply(null,arguments)},Sp=p._MaxPool=function(){return(Sp=p._MaxPool=p.asm.MaxPool).apply(null,arguments)},Tp=p._Maximum=function(){return(Tp=p._Maximum=p.asm.Maximum).apply(null,arguments)},cu=p._Mean=function(){return(cu=p._Mean=p.asm.Mean).apply(null,arguments)},$f=p._Min=function(){return($f=p._Min=p.asm.Min).apply(null,arguments)},Mf=p._Minimum=function(){return(Mf=p._Minimum=p.asm.Minimum).apply(null,arguments)},bo=p._MirrorPad=function(){return(bo=p._MirrorPad=p.asm.MirrorPad).apply(null,arguments)},Np=p._Multiply=function(){return(Np=p._Multiply=p.asm.Multiply).apply(null,arguments)},vo=p._Neg=function(){return(vo=p._Neg=p.asm.Neg).apply(null,arguments)},wo=p._NonMaxSuppressionV3=function(){return(wo=p._NonMaxSuppressionV3=p.asm.NonMaxSuppressionV3).apply(null,arguments)},Ff=p._NonMaxSuppressionV4=function(){return(Ff=p._NonMaxSuppressionV4=p.asm.NonMaxSuppressionV4).apply(null,arguments)},K=p._NonMaxSuppressionV5=function(){return(K=p._NonMaxSuppressionV5=p.asm.NonMaxSuppressionV5).apply(null,arguments)},se=p._NotEqual=function(){return(se=p._NotEqual=p.asm.NotEqual).apply(null,arguments)},be=p._OneHot=function(){return(be=p._OneHot=p.asm.OneHot).apply(null,arguments)},He=p._PadV2=function(){return(He=p._PadV2=p.asm.PadV2).apply(null,arguments)},At=p._Pow=function(){return(At=p._Pow=p.asm.Pow).apply(null,arguments)},yt=p._Prelu=function(){return(yt=p._Prelu=p.asm.Prelu).apply(null,arguments)},Ge=p._Prod=function(){return(Ge=p._Prod=p.asm.Prod).apply(null,arguments)},We=p._RealDiv=function(){return(We=p._RealDiv=p.asm.RealDiv).apply(null,arguments)},Rt=p._Relu=function(){return(Rt=p._Relu=p.asm.Relu).apply(null,arguments)},ja=p._Relu6=function(){return(ja=p._Relu6=p.asm.Relu6).apply(null,arguments)},Xn=p._ResizeBilinear=function(){return(Xn=p._ResizeBilinear=p.asm.ResizeBilinear).apply(null,arguments)},Cp=p._ResizeNearestNeighbor=function(){return(Cp=p._ResizeNearestNeighbor=p.asm.ResizeNearestNeighbor).apply(null,arguments)},hu=p._Reverse=function(){return(hu=p._Reverse=p.asm.Reverse).apply(null,arguments)},Of=p._RotateWithOffset=function(){return(Of=p._RotateWithOffset=p.asm.RotateWithOffset).apply(null,arguments)},ka=p._Round=function(){return(ka=p._Round=p.asm.Round).apply(null,arguments)},br=p._Rsqrt=function(){return(br=p._Rsqrt=p.asm.Rsqrt).apply(null,arguments)},Ep=p._ScatterNd=function(){return(Ep=p._ScatterNd=p.asm.ScatterNd).apply(null,arguments)},_I=p._SelectV2=function(){return(_I=p._SelectV2=p.asm.SelectV2).apply(null,arguments)},$I=p._Sigmoid=function(){return($I=p._Sigmoid=p.asm.Sigmoid).apply(null,arguments)},MI=p._Sin=function(){return(MI=p._Sin=p.asm.Sin).apply(null,arguments)},FI=p._Softmax=function(){return(FI=p._Softmax=p.asm.Softmax).apply(null,arguments)},OI=p._SparseFillEmptyRows=function(){return(OI=p._SparseFillEmptyRows=p.asm.SparseFillEmptyRows).apply(null,arguments)},PI=p._SparseReshape=function(){return(PI=p._SparseReshape=p.asm.SparseReshape).apply(null,arguments)},DI=p._SparseSegmentReduction=function(){return(DI=p._SparseSegmentReduction=p.asm.SparseSegmentReduction).apply(null,arguments)},zI=p._Sqrt=function(){return(zI=p._Sqrt=p.asm.Sqrt).apply(null,arguments)},LI=p._Square=function(){return(LI=p._Square=p.asm.Square).apply(null,arguments)},WI=p._SquaredDifference=function(){return(WI=p._SquaredDifference=p.asm.SquaredDifference).apply(null,arguments)},BI=p._Step=function(){return(BI=p._Step=p.asm.Step).apply(null,arguments)},VI=p._StridedSlice=function(){return(VI=p._StridedSlice=p.asm.StridedSlice).apply(null,arguments)},UI=p._Sub=function(){return(UI=p._Sub=p.asm.Sub).apply(null,arguments)},GI=p._Sum=function(){return(GI=p._Sum=p.asm.Sum).apply(null,arguments)},HI=p._Tan=function(){return(HI=p._Tan=p.asm.Tan).apply(null,arguments)},jI=p._Tanh=function(){return(jI=p._Tanh=p.asm.Tanh).apply(null,arguments)},qI=p._Tile=function(){return(qI=p._Tile=p.asm.Tile).apply(null,arguments)},XI=p._TopK=function(){return(XI=p._TopK=p.asm.TopK).apply(null,arguments)},KI=p._Transform=function(){return(KI=p._Transform=p.asm.Transform).apply(null,arguments)},ZI=p._Transpose=function(){return(ZI=p._Transpose=p.asm.Transpose).apply(null,arguments)},YI=p.__FusedMatMul=function(){return(YI=p.__FusedMatMul=p.asm._FusedMatMul).apply(null,arguments)},JI=p._malloc=function(){return(JI=p._malloc=p.asm.malloc).apply(null,arguments)},QI=p._free=function(){return(QI=p._free=p.asm.free).apply(null,arguments)},eS=p.__emscripten_tls_init=function(){return(eS=p.__emscripten_tls_init=p.asm._emscripten_tls_init).apply(null,arguments)},Rp=p._pthread_self=function(){return(Rp=p._pthread_self=p.asm.pthread_self).apply(null,arguments)},tS=p.___errno_location=function(){return(tS=p.___errno_location=p.asm.__errno_location).apply(null,arguments)},AA=p.__emscripten_thread_init=function(){return(AA=p.__emscripten_thread_init=p.asm._emscripten_thread_init).apply(null,arguments)},aS=p.__emscripten_thread_crashed=function(){return(aS=p.__emscripten_thread_crashed=p.asm._emscripten_thread_crashed).apply(null,arguments)},nS=p._emscripten_main_thread_process_queued_calls=function(){return(nS=p._emscripten_main_thread_process_queued_calls=p.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},rS=p._emscripten_main_browser_thread_id=function(){return(rS=p._emscripten_main_browser_thread_id=p.asm.emscripten_main_browser_thread_id).apply(null,arguments)},yA=p._emscripten_run_in_main_runtime_thread_js=function(){return(yA=p._emscripten_run_in_main_runtime_thread_js=p.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},sS=p._emscripten_dispatch_to_thread_=function(){return(sS=p._emscripten_dispatch_to_thread_=p.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},xA=p.__emscripten_proxy_execute_task_queue=function(){return(xA=p.__emscripten_proxy_execute_task_queue=p.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Pf=p.__emscripten_thread_free_data=function(){return(Pf=p.__emscripten_thread_free_data=p.asm._emscripten_thread_free_data).apply(null,arguments)},bA=p.__emscripten_thread_exit=function(){return(bA=p.__emscripten_thread_exit=p.asm._emscripten_thread_exit).apply(null,arguments)},vA=p._emscripten_stack_set_limits=function(){return(vA=p._emscripten_stack_set_limits=p.asm.emscripten_stack_set_limits).apply(null,arguments)},Df=p.stackSave=function(){return(Df=p.stackSave=p.asm.stackSave).apply(null,arguments)},_p=p.stackRestore=function(){return(_p=p.stackRestore=p.asm.stackRestore).apply(null,arguments)},$p=p.stackAlloc=function(){return($p=p.stackAlloc=p.asm.stackAlloc).apply(null,arguments)},iS=p.dynCall_iijjiiii=function(){return(iS=p.dynCall_iijjiiii=p.asm.dynCall_iijjiiii).apply(null,arguments)},oS=p.dynCall_jiji=function(){return(oS=p.dynCall_jiji=p.asm.dynCall_jiji).apply(null,arguments)};p.keepRuntimeAlive=nn,p.wasmMemory=X,p.cwrap=O0,p.ExitStatus=Is,p.PThread=_e;var Mp;qn=function O(){Mp||wA(),Mp||(qn=O)};function wA(O){if(O=O||A,yr>0)return;if(N){h(p),Wt(),postMessage({cmd:"loaded"});return}if(mo(),yr>0)return;function j(){Mp||(Mp=!0,p.calledRun=!0,!Ae&&(Wt(),h(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),dp()))}p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),j()},1)):j()}if(p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();wA();var Fp;m&&(Fp={uncaughtException:process.listeners("uncaughtException").filter(function(O){return!m.uncaughtException.indexOf(O)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(O){return!m.unhandledRejection.indexOf(O)>-1})});var Op;if(typeof WasmBackendModule<"u")Op=WasmBackendModule;else if(typeof r<"u")Op=r;else throw new Error("Could not find wasm module in post.js");if(Fp){var lS=Op._dispose;Op._dispose=function(){lS(),Fp.uncaughtException.forEach(function(O){process.removeListener("uncaughtException",O)}),Fp.unhandledRejection.forEach(function(O){process.removeListener("unhandledRejection",O)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=a)}),$S=zt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),MS=zt((e,t)=>{var a=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(r){r=r||{};var s=typeof r<"u"?r:{},i,o;s.ready=new Promise(function(K,se){i=K,o=se});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},s),d=[],c="./this.program",p=(K,se)=>{throw se},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function A(K){return s.locateFile?s.locateFile(K,g):g+K}var y,x,b,w;function S(K){K instanceof go||$("exiting due to exception: "+K)}if(m){f?g=Ac().dirname(g)+"/":g=__dirname+"/";var N,C;typeof m5=="function"&&(N=A5(),C=Ac()),y=(K,se)=>(K=C.normalize(K),N.readFileSync(K,se?void 0:"utf8")),b=K=>{var se=y(K,!0);return se.buffer||(se=new Uint8Array(se)),se},x=(K,se,be)=>{K=C.normalize(K),N.readFile(K,function(He,At){He?be(He):se(At.buffer)})},process.argv.length>1&&(c=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof go))throw K}),process.on("unhandledRejection",function(K){throw K}),p=(K,se)=>{if(_a())throw process.exitCode=K,se;S(se),process.exit(K)},s.inspect=function(){return"[Emscripten Module object]"}}else(h||f)&&(f?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),n&&(g=n),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",y=K=>{var se=new XMLHttpRequest;return se.open("GET",K,!1),se.send(null),se.responseText},f&&(b=K=>{var se=new XMLHttpRequest;return se.open("GET",K,!1),se.responseType="arraybuffer",se.send(null),new Uint8Array(se.response)}),x=(K,se,be)=>{var He=new XMLHttpRequest;He.open("GET",K,!0),He.responseType="arraybuffer",He.onload=()=>{if(He.status==200||He.status==0&&He.response){se(He.response);return}be()},He.onerror=be,He.send(null)},w=K=>document.title=K);var M=s.print||console.log.bind(console),$=s.printErr||console.warn.bind(console);Object.assign(s,u),u=null,s.arguments&&(d=s.arguments),s.thisProgram&&(c=s.thisProgram),s.quit&&(p=s.quit);var E=4,I;s.wasmBinary&&(I=s.wasmBinary);var R=s.noExitRuntime||!0;typeof WebAssembly!="object"&&$n("no native wasm support detected");var P,D=!1,W;function V(K,se){K||$n(se)}var G=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function U(K,se,be){for(var He=se+be,At=se;K[At]&&!(At>=He);)++At;if(At-se>16&&K.buffer&&G)return G.decode(K.subarray(se,At));for(var yt="";se<At;){var Ge=K[se++];if(!(Ge&128)){yt+=String.fromCharCode(Ge);continue}var We=K[se++]&63;if((Ge&224)==192){yt+=String.fromCharCode((Ge&31)<<6|We);continue}var Rt=K[se++]&63;if((Ge&240)==224?Ge=(Ge&15)<<12|We<<6|Rt:Ge=(Ge&7)<<18|We<<12|Rt<<6|K[se++]&63,Ge<65536)yt+=String.fromCharCode(Ge);else{var ja=Ge-65536;yt+=String.fromCharCode(55296|ja>>10,56320|ja&1023)}}return yt}function H(K,se){return K?U(ne,K,se):""}function Z(K,se,be,He){if(!(He>0))return 0;for(var At=be,yt=be+He-1,Ge=0;Ge<K.length;++Ge){var We=K.charCodeAt(Ge);if(We>=55296&&We<=57343){var Rt=K.charCodeAt(++Ge);We=65536+((We&1023)<<10)|Rt&1023}if(We<=127){if(be>=yt)break;se[be++]=We}else if(We<=2047){if(be+1>=yt)break;se[be++]=192|We>>6,se[be++]=128|We&63}else if(We<=65535){if(be+2>=yt)break;se[be++]=224|We>>12,se[be++]=128|We>>6&63,se[be++]=128|We&63}else{if(be+3>=yt)break;se[be++]=240|We>>18,se[be++]=128|We>>12&63,se[be++]=128|We>>6&63,se[be++]=128|We&63}}return se[be]=0,be-At}function Q(K,se,be){return Z(K,ne,se,be)}var Y,ee,ne,J,X,fe,Ae,Te,Ie;function Pe(K){Y=K,s.HEAP8=ee=new Int8Array(K),s.HEAP16=J=new Int16Array(K),s.HEAP32=fe=new Int32Array(K),s.HEAPU8=ne=new Uint8Array(K),s.HEAPU16=X=new Uint16Array(K),s.HEAPU32=Ae=new Uint32Array(K),s.HEAPF32=Te=new Float32Array(K),s.HEAPF64=Ie=new Float64Array(K)}var Ye=s.INITIAL_MEMORY||16777216,rt,Ze=[],Je=[],ze=[],ot=!1;function _a(){return R}function Et(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)ba(s.preRun.shift());qn(Ze)}function Ga(){ot=!0,qn(Je)}function qt(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)va(s.postRun.shift());qn(ze)}function ba(K){Ze.unshift(K)}function Ha(K){Je.unshift(K)}function va(K){ze.unshift(K)}var st=0,wa=null,$a=null;function jn(K){st++,s.monitorRunDependencies&&s.monitorRunDependencies(st)}function fo(K){if(st--,s.monitorRunDependencies&&s.monitorRunDependencies(st),st==0&&(wa!==null&&(clearInterval(wa),wa=null),$a)){var se=$a;$a=null,se()}}function $n(K){s.onAbort&&s.onAbort(K),K="Aborted("+K+")",$(K),D=!0,W=1,K+=". Build with -sASSERTIONS for more info.";var se=new WebAssembly.RuntimeError(K);throw o(se),se}var su="data:application/octet-stream;base64,";function nn(K){return K.startsWith(su)}function mo(K){return K.startsWith("file://")}var Wt;Wt="tfjs-backend-wasm.wasm",nn(Wt)||(Wt=A(Wt));function dp(K){try{if(K==Wt&&I)return new Uint8Array(I);if(b)return b(K);throw"both async and sync fetching of the wasm failed"}catch(se){$n(se)}}function Qh(){if(!I&&(h||f)){if(typeof fetch=="function"&&!mo(Wt))return fetch(Wt,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+Wt+"'";return K.arrayBuffer()}).catch(function(){return dp(Wt)});if(x)return new Promise(function(K,se){x(Wt,function(be){K(new Uint8Array(be))},se)})}return Promise.resolve().then(function(){return dp(Wt)})}function e0(){var K={env:lu,wasi_snapshot_preview1:lu};function se(Ge,We){var Rt=Ge.exports;s.asm=Rt,P=s.asm.memory,Pe(P.buffer),rt=s.asm.__indirect_function_table,Ha(s.asm.__wasm_call_ctors),fo("wasm-instantiate")}jn("wasm-instantiate");function be(Ge){se(Ge.instance)}function He(Ge){return Qh().then(function(We){return WebAssembly.instantiate(We,K)}).then(function(We){return We}).then(Ge,function(We){$("failed to asynchronously prepare wasm: "+We),$n(We)})}function At(){return!I&&typeof WebAssembly.instantiateStreaming=="function"&&!nn(Wt)&&!mo(Wt)&&!m&&typeof fetch=="function"?fetch(Wt,{credentials:"same-origin"}).then(function(Ge){var We=WebAssembly.instantiateStreaming(Ge,K);return We.then(be,function(Rt){return $("wasm streaming compile failed: "+Rt),$("falling back to ArrayBuffer instantiation"),He(be)})}):He(be)}if(s.instantiateWasm)try{var yt=s.instantiateWasm(K,se);return yt}catch(Ge){$("Module.instantiateWasm callback failed with error: "+Ge),o(Ge)}return At().catch(o),{}}var lA,yr;function go(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}function qn(K){for(;K.length>0;)K.shift()(s)}function uA(K){return K}function dA(K){var se=/\b_Z[\w\d_]+/g;return K.replace(se,function(be){var He=be;return be===He?be:He+" ["+be+"]"})}function Ao(){var K=new Error;if(!K.stack){try{throw new Error}catch(se){K=se}if(!K.stack)return"(no stack trace available)"}return K.stack.toString()}function t0(K,se){ee.set(K,se)}function pp(){$n("")}function iu(){return 2147483648}function sa(){return iu()}function cp(K,se,be){ne.copyWithin(K,se,se+be)}function a0(K){try{return P.grow(K-Y.byteLength+65535>>>16),Pe(P.buffer),1}catch{}}function n0(K){var se=ne.length;K=K>>>0;var be=iu();if(K>be)return!1;let He=(Rt,ja)=>Rt+(ja-Rt%ja)%ja;for(var At=1;At<=4;At*=2){var yt=se*(1+.2/At);yt=Math.min(yt,K+100663296);var Ge=Math.min(be,He(Math.max(K,yt),65536)),We=a0(Ge);if(We)return!0}return!1}var r0={varargs:void 0,get:function(){r0.varargs+=4;var K=fe[r0.varargs-4>>2];return K},getStr:function(K){var se=H(K);return se}};function pA(K){return 52}function s0(K,se,be,He,At){return 70}var Is=[null,[],[]];function i0(K,se){var be=Is[K];se===0||se===10?((K===1?M:$)(U(be,0)),be.length=0):be.push(se)}function o0(K,se,be,He){for(var At=0,yt=0;yt<be;yt++){var Ge=Ae[se>>2],We=Ae[se+4>>2];se+=8;for(var Rt=0;Rt<We;Rt++)i0(K,ne[Ge+Rt]);At+=We}return Ae[He>>2]=At,0}function ou(K){var se=s["_"+K];return se}function hp(K,se,be,He,At){var yt={string:ka=>{var br=0;if(ka!=null&&ka!==0){var Ep=(ka.length<<2)+1;br=cu(Ep),Q(ka,br,Ep)}return br},array:ka=>{var br=cu(ka.length);return t0(ka,br),br}};function Ge(ka){return se==="string"?H(ka):se==="boolean"?Boolean(ka):ka}var We=ou(K),Rt=[],ja=0;if(He)for(var Xn=0;Xn<He.length;Xn++){var Cp=yt[be[Xn]];Cp?(ja===0&&(ja=Sp()),Rt[Xn]=Cp(He[Xn])):Rt[Xn]=He[Xn]}var hu=We.apply(null,Rt);function Of(ka){return ja!==0&&Tp(ja),Ge(ka)}return hu=Of(hu),hu}function fp(K,se,be,He){be=be||[];var At=be.every(Ge=>Ge==="number"||Ge==="boolean"),yt=se!=="string";return yt&&At&&!He?ou(K):function(){return hp(K,se,be,arguments,He)}}var lu={abort:pp,emscripten_get_heap_max:sa,emscripten_memcpy_big:cp,emscripten_resize_heap:n0,fd_close:pA,fd_seek:s0,fd_write:o0},cA=e0(),mp=s.___wasm_call_ctors=function(){return(mp=s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},l0=s._init=function(){return(l0=s._init=s.asm.init).apply(null,arguments)},_e=s._init_with_threads_count=function(){return(_e=s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},uu=s._get_threads_count=function(){return(uu=s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},u0=s._register_tensor=function(){return(u0=s._register_tensor=s.asm.register_tensor).apply(null,arguments)},hA=s._dispose_data=function(){return(hA=s._dispose_data=s.asm.dispose_data).apply(null,arguments)},fA=s._dispose=function(){return(fA=s._dispose=s.asm.dispose).apply(null,arguments)},d0=s._Abs=function(){return(d0=s._Abs=s.asm.Abs).apply(null,arguments)},gp=s._Add=function(){return(gp=s._Add=s.asm.Add).apply(null,arguments)},yo=s._AddN=function(){return(yo=s._AddN=s.asm.AddN).apply(null,arguments)},p0=s._All=function(){return(p0=s._All=s.asm.All).apply(null,arguments)},c0=s._Any=function(){return(c0=s._Any=s.asm.Any).apply(null,arguments)},mA=s._ArgMax=function(){return(mA=s._ArgMax=s.asm.ArgMax).apply(null,arguments)},h0=s._AvgPool=function(){return(h0=s._AvgPool=s.asm.AvgPool).apply(null,arguments)},f0=s._BatchMatMul=function(){return(f0=s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},m0=s._Ceil=function(){return(m0=s._Ceil=s.asm.Ceil).apply(null,arguments)},g0=s._ClipByValue=function(){return(g0=s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},Ap=s._Conv2D=function(){return(Ap=s._Conv2D=s.asm.Conv2D).apply(null,arguments)},yp=s._Conv2DBackpropInput=function(){return(yp=s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},A0=s._Cos=function(){return(A0=s._Cos=s.asm.Cos).apply(null,arguments)},y0=s._Cosh=function(){return(y0=s._Cosh=s.asm.Cosh).apply(null,arguments)},x0=s._CropAndResize=function(){return(x0=s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},du=s._Cumprod=function(){return(du=s._Cumprod=s.asm.Cumprod).apply(null,arguments)},b0=s._Cumsum=function(){return(b0=s._Cumsum=s.asm.Cumsum).apply(null,arguments)},v0=s._DepthToSpace=function(){return(v0=s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},w0=s._DepthwiseConv2dNative=function(){return(w0=s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},Ss=s._Elu=function(){return(Ss=s._Elu=s.asm.Elu).apply(null,arguments)},k0=s._Equal=function(){return(k0=s._Equal=s.asm.Equal).apply(null,arguments)},I0=s._Exp=function(){return(I0=s._Exp=s.asm.Exp).apply(null,arguments)},xp=s._FlipLeftRight=function(){return(xp=s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},S0=s._Floor=function(){return(S0=s._Floor=s.asm.Floor).apply(null,arguments)},xo=s._FloorDiv=function(){return(xo=s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},T0=s._FusedBatchNorm=function(){return(T0=s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},N0=s._FusedConv2D=function(){return(N0=s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},xr=s._FusedDepthwiseConv2D=function(){return(xr=s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},pu=s._Gather=function(){return(pu=s._Gather=s.asm.Gather).apply(null,arguments)},C0=s._GatherNd=function(){return(C0=s._GatherNd=s.asm.GatherNd).apply(null,arguments)},E0=s._Greater=function(){return(E0=s._Greater=s.asm.Greater).apply(null,arguments)},R0=s._GreaterEqual=function(){return(R0=s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},_0=s._LeakyRelu=function(){return(_0=s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},bp=s._Less=function(){return(bp=s._Less=s.asm.Less).apply(null,arguments)},vp=s._LessEqual=function(){return(vp=s._LessEqual=s.asm.LessEqual).apply(null,arguments)},$0=s._Log=function(){return($0=s._Log=s.asm.Log).apply(null,arguments)},M0=s._LogicalAnd=function(){return(M0=s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},wp=s._LogicalNot=function(){return(wp=s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},kp=s._LogicalOr=function(){return(kp=s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},F0=s._LogicalXor=function(){return(F0=s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},O0=s._Max=function(){return(O0=s._Max=s.asm.Max).apply(null,arguments)},P0=s._MaxPool=function(){return(P0=s._MaxPool=s.asm.MaxPool).apply(null,arguments)},Ip=s._Maximum=function(){return(Ip=s._Maximum=s.asm.Maximum).apply(null,arguments)},gA=s._Mean=function(){return(gA=s._Mean=s.asm.Mean).apply(null,arguments)},D0=s._Min=function(){return(D0=s._Min=s.asm.Min).apply(null,arguments)},z0=s._Minimum=function(){return(z0=s._Minimum=s.asm.Minimum).apply(null,arguments)},L0=s._MirrorPad=function(){return(L0=s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},W0=s._Multiply=function(){return(W0=s._Multiply=s.asm.Multiply).apply(null,arguments)},B0=s._Neg=function(){return(B0=s._Neg=s.asm.Neg).apply(null,arguments)},V0=s._NonMaxSuppressionV3=function(){return(V0=s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},U0=s._NonMaxSuppressionV4=function(){return(U0=s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},G0=s._NonMaxSuppressionV5=function(){return(G0=s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},H0=s._NotEqual=function(){return(H0=s._NotEqual=s.asm.NotEqual).apply(null,arguments)},j0=s._OneHot=function(){return(j0=s._OneHot=s.asm.OneHot).apply(null,arguments)},q0=s._PadV2=function(){return(q0=s._PadV2=s.asm.PadV2).apply(null,arguments)},X0=s._Pow=function(){return(X0=s._Pow=s.asm.Pow).apply(null,arguments)},K0=s._Prelu=function(){return(K0=s._Prelu=s.asm.Prelu).apply(null,arguments)},Z0=s._Prod=function(){return(Z0=s._Prod=s.asm.Prod).apply(null,arguments)},Y0=s._RealDiv=function(){return(Y0=s._RealDiv=s.asm.RealDiv).apply(null,arguments)},J0=s._Relu=function(){return(J0=s._Relu=s.asm.Relu).apply(null,arguments)},Q0=s._Relu6=function(){return(Q0=s._Relu6=s.asm.Relu6).apply(null,arguments)},ef=s._ResizeBilinear=function(){return(ef=s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},tf=s._ResizeNearestNeighbor=function(){return(tf=s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},af=s._Reverse=function(){return(af=s._Reverse=s.asm.Reverse).apply(null,arguments)},nf=s._RotateWithOffset=function(){return(nf=s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},rf=s._Round=function(){return(rf=s._Round=s.asm.Round).apply(null,arguments)},sf=s._Rsqrt=function(){return(sf=s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},of=s._ScatterNd=function(){return(of=s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},lf=s._SelectV2=function(){return(lf=s._SelectV2=s.asm.SelectV2).apply(null,arguments)},uf=s._Sigmoid=function(){return(uf=s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},df=s._Sin=function(){return(df=s._Sin=s.asm.Sin).apply(null,arguments)},pf=s._Softmax=function(){return(pf=s._Softmax=s.asm.Softmax).apply(null,arguments)},cf=s._SparseFillEmptyRows=function(){return(cf=s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},hf=s._SparseReshape=function(){return(hf=s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},ff=s._SparseSegmentReduction=function(){return(ff=s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},mf=s._Sqrt=function(){return(mf=s._Sqrt=s.asm.Sqrt).apply(null,arguments)},gf=s._Square=function(){return(gf=s._Square=s.asm.Square).apply(null,arguments)},Af=s._SquaredDifference=function(){return(Af=s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},yf=s._Step=function(){return(yf=s._Step=s.asm.Step).apply(null,arguments)},xf=s._StridedSlice=function(){return(xf=s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},bf=s._Sub=function(){return(bf=s._Sub=s.asm.Sub).apply(null,arguments)},vf=s._Sum=function(){return(vf=s._Sum=s.asm.Sum).apply(null,arguments)},wf=s._Tan=function(){return(wf=s._Tan=s.asm.Tan).apply(null,arguments)},kf=s._Tanh=function(){return(kf=s._Tanh=s.asm.Tanh).apply(null,arguments)},If=s._Tile=function(){return(If=s._Tile=s.asm.Tile).apply(null,arguments)},Sf=s._TopK=function(){return(Sf=s._TopK=s.asm.TopK).apply(null,arguments)},Tf=s._Transform=function(){return(Tf=s._Transform=s.asm.Transform).apply(null,arguments)},Nf=s._Transpose=function(){return(Nf=s._Transpose=s.asm.Transpose).apply(null,arguments)},Cf=s.__FusedMatMul=function(){return(Cf=s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},Ef=s._malloc=function(){return(Ef=s._malloc=s.asm.malloc).apply(null,arguments)},Rf=s._free=function(){return(Rf=s._free=s.asm.free).apply(null,arguments)},_f=s.___errno_location=function(){return(_f=s.___errno_location=s.asm.__errno_location).apply(null,arguments)},Sp=s.stackSave=function(){return(Sp=s.stackSave=s.asm.stackSave).apply(null,arguments)},Tp=s.stackRestore=function(){return(Tp=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},cu=s.stackAlloc=function(){return(cu=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)},$f=s.dynCall_iijjiiii=function(){return($f=s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},Mf=s.dynCall_jiji=function(){return(Mf=s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)};s.cwrap=fp;var bo;$a=function K(){bo||Np(),bo||($a=K)};function Np(K){if(K=K||d,st>0||(Et(),st>0))return;function se(){bo||(bo=!0,s.calledRun=!0,!D&&(Ga(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),qt()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),se()},1)):se()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();Np();var vo;l&&(vo={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!l.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!l.unhandledRejection.indexOf(K)>-1})});var wo;if(typeof r<"u")wo=r;else if(typeof WasmBackendModuleThreadedSimd<"u")wo=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(vo){var Ff=wo._dispose;wo._dispose=function(){Ff(),vo.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),vo.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModule=a)}),od=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},ol=class{refCount(e){return Ma("refCount")}incRef(e){return Ma("incRef")}timerAvailable(){return!0}time(e){return Ma("time")}read(e){return Ma("read")}readSync(e){return Ma("readSync")}readToGPU(e,t){return Ma("readToGPU")}numDataIds(){return Ma("numDataIds")}disposeData(e,t){return Ma("disposeData")}write(e,t,a){return Ma("write")}move(e,t,a,n,r){return Ma("move")}createTensorFromTexture(e,t,a){return Ma("createTensorFromTexture")}memory(){return Ma("memory")}floatPrecision(){return Ma("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Ma("dispose")}};function Ma(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function y5(e){let t=e.length,a=0;for(;t>0;)a=Math.random()*t|0,t--,yc(e,t,a)}function FS(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let a=e.length,n=0;for(;a>0;)n=Math.random()*a|0,a--,yc(e,a,n),yc(t,a,n)}function Bu(e,t,a){return Math.max(e,Math.min(t,a))}function OS(e){return e%2===0?e:e+1}function yc(e,t,a){let n=e[t];e[t]=e[a],e[a]=n}function PS(e){let t=0;for(let a=0;a<e.length;a++)t+=e[a];return t}function DS(e,t){let a=Math.random();return t*a+(1-a)*e}function zS(e,t){let a=0;for(let n=0;n<e.length;n++){let r=Number(e[n])-Number(t[n]);a+=r*r}return a}function F(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Aa(e,t,a=""){F(qr(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function oi(e){F(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Xs(e,t=[],a=!1){if(t==null&&(t=[]),Array.isArray(e)||aa(e)&&!a)for(let n=0;n<e.length;++n)Xs(e[n],t,a);else t.push(e);return t}function mt(e){if(e.length===0)return 1;let t=e[0];for(let a=1;a<e.length;a++)t*=e[a];return t}function LS(e){return e.length===0}function qr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function Ho(e){return e%1===0}function WS(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function BS(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function VS(e){let t=new Uint32Array(e);for(let a=0;a<e;++a)t[a]=a;return y5(t),t}function Ou(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function US(e,t=r=>0,a,n){return new Promise((r,s)=>{let i=0,o=()=>{if(e()){r();return}i++;let l=t(i);if(a!=null&&i>=a){s();return}n!=null?n(o,l):setTimeout(o,l)};o()})}function GS(e,t){let a=1,n=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)a*=e[s];else if(e[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==a)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(a===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%a!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${a}`);let r=e.slice();return r[n]=t/a,r}function ld(e,t){let a=t.length;return e=e==null?t.map((n,r)=>r):[].concat(e),F(e.every(n=>n>=-a&&n<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),F(e.every(n=>Ho(n)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(n=>n<0?a+n:n)}function x5(e,t){let a=[],n=[],r=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||r?null:ld(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(a.push(e[o]),n.push(o)),s[i]<=o&&i++}e[o]!==1&&(a.push(e[o]),n.push(o))}return{newShape:a,keptDims:n}}function b5(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return a}function v5(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else if(e==="string")a=new Array(t);else throw new Error(`Unknown data type ${e}`);return a}function w5(e,t){for(let a=0;a<e.length;a++){let n=e[a];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function k5(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function HS(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function aa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Cm(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function I5(e){if(e==null)return 0;let t=0;return e.forEach(a=>t+=a.length),t}function Cr(e){return typeof e=="string"||e instanceof String}function S5(e){return typeof e=="boolean"}function T5(e){return typeof e=="number"}function Uc(e){return Array.isArray(e)?Uc(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":T5(e)?"float32":Cr(e)?"string":S5(e)?"bool":"float32"}function zr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function xc(e,t){for(let a=t;a<e;++a)if(e%a===0)return a;return e}function ll(e){let t=e.length;if(t<2)return[];let a=new Array(t-1);a[t-2]=e[t-1];for(let n=t-3;n>=0;--n)a[n]=a[n+1]*e[n+1];return a}function N5(e,t,a,n=!1){let r=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)r[i]=a[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((l,u)=>l*u)*(n?2:1);for(let l=0;l<s;l++)r[l]=N5(e+l*o,i,a,n)}return r}function Bo(e,t,a=!1){if(e.length===0)return t[0];let n=e.reduce((r,s)=>r*s)*(a?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return N5(0,e,t,a)}function D2(e,t){let a=Gc(e,t);for(let n=0;n<a.length;n++)a[n]=1;return a}function Gc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function jS(e,t){let a=e.reduce((n,r)=>n*r,1);if(t==null||t==="float32")return Bo(e,new Float32Array(a));if(t==="int32")return Bo(e,new Int32Array(a));if(t==="bool")return Bo(e,new Uint8Array(a));throw new Error(`Unknown data type ${t}`)}function z2(e){e.forEach(t=>{F(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function qS(e,t,a){if(t===0)return 0;if(t===1)return e[0];let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=a[r]*e[r];return n}function XS(e,t,a){if(t===0)return[];if(t===1)return[e];let n=new Array(t);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(e/a[r]),e-=n[r]*a[r];return n[n.length-1]=e,n}function L2(e){return e&&e.then&&typeof e.then=="function"}var SA="tfjsflags",C5=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=KS,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,a){if(this.flagRegistry[e]={evaluationFn:t,setHook:a},this.urlFlags[e]!=null){let n=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(L2(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);SA in e&&e[SA].split(",").forEach(t=>{let[a,n]=t.split(":");this.urlFlags[a]=YS(a,n)})}};function KS(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(a,...n)=>(ZS(t,n[0],n[1]),n.join("="))),t}function ZS(e,t,a){e[decodeURIComponent(t)]=decodeURIComponent(a||"")}function YS(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function B(){return W2}var W2=null;function JS(e){W2=e}var Lf;function E5(){if(Lf==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Lf=e}return Lf}function QS(){let e=E5();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function B2(e,t){let a=QS();if(a.has(e))return a.get(e);{let n=t();return a.set(e,n),a.get(e)}}var ul="Abs",ud="Acos",dd="Acosh",ur="Add",li="AddN",dl="All",pl="Any",ui="ArgMax",pd="ArgMin",cd="Asin",hd="Asinh",fd="Atan",md="Atanh",cl="Atan2",di="AvgPool",V2="AvgPoolGrad",Hc="AvgPool3D",U2="AvgPool3DGrad",pi="BatchMatMul",hl="BatchToSpaceND",jc="Bincount",e9="BroadcastTo",qc="BroadcastArgs",ci="Cast",Xr="Ceil",Kr="ClipByValue",gd="Complex",Xc="ComplexAbs",fl="Concat",hi="Conv2D",Kc="Conv2DBackpropFilter",fi="Conv2DBackpropInput",Zc="Conv3D",G2="Conv3DBackpropFilterV2",Yc="Conv3DBackpropInputV2",mi="Cos",gi="Cosh",Ai="Cumprod",yi="Cumsum",xi="CropAndResize",Jc="DenseBincount",bi="DepthToSpace",vi="DepthwiseConv2dNative",Qc="DepthwiseConv2dNativeBackpropFilter",eh="DepthwiseConv2dNativeBackpropInput",th="Diag",ah="Dilation2D",Em="Dilation2DBackpropInput",Rm="Dilation2DBackpropFilter",wi="RealDiv",Ad="Einsum",ki="Elu",H2="EluGrad",yd="Erf",Zr="Equal",Yr="Exp",ml="ExpandDims",Ii="Expm1",nh="FFT",gl="Fill",Si="FlipLeftRight",Jr="Floor",Ti="FloorDiv",Ni="FusedBatchNorm",Al="GatherV2",Ci="GatherNd",Qr="Greater",es="GreaterEqual",Ei="Identity",rh="IFFT",xd="Imag",bd="IsFinite",vd="IsInf",yl="IsNan",Ri="LeakyRelu",ts="Less",as="LessEqual",sh="LinSpace",ns="Log",wd="Log1p",_i="LogicalAnd",$i="LogicalNot",xl="LogicalOr",R5="LogicalXor",t9="LogSoftmax",a9="LowerBound",ih="LRN",j2="LRNGrad",Mi="Max",rs="Maximum",Fi="MaxPool",q2="MaxPoolGrad",oh="MaxPool3D",X2="MaxPool3DGrad",lh="MaxPoolWithArgmax",Oi="Mean",Pi="Min",ss="Minimum",Di="MirrorPad",kd="Mod",uh="Multinomial",is="Multiply",bl="Neg",os="NotEqual",zi="NonMaxSuppressionV3",vl="NonMaxSuppressionV4",Li="NonMaxSuppressionV5",wl="OnesLike",kl="OneHot",Il="Pack",Wi="PadV2",n9="Pool",Bi="Pow",Vi="Prelu",Ui="Prod",dh="RaggedGather",ph="RaggedRange",ch="RaggedTensorToTensor",Sl="Range",Id="Real",Tl="Reciprocal",Gi="Relu",Nl="Reshape",Hi="ResizeNearestNeighbor",K2="ResizeNearestNeighborGrad",ji="ResizeBilinear",Z2="ResizeBilinearGrad",qi="Relu6",Cl="Reverse",El="Round",ls="Rsqrt",Xi="ScatterNd",hh="SearchSorted",Rl="Select",Sd="Selu",_l="Slice",Ki="Sin",$l="Sinh",Td="Sign",us="Sigmoid",Nd="Softplus",ds="Sqrt",Zi="Sum",Ml="SpaceToBatchND",Fl="SplitV",Yi="Softmax",Cd="SparseFillEmptyRows",Ol="SparseReshape",Ed="SparseSegmentMean",Rd="SparseSegmentSum",_d="SparseToDense",ps="SquaredDifference",$d="Square",Ji="StridedSlice",Pl="StringNGrams",Md="StringSplit",Fd="StringToHashBucketFast",cs="Sub",Dl="Tan",Qi="Tanh",hs="Tile",eo="TopK",to="Transform",nr="Transpose",fh="Unique",zl="Unpack",mh="UnsortedSegmentSum",r9="UpperBound",Ll="ZerosLike",ao="Step",Vu="FromPixels",no="RotateWithOffset",Lr="_FusedMatMul",Wr="FusedConv2D",Br="FusedDepthwiseConv2D";function Tr(...e){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...e)}function s9(...e){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...e)}var jo=B2("kernelRegistry",()=>new Map),Uu=B2("gradRegistry",()=>new Map);function bc(e,t){let a=Y2(e,t);return jo.get(a)}function _m(e){return Uu.get(e)}function Ks(e){let t=jo.entries(),a=[];for(;;){let{done:n,value:r}=t.next();if(n)break;let[s,i]=r,[o]=s.split("_");o===e&&a.push(i)}return a}function Tn(e){let{kernelName:t,backendName:a}=e,n=Y2(t,a);jo.has(n)&&Tr(`The kernel '${t}' for backend '${a}' is already registered`),jo.set(n,e)}function i9(e){let{kernelName:t}=e;Uu.has(t)&&B().getBool("DEBUG")&&Tr(`Overriding the gradient for '${t}'`),Uu.set(t,e)}function o9(e,t){let a=Y2(e,t);if(!jo.has(a))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);jo.delete(a)}function l9(e){if(!Uu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Uu.delete(e)}function u9(e,t){Ks(e).forEach(a=>{let n=Object.assign({},a,{backendName:t});Tn(n)})}function Y2(e,t){return`${t}_${e}`}var v={};Le(v,{arraysEqual:()=>qr,assert:()=>F,assertNonNegativeIntegerDimensions:()=>z2,assertNonNull:()=>oi,assertShapesMatch:()=>Aa,bytesFromStringArray:()=>I5,bytesPerElement:()=>Cm,checkConversionForErrors:()=>w5,clamp:()=>Bu,computeStrides:()=>ll,createScalarValue:()=>m9,createShuffledIndices:()=>VS,decodeString:()=>vc,distSquared:()=>zS,encodeString:()=>Pd,fetch:()=>A9,fingerPrint64:()=>f9,flatten:()=>Xs,getArrayFromDType:()=>v5,getTypedArrayFromDType:()=>b5,hasEncodingLoss:()=>HS,hexToLong:()=>Od,indexToLoc:()=>XS,inferDtype:()=>Uc,inferFromImplicitShape:()=>GS,isBoolean:()=>S5,isFunction:()=>zr,isInt:()=>Ho,isNumber:()=>T5,isPromise:()=>L2,isScalarShape:()=>LS,isString:()=>Cr,isTypedArray:()=>aa,isValidDtype:()=>k5,locToIndex:()=>qS,makeOnesTypedArray:()=>D2,makeZerosNestedTypedArray:()=>jS,makeZerosTypedArray:()=>Gc,nearestDivisor:()=>xc,nearestLargerEven:()=>OS,now:()=>Gu,parseAxisParam:()=>ld,randUniform:()=>DS,repeatedTry:()=>US,rightPad:()=>Ou,shuffle:()=>y5,shuffleCombo:()=>FS,sizeFromShape:()=>mt,sizeToSquarishShape:()=>BS,squeezeShape:()=>x5,sum:()=>PS,swap:()=>yc,tanh:()=>WS,toNestedArray:()=>Bo,toTypedArray:()=>gh});var TA=il(AS()),Ps=TA.default||TA;function Od(e){return Ps.fromString(e,!0,16)}var _5=Od("c3a5c85c97cb3127"),Ms=Od("b492b66fbe98f273"),ca=Od("9ae16a3b2f90404f");function $m(e){return e.xor(e.shru(47))}function $5(e,t,a){let n=e.slice(t,t+a);return Ps.fromBytes(Array.from(n),!0,!0)}function lt(e,t){return $5(e,t,8)}function NA(e,t){return $5(e,t,4)}function Gt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Mr(e,t,a=Od("9ddfea08eb382d69")){let n=e.xor(t).mul(a);n=n.xor(n.shru(47));let r=t.xor(n).mul(a);return r=r.xor(r.shru(47)),r=r.mul(a),r}function d9(e,t,a,n,r,s){r=r.add(e),s=Gt(s.add(r).add(n),21);let i=r;return r=r.add(t),r=r.add(a),s=s.add(Gt(r,44)),[r.add(n),s.add(i)]}function Dp(e,t,a,n){return d9(lt(e,t),lt(e,t+8),lt(e,t+16),lt(e,t+24),a,n)}function p9(e,t=e.length){if(t>=8){let a=ca.add(t*2),n=lt(e,0).add(ca),r=lt(e,t-8),s=Gt(r,37).mul(a).add(n),i=Gt(n,25).add(r).mul(a);return Mr(s,i,a)}if(t>=4){let a=ca.add(t*2),n=NA(e,0);return Mr(n.shl(3).add(t),NA(e,t-4),a)}if(t>0){let a=e[0],n=e[t>>1],r=e[t-1],s=a+(n<<8),i=t+(r<<2);return $m(ca.mul(s).xor(_5.mul(i))).mul(ca)}return ca}function c9(e,t=e.length){let a=ca.add(t*2),n=lt(e,0).mul(Ms),r=lt(e,8),s=lt(e,t-8).mul(a),i=lt(e,t-16).mul(ca);return Mr(Gt(n.add(r),43).add(Gt(s,30)).add(i),n.add(Gt(r.add(ca),18)).add(s),a)}function h9(e,t=e.length){let a=ca.add(t*2),n=lt(e,0).mul(ca),r=lt(e,8),s=lt(e,t-8).mul(a),i=lt(e,t-16).mul(ca),o=Gt(n.add(r),43).add(Gt(s,30)).add(i),l=Mr(o,n.add(Gt(r.add(ca),18)).add(s),a),u=lt(e,16).mul(a),d=lt(e,24),c=o.add(lt(e,t-32)).mul(a),p=l.add(lt(e,t-24)).mul(a);return Mr(Gt(u.add(d),43).add(Gt(c,30)).add(p),u.add(Gt(d.add(n),18)).add(c),a)}function f9(e,t=e.length){let a=Ps.fromNumber(81,!0);if(t<=32)return t<=16?p9(e,t):c9(e,t);if(t<=64)return h9(e,t);let n=a,r=a.mul(Ms).add(113),s=$m(r.mul(ca).add(113)).mul(ca),i=[Ps.UZERO,Ps.UZERO],o=[Ps.UZERO,Ps.UZERO];n=n.mul(ca).add(lt(e,0));let l=0,u=(t-1>>6)*64,d=u+(t-1&63)-63;do n=Gt(n.add(r).add(i[0]).add(lt(e,l+8)),37).mul(Ms),r=Gt(r.add(i[1]).add(lt(e,l+48)),42).mul(Ms),n=n.xor(o[1]),r=r.add(i[0]).add(lt(e,l+40)),s=Gt(s.add(o[0]),33).mul(Ms),i=Dp(e,l,i[1].mul(Ms),n.add(o[0])),o=Dp(e,l+32,s.add(o[1]),r.add(lt(e,l+16))),[s,n]=[n,s],l+=64;while(l!==u);let c=Ms.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),n=Gt(n.add(r).add(i[0]).add(lt(e,l+8)),37).mul(c),r=Gt(r.add(i[1]).add(lt(e,l+48)),42).mul(c),n=n.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(lt(e,l+40))),s=Gt(s.add(o[0]),33).mul(c),i=Dp(e,l,i[1].mul(c),n.add(o[0])),o=Dp(e,l+32,s.add(o[1]),r.add(lt(e,l+16))),[s,n]=[n,s],Mr(Mr(i[0],o[0],c).add($m(r).mul(_5)).add(s),Mr(i[1],o[1],c).add(n),c)}function m9(e,t){return t==="string"?Pd(e):gh([e],t)}function g9(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function gh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Xs(e)),B().getBool("DEBUG")&&w5(e,t),g9(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let a=new Uint8Array(e.length);for(let n=0;n<a.length;++n)Math.round(e[n])!==0&&(a[n]=1);return a}else throw new Error(`Unknown data type ${t}`)}function Gu(){return B().platform.now()}function A9(e,t){return B().platform.fetch(e,t)}function Pd(e,t="utf-8"){return t=t||"utf-8",B().platform.encode(e,t)}function vc(e,t="utf-8"){return t=t||"utf-8",B().platform.decode(e,t)}var y9=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new b9)}profileKernel(e,t,a){let n,r=()=>{n=a()},s,i=Gu();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(let o of n)o.dataSync();s=Promise.resolve({kernelMs:Gu()-i})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<n.length;o++){let l=n[o];l.data().then(u=>{x9(u,l.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:a,timeMs:n,inputs:r,extraInfo:s}=e;a.forEach(i=>{Promise.all([i.data(),n,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function x9(e,t,a){if(t!=="float32")return!1;for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${a}'`),!0}return!1}var b9=class{logKernelProfile(e,t,a,n,r,s){let i=typeof n=="number"?Ou(`${n}ms`,9):n.error,o=Ou(e,25),l=t.rank,u=t.size,d=Ou(t.shape.toString(),14),c="";for(let p in r){let h=r[p];if(h!=null){let f=h.shape||t.shape,m=f.length;c+=`${p}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${d}	%c${u}	%c${c}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function v9(e,t,a){let n={},r={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<e.length;l++){let u=e[l],d=u.inputs;for(let c in d){let p=d[c],h=!1;for(let f=0;f<t.length;f++)if(n[p.id]){u.outputs.forEach(m=>n[m.id]=!0),h=!0,r[u.id]=!0;break}if(h)break}}let s={};s[a.id]=!0;let i={};for(let l=e.length-1;l>=0;l--){let u=e[l],d=u.inputs;for(let c=0;c<u.outputs.length;c++)if(s[u.outputs[c].id]){for(let p in d)s[d[p].id]=!0,i[u.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let u=e[l];if(r[u.id]&&i[u.id]){let d={};for(let p in u.inputs){let h=u.inputs[p];n[h.id]&&(d[p]=h)}let c=Object.assign({},u);c.inputs=d,c.outputs=u.outputs,o.push(c)}}return o}function w9(e,t,a,n){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach(l=>{let u=e[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let l in s.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);let u=a(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let d=s.inputs[l];if(!qr(u.shape,d.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(e[d.id]==null)e[d.id]=u;else{let c=e[d.id];e[d.id]=n(c,u),c.dispose()}}}}var CA=20,mu=3,Wf=7;function k9(e,t,a,n){let r=ll(t),s=I9(e,t,a,r),i=t.length,o=rc(e,t,a,r,s),l=["Tensor"];return n&&(l.push(`  dtype: ${a}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function I9(e,t,a,n){let r=mt(t),s=n[n.length-1],i=new Array(s).fill(0),o=t.length,l=a==="complex64"?xu(e):e;if(o>1)for(let u=0;u<r/s;u++){let d=u*s;for(let c=0;c<s;c++)i[c]=Math.max(i[c],yu(l[d+c],0,a).length)}return i}function yu(e,t,a){let n;return Array.isArray(e)?n=`${parseFloat(e[0].toFixed(Wf))} + ${parseFloat(e[1].toFixed(Wf))}j`:Cr(e)?n=`'${e}'`:a==="bool"?n=M5(e):n=parseFloat(e.toFixed(Wf)).toString(),Ou(n,t)}function M5(e){return e===0?"false":"true"}function rc(e,t,a,n,r,s=!0){let i=a==="complex64"?2:1,o=t[0],l=t.length;if(l===0){if(a==="complex64"){let m=xu(e);return[yu(m[0],0,a)]}return a==="bool"?[M5(e[0])]:[e[0].toString()]}if(l===1){if(o>CA){let g=mu*i,A=Array.from(e.slice(0,g)),y=Array.from(e.slice((o-mu)*i,o*i));return a==="complex64"&&(A=xu(A),y=xu(y)),["["+A.map((x,b)=>yu(x,r[b],a)).join(", ")+", ..., "+y.map((x,b)=>yu(x,r[o-mu+b],a)).join(", ")+"]"]}return["["+(a==="complex64"?xu(e):Array.from(e)).map((g,A)=>yu(g,r[A],a)).join(", ")+"]"]}let u=t.slice(1),d=n.slice(1),c=n[0]*i,p=[];if(o>CA){for(let m=0;m<mu;m++){let g=m*c,A=g+c;p.push(...rc(e.slice(g,A),u,a,d,r,!1))}p.push("...");for(let m=o-mu;m<o;m++){let g=m*c,A=g+c;p.push(...rc(e.slice(g,A),u,a,d,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*c,A=g+c;p.push(...rc(e.slice(g,A),u,a,d,r,m===o-1))}let h=l===2?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function xu(e){let t=[];for(let a=0;a<e.length;a+=2)t.push([e[a],e[a+1]]);return t}var Ct=class{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=mt(e),a!=null){let n=a.length;F(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||v5(t,this.size),this.strides=ll(e)}set(e,...t){t.length===0&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let a=this.locToIndex(t);this.values[a]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let a=e[e.length-1];for(let n=0;n<e.length-1;++n)a+=this.strides[n]*e[n];return this.values[a]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let a=0;a<e.length-1;++a)t+=this.strides[a]*e[a];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let a=0;a<t.length-1;++a)t[a]=Math.floor(e/this.strides[a]),e-=t[a]*this.strides[a];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return wn().makeTensor(this.values,this.shape,this.dtype)}},wn=null,Mo=null,S9=null;function T9(e){wn=e}function N9(e){Mo=e}function C9(e){S9=e}var ft=class{constructor(e,t,a,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=mt(e),this.strides=ll(e),this.dataId=a,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Mo.buffer(this.shape,this.dtype,e)}bufferSync(){return Mo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Bo(this.shape,e,this.dtype==="complex64")}arraySync(){return Bo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=wn().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(a=>vc(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),wn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=wn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>vc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await wn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(wn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mo.print(this,e)}clone(){return this.throwIfDisposed(),Mo.clone(this)}toString(e=!1){let t=this.dataSync();return k9(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mo.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),wn().makeVariable(this,e,t,a)}};Object.defineProperty(ft,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function E9(){return B2("Tensor",()=>ft)}E9();var Hu=class extends ft{constructor(e,t,a,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!qr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wn().disposeTensor(this),this.dataId=e.dataId,wn().incRef(this,null)}dispose(){wn().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Hu,Symbol.hasInstance,{value:e=>e instanceof ft&&e.assign!=null&&e.assign instanceof Function});var F5={};Le(F5,{assertTypesMatch:()=>O5,getTensorsInContainer:()=>J2,isTensorInList:()=>_9,makeTypesMatch:()=>bt});var Mm;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(Mm||(Mm={}));var Fm;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(Fm||(Fm={}));var Om;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Om||(Om={}));var Pm;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Pm||(Pm={}));var Dm;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Dm||(Dm={}));var R9={float32:Pm,int32:Fm,bool:Om,complex64:Dm};function Yt(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return R9[e][t]}function Dd(e){return Yt(e,"int32")}function bt(e,t){if(e.dtype===t.dtype)return[e,t];let a=Yt(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function O5(e,t){F(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function _9(e,t){return t.some(a=>a.id===e.id)}function J2(e){let t=[];return P5(e,t,new Set),t}function P5(e,t,a){if(e==null)return;if(e instanceof ft){t.push(e);return}if(!$9(e))return;let n=e;for(let r in n){let s=n[r];a.has(s)||(a.add(s),P5(s,t,a))}}function $9(e){return Array.isArray(e)||typeof e=="object"}function Bf(e){return e.kernelName!=null}var EA=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},ju=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EA}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t];if(await this.initializeBackend(a).success){await this.setBackend(a);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,a=1){return e in this.registryFactory?(Tr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:a},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:a}=this.initializeBackend(e);if(!(a?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new y9(this.backendInstance),!0}setupRegisteredKernels(){Ks(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ks(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let a=t.factory();if(a&&!(a instanceof ol)&&typeof a.then=="function"){let n=++this.pendingBackendInitId,r=a.then(s=>n<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,Tr(`Initialization of backend ${e} failed`),Tr(s.stack||s.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=a,{success:!0,asyncInit:!1}}catch(a){return Tr(`Initialization of backend ${e} failed`),Tr(a.stack||a.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let a=e[t],{success:n,asyncInit:r}=this.initializeBackend(a);if(r||n)return{name:a,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let a=this.state.tensorInfo.get(t),n=a.backend,r=this.readSync(t),s=n.refCount(t);n.disposeData(t,!0),a.backend=e,e.move(t,r,a.shape,a.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let a=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}let n;return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,a){e();try{let n=a();return t(),n}catch(n){throw t(),n}}nextTensorId(){return ju.nextTensorId++}nextVariableId(){return ju.nextVariableId++}clone(e){let t=L.runKernel(Ei,{x:e}),a={x:e},n=s=>({x:()=>{let i="float32",o={x:s},l={dtype:i};return L.runKernel(ci,o,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,a,[t],n,r,{}),t}runKernel(e,t,a){if(this.backendName==null&&this.backend,bc(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:a})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,a){let n=this.backend.numDataIds(),r=0;a.forEach(o=>{r+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,a=[],n=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,l=Bf(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Bf(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=bc(h,this.backendName);F(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let A=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,A,y);let x=y.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(n){let b=this.getTensorsForGradient(h,f,x);a=this.saveTensorsForBackwardMode(b)}return x}}else{let{forwardFunc:h}=e,f=m=>{!n||(a=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,m,g),g}}let{inputs:u,attrs:d}=e,c=Bf(e)?null:e.backwardsFunc,p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(l,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),n&&this.addTapeNode(l,u,t,c,a,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(h=>u[h]!=null?u[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,a){let n=_m(e);if(n!=null){let r=n.inputsToSave||[],s=n.outputsToSave||[],i;n.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(l=>t[l])):i=r.map(l=>t[l]);let o=a.filter((l,u)=>s[u]);return i.concat(o)}return[]}makeTensor(e,t,a,n){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");a=a||"float32",n=n||this.backend;let r=e;a==="string"&&Cr(e[0])&&(r=e.map(o=>Pd(o)));let s=n.write(r,t,a),i=new ft(t,a,s,this.nextTensorId());if(this.trackTensor(i,n),a==="string"){let o=this.state.tensorInfo.get(s),l=I5(r);this.state.numBytes+=l-o.bytes,o.bytes=l}return i}makeTensorFromDataId(e,t,a,n){a=a||"float32";let r={dataId:e,shape:t,dtype:a};return this.makeTensorFromTensorInfo(r,n)}makeTensorFromTensorInfo(e,t){let{dataId:a,shape:n,dtype:r}=e,s=new ft(n,r,a,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,a,n){a=a||this.nextVariableId().toString(),n!=null&&n!==e.dtype&&(e=e.cast(n));let r=new Hu(e,t,a,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let a=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(a=e.size*Cm(e.dtype)),this.state.numBytes+=a,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:a})),e instanceof Hu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let a=e.size*Cm(e.dtype);this.state.numBytes-=a}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,a=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-a;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,a,n,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:a,saved:r},o=_m(e);o!=null&&(n=o.gradFunc),n!=null&&(i.gradient=l=>(l=l.map((u,d)=>{if(u==null){let c=a[d],p=Gc(c.size,c.dtype);return this.makeTensor(p,c.shape,c.dtype)}return u}),n(l.length>1?l:l[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=J2(e),a=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let s=this.state.activeScope.track[r];!s.kept&&!a.has(s.id)&&s.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===n.id&&this.track(r)})}gradients(e,t,a,n=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),a!=null&&a.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${a.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(r instanceof ft,()=>"The result y returned by f() must be a tensor.");let s=v9(this.state.activeTape,t,r);if(!n&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=a??M9(r.shape),w9(i,s,l=>this.tidy(l),F9);let o=t.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return F(zr(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{F(t.every(i=>i instanceof ft),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let a,n={};t.forEach((i,o)=>{n[o]=i});let r=(i,o)=>(a=e(...t,o),F(a.value instanceof ft,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(zr(a.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),a.value),s=(i,o)=>{let l=a.gradFunc(i,o),u=Array.isArray(l)?l:[l];F(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(u.every(c=>c instanceof ft),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let d={};return u.forEach((c,p)=>{d[p]=()=>c}),d};return this.runKernelFunc({forwardFunc:r,backwardsFunc:s,inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Gu(),a=await this.backend.time(e);return a.wallMs=Gu()-t,a}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EA;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};ju.nextTensorId=0;ju.nextVariableId=0;function M9(e){let t=D2(mt(e),"float32");return L.makeTensor(t,e,"float32")}function D5(){let e=E5();if(e._tfengine==null){let t=new C5(e);e._tfengine=new ju(t)}return JS(e._tfengine.ENV),T9(()=>e._tfengine),e._tfengine}var L=D5();function F9(e,t){let a={a:e,b:t};return L.runKernel(ur,a)}var zd={};Le(zd,{isBrowser:()=>z5,isMobile:()=>D9,mockIsMobile:()=>P9});function O9(){return typeof navigator<"u"&&navigator!=null}var zm;function P9(e){zm=e}function D9(e){if(zm!==void 0)return zm;if(e||O9()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let a=e;return a.userAgentData&&a.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function z5(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Va=B();Va.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Va.registerFlag("IS_BROWSER",()=>z5());Va.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Va.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Va.registerFlag("PROD",()=>!1);Va.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Va.getBool("DEBUG"));Va.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Va.registerFlag("IS_TEST",()=>!1);Va.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Va.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Va.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Va.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Va.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Bn(e,t){let a=e;if(aa(e))return t==="string"?[]:[e.length];if(typeof e=="object"&&"texture"in e){let r=e.channels||"RGBA";return[e.height,e.width*r.length]}if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(a)||aa(a)&&t!=="string";)n.push(a.length),a=a[0];return Array.isArray(e)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&L5(e,n,[]),n}function L5(e,t,a){if(a=a||[],!Array.isArray(e)&&!aa(e)){F(t.length===0,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}F(t.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${e.length} elements`),F(e.length===t[0],()=>`Element arr[${a.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let n=t.slice(1);for(let r=0;r<e.length;++r)L5(e[r],n,a.concat(r))}function RA(e,t,a,n){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${a}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,a,n="numeric"){if(e instanceof ft)return RA(n,e.dtype,t,a),e;let r=Uc(e);if(r!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(r=n),RA(n,r,t,a),e==null||!aa(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Bn(e,r);!aa(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?gh(e,r):Xs(e,[],!0);return L.makeTensor(i,s,r)}function qu(e,t,a,n="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${a} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,s)=>_(r,`${t}[${s}]`,a,n))}var Q2="__op";function z(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],n=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a=a+Q2;let r=(...s)=>{L.startScope(a);try{let i=n(...s);return L2(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(r,"name",{value:a,configurable:!0}),r}function z9(e,t){let a=_(e,"real","complex"),n=_(t,"imag","complex");Aa(a.shape,n.shape,`real and imag shapes, ${a.shape} and ${n.shape}, must match in call to tf.complex().`);let r={real:a,imag:n};return L.runKernel(gd,r)}var sr=z({complex_:z9});function fs(e,t,a,n){if(n==null&&(n=Uc(e)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof e=="object"&&"texture"in e){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return e.channels=e.channels||"RGBA",L.backend.createTensorFromTexture(e,t||a,n)}if(!aa(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){z2(t);let r=mt(t),s=mt(a);F(r===s,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${s}`);for(let i=0;i<a.length;++i){let o=a[i],l=i===a.length-1?o!==mt(t.slice(i)):!0;F(a[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${a}) does not match the provided shape (${t}). `)}}return!aa(e)&&!Array.isArray(e)&&(e=[e]),t=t||a,e=n!=="string"?gh(e,n):Xs(e,[],!0),L.makeTensor(e,t,n)}function Be(e,t,a){let n=Bn(e,a);return fs(e,t,n,a)}var Lm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},wc=4;async function L9(e,t){let a=[],n=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],l=Array.isArray(e)?e[i].tensor:e[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);let u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let d=new Promise(async c=>{let p=await l.bytes(),h=p.reduce((g,A)=>g+A.length,0)+wc*p.length,f=new Uint8Array(h),m=0;for(let g=0;g<p.length;g++){let A=p[g],y=new Uint8Array(new Uint32Array([A.length]).buffer);f.set(y,m),m+=wc,f.set(A,m),m+=A.length}c(f)});n.push(d)}else n.push(l.data());t!=null&&(u.group=t),a.push(u)}let s=await Promise.all(n);return{data:W9(s),specs:a}}function W5(e,t){let a={},n,r=0;for(let s of t){let i=s.name,o=s.dtype,l=s.shape,u=mt(l),d;if("quantization"in s){let c=s.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${s.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${s.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let p=Lm[c.dtype],h=e.slice(r,r+u*p),f=c.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){d=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];d[m]=g*c.scale+c.min}}else if(c.dtype==="float16")n===void 0&&(n=j9()),d=n(f);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(o==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);d=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];d[m]=Math.round(g*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=u*p}else if(o==="string"){let c=mt(s.shape);d=[];for(let p=0;p<c;p++){let h=new Uint32Array(e.slice(r,r+wc))[0];r+=wc;let f=new Uint8Array(e.slice(r,r+h));d.push(f),r+=h}}else{let c=Lm[o],p=e.slice(r,r+u*c);if(o==="float32")d=new Float32Array(p);else if(o==="int32")d=new Int32Array(p);else if(o==="bool")d=new Uint8Array(p);else if(o==="complex64"){d=new Float32Array(p);let h=new Float32Array(d.length/2),f=new Float32Array(d.length/2);for(let A=0;A<h.length;A++)h[A]=d[A*2],f[A]=d[A*2+1];let m=Be(h,l,"float32"),g=Be(f,l,"float32");a[i]=sr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=u*c}o!=="complex64"&&(a[i]=Be(d,l,o))}return a}function W9(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(s=>{if(t+=s.byteLength,a.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),r=0;return a.forEach(s=>{n.set(new Uint8Array(s.buffer),r),r+=s.byteLength}),n.buffer}var eg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function _A(e){return eg?Buffer.byteLength(e):new Blob([e]).size}function B9(e){if(eg)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),a="";for(let n=0,r=t.length;n<r;n++)a+=String.fromCharCode(t[n]);return btoa(a)}function V9(e){if(eg){let n=Buffer.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(e),a=new Uint8Array(t.length);for(let n=0;n<t.length;++n)a.set([t.charCodeAt(n)],n);return a.buffer}function tg(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let a=new Uint8Array(t),n=0;return e.forEach(r=>{a.set(new Uint8Array(r),n),n+=r.byteLength}),a.buffer}function $A(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let a=e.split(t);return a[a.length-1]}function B5(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(a.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),a}function V5(e,t,a){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!a)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=a}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),n}async function ag(e,t){let a,n;return e.weightsManifest!=null&&([a,n]=await t(e.weightsManifest)),V5(e,a,n)}function Ld(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:_A(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:_A(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function U5(e){let t=[];for(let a of e)t.push(...a.weights);return t}function U9(){let e=a=>{let n=a<<13,r=0;for(;(n&8388608)===0;)r-=8388608,n<<=1;return n&=-8388609,r+=947912704,n|r},t=new Uint32Array(2048);t[0]=0;for(let a=1;a<1024;a++)t[a]=e(a);for(let a=1024;a<2048;a++)t[a]=939524096+(a-1024<<13);return t}function G9(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function H9(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function j9(){let e=U9(),t=G9(),a=H9();return n=>{let r=new ArrayBuffer(4*n.length),s=new Uint32Array(r);for(let i=0;i<n.length;i++){let o=n[i],l=e[a[o>>10]+(o&1023)]+t[o>>10];s[i]=l}return new Float32Array(r)}}var kt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return kt.instance==null&&(kt.instance=new kt),kt.instance}static registerSaveRouter(e){kt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){kt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return kt.getHandlers(e,"save")}static getLoadHandlers(e,t){return kt.getHandlers(e,"load",t)}static getHandlers(e,t,a){let n=[];return(t==="load"?kt.getInstance().loadRouters:kt.getInstance().saveRouters).forEach(r=>{let s=r(e,a);s!==null&&n.push(s)}),n}},q9=e=>kt.registerSaveRouter(e),X9=e=>kt.registerLoadRouter(e),K9=e=>kt.getSaveHandlers(e),Z9=(e,t)=>kt.getLoadHandlers(e,t),Wm="tensorflowjs",Bm=1,Ws="models_store",Er="model_info_store";function G5(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Vm(e){let t=e.result;t.createObjectStore(Ws,{keyPath:"modelPath"}),t.createObjectStore(Er,{keyPath:"modelPath"})}var Zs=class{constructor(e){if(this.indexedDB=G5(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((a,n)=>{let r=this.indexedDB.open(Wm,Bm);r.onupgradeneeded=()=>Vm(r),r.onsuccess=()=>{let s=r.result;if(t==null){let i=s.transaction(Ws,"readonly"),o=i.objectStore(Ws).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(o.result.modelArtifacts)},o.onerror=l=>(s.close(),n(o.error)),i.oncomplete=()=>s.close()}else{let i=Ld(t),o=s.transaction(Er,"readwrite"),l=o.objectStore(Er),u=l.put({modelPath:this.modelPath,modelArtifactsInfo:i}),d;u.onsuccess=()=>{d=s.transaction(Ws,"readwrite");let c=d.objectStore(Ws).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});c.onsuccess=()=>a({modelArtifactsInfo:i}),c.onerror=p=>{l=o.objectStore(Er);let h=l.delete(this.modelPath);h.onsuccess=()=>(s.close(),n(c.error)),h.onerror=f=>(s.close(),n(c.error))}},u.onerror=c=>(s.close(),n(u.error)),o.oncomplete=()=>{d==null?s.close():d.oncomplete=()=>s.close()}}},r.onerror=s=>n(r.error)})}};Zs.URL_SCHEME="indexeddb://";var H5=e=>B().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zs.URL_SCHEME)?Y9(e.slice(Zs.URL_SCHEME.length)):null;kt.registerSaveRouter(H5);kt.registerLoadRouter(H5);function Y9(e){return new Zs(e)}function J9(e){return e.startsWith(Zs.URL_SCHEME)?e.slice(Zs.URL_SCHEME.length):e}var Q9=class{constructor(){this.indexedDB=G5()}async listModels(){return new Promise((e,t)=>{let a=this.indexedDB.open(Wm,Bm);a.onupgradeneeded=()=>Vm(a),a.onsuccess=()=>{let n=a.result,r=n.transaction(Er,"readonly"),s=r.objectStore(Er).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(n.close(),t(s.error)),r.oncomplete=()=>n.close()},a.onerror=n=>t(a.error)})}async removeModel(e){return e=J9(e),new Promise((t,a)=>{let n=this.indexedDB.open(Wm,Bm);n.onupgradeneeded=()=>Vm(n),n.onsuccess=()=>{let r=n.result,s=r.transaction(Er,"readwrite"),i=s.objectStore(Er),o=i.get(e),l;o.onsuccess=()=>{if(o.result==null)return r.close(),a(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let u=i.delete(e),d=()=>{l=r.transaction(Ws,"readwrite");let c=l.objectStore(Ws).delete(e);c.onsuccess=()=>t(o.result.modelArtifactsInfo),c.onerror=p=>a(o.error)};u.onsuccess=d,u.onerror=c=>(d(),r.close(),a(o.error))}},o.onerror=u=>(r.close(),a(o.error)),s.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},n.onerror=r=>a(n.error)})}},Jn="/",Fo="tensorflowjs_models",j5="info",eT="model_topology",tT="weight_specs",aT="weight_data",nT="model_metadata";function q5(e){return{info:[Fo,e,j5].join(Jn),topology:[Fo,e,eT].join(Jn),weightSpecs:[Fo,e,tT].join(Jn),weightData:[Fo,e,aT].join(Jn),modelMetadata:[Fo,e,nT].join(Jn)}}function X5(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function rT(e){let t=e.split(Jn);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Jn)}function sT(e){return e.startsWith(Ys.URL_SCHEME)?e.slice(Ys.URL_SCHEME.length):e}var Ys=class{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=q5(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),n=Ld(e);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,B9(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:n}}catch{throw X5(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=V9(s),t}};Ys.URL_SCHEME="localstorage://";var K5=e=>B().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ys.URL_SCHEME)?iT(e.slice(Ys.URL_SCHEME.length)):null;kt.registerSaveRouter(K5);kt.registerLoadRouter(K5);function iT(e){return new Ys(e)}var oT=class{constructor(){F(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Fo+Jn,a=Jn+j5;for(let n=0;n<this.LS.length;++n){let r=this.LS.key(n);if(r.startsWith(t)&&r.endsWith(a)){let s=rT(r);e[s]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=sT(e);let t=q5(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(t.info));return X5(t),a}},Vo="://",Na=class{constructor(){this.managers={}}static getInstance(){return Na.instance==null&&(Na.instance=new Na),Na.instance}static registerManager(e,t){F(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Vo)&&(e=e.slice(0,e.indexOf(Vo))),F(e.length>0,()=>"scheme must not be an empty string.");let a=Na.getInstance();F(a.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),a.managers[e]=t}static getManager(e){let t=Na.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Na.getInstance().managers)}};function sc(e){if(e.indexOf(Vo)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Na.getSchemes().join(",")}`);return{scheme:e.split(Vo)[0],path:e.split(Vo)[1]}}async function Z5(e,t,a=!1){F(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=kt.getLoadHandlers(e);F(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),F(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let r=n[0],s=kt.getSaveHandlers(t);F(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),F(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],o=sc(e).scheme,l=sc(e).path,u=o===sc(e).scheme,d=await r.load();a&&u&&await Na.getManager(o).removeModel(l);let c=await i.save(d);return a&&!u&&await Na.getManager(o).removeModel(l),c.modelArtifactsInfo}async function lT(){let e=Na.getSchemes(),t={};for(let a of e){let n=await Na.getManager(a).listModels();for(let r in n){let s=a+Vo+r;t[s]=n[r]}}return t}async function uT(e){let t=sc(e);return Na.getManager(t.scheme).removeModel(t.path)}async function dT(e,t){return Z5(e,t,!1)}async function pT(e,t){return Z5(e,t,!0)}var cT=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!B().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",a=>{if(a.source===window&&a.data.name===this.messageName){a.stopPropagation();let n=this.functionRefs[a.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}};if(B().get("IS_BROWSER")){B().setPlatform("browser",new cT);try{Na.registerManager(Ys.URL_SCHEME,new oT)}catch{}try{Na.registerManager(Zs.URL_SCHEME,new Q9)}catch{}}var hT={importFetch:()=>yS()},Vf,fT=class{constructor(){this.util=xS(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(Vf==null&&(Vf=hT.importFetch()),Vf(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new fT);function xe(e,t="float32",a){return t=t||"float32",z2(e),new Ct(e,t,a)}function mT(e,t){let a=_(e,"x","cast");if(!k5(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&a.dtype!=="string"||t!=="string"&&a.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:a},r={dtype:t};return L.runKernel(ci,n,r)}var Xe=z({cast_:mT});function gT(e){let t={x:_(e,"x","clone","string_or_numeric")};return L.runKernel(Ei,t)}var Ca=z({clone_:gT});function ng(e,t=!1){console.log(e.toString(t))}D5();var AT={buffer:xe,cast:Xe,clone:Ca,print:ng};N9(AT);var er={};Le(er,{browserFiles:()=>IT,browserHTTPRequest:()=>ET,concatenateArrayBuffers:()=>tg,copyModel:()=>dT,decodeWeights:()=>W5,encodeWeights:()=>L9,fromMemory:()=>_T,fromMemorySync:()=>tb,getLoadHandlers:()=>Z9,getModelArtifactsForJSON:()=>ag,getModelArtifactsForJSONSync:()=>V5,getModelArtifactsInfoForJSON:()=>Ld,getSaveHandlers:()=>K9,getWeightSpecs:()=>U5,http:()=>sg,isHTTPScheme:()=>Um,listModels:()=>lT,loadWeights:()=>ST,moveModel:()=>pT,registerLoadRouter:()=>X9,registerSaveRouter:()=>q9,removeModel:()=>uT,weightsLoaderFactory:()=>J5,withSaveHandler:()=>$T,withSaveHandlerSync:()=>MT});var yT="model",xT=".json",bT=".weights.bin";function MA(e){return new Promise(t=>setTimeout(t)).then(e)}var qo=class{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(qo.URL_SCHEME)&&(e=e.slice(qo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=yT),this.modelJsonFileName=e+xT,this.weightDataFileName=e+bT}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let a=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=B5(e,a),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await MA(()=>s.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await MA(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ld(e)}}}};qo.URL_SCHEME="downloads://";var vT=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let a=new FileReader;a.onload=n=>{let r=JSON.parse(n.target.result),s=r.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=ag(r,o=>this.loadWeights(o));e(i)},a.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(this.jsonFile)})}loadWeights(e){let t=[],a=[];for(let s of e)t.push(...s.weights),a.push(...s.paths);let n=this.checkManifestAndWeightFiles(e),r=a.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(r).then(s=>[t,tg(s)])}loadWeightsFile(e,t){return new Promise((a,n)=>{let r=new FileReader;r.onload=s=>{let i=s.target.result;a(i)},r.onerror=s=>n(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],a=this.weightsFiles.map(r=>$A(r.name)),n={};for(let r of e)r.paths.forEach(s=>{let i=$A(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),a.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);n[s]=this.weightsFiles[a.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},wT=e=>B().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qo.URL_SCHEME)?kT(e.slice(qo.URL_SCHEME.length)):null;kt.registerSaveRouter(wT);function kT(e="model"){return new qo(e)}function IT(e){return new vT(e)}function FA(e,t,a,n){i(e),a=a??0,n=n??1,o(a,n);let r=0,s=l=>(l.then(u=>{let d=a+ ++r/e.length*(n-a);return t(d),u}),l);function i(l){F(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),F(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),F(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(e.map(s))}async function Y5(e,t){t==null&&(t={});let a=t.fetchFunc==null?B().platform.fetch:t.fetchFunc,n=e.map(u=>a(u,t.requestInit,{isBinary:!0})),r=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await FA(n,t.onProgress,r,s)).map(u=>u.arrayBuffer()),o=.5,l=1;return t.onProgress==null?await Promise.all(i):await FA(i,t.onProgress,o,l)}async function ST(e,t="",a,n){return J5(r=>Y5(r,{requestInit:n}))(e,t,a)}function J5(e){return async(t,a="",n)=>{let r=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],o=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let A="quantization"in g?g.quantization.dtype:g.dtype,y=Lm[A]*mt(g.shape),x=()=>{r[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};n!=null?n.forEach((b,w)=>{b===g.name&&(x(),i[w]=!0)}):x(),o.push(g.name),m+=y})}),!i.every(h=>h)){let h=n.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),u=[];l.forEach(h=>{t[h].paths.forEach(f=>{let m=a+(a.endsWith("/")?"":"/")+f;u.push(m)})});let d=await e(u),c={},p=0;return l.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=d[p+x].byteLength;let g=new ArrayBuffer(m),A=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let b=new Uint8Array(d[p+x]);A.set(b,y),y+=b.byteLength}s[h].forEach(x=>{let b=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=W5(b,[x.manifestEntry]);for(let S in w)c[S]=w[S]}),p+=f}),c}}var TT="application/octet-stream",NT="application/json",rg=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(F(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,F(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let a=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=B5(e,a);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:NT}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:TT}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ld(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let a=t.modelTopology,n=t.weightsManifest;if(a==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return ag(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[a,n]=CT(t),r=this.weightPathPrefix||a,s=U5(e),i=[],o=[];for(let u of e)for(let d of u.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(d)):i.push(r+d+n);this.weightUrlConverter&&i.push(...await Promise.all(o));let l=await Y5(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,tg(l)]}};rg.URL_SCHEME_REGEX=/^https?:\/\//;function CT(e){let t=e.lastIndexOf("/"),a=e.lastIndexOf("?"),n=e.substring(0,t),r=a>t?e.substring(a):"";return[n+"/",r]}function Um(e){return e.match(rg.URL_SCHEME_REGEX)!=null}var Q5=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let a=!0;if(Array.isArray(e)?a=e.every(n=>Um(n)):a=Um(e),a)return sg(e,t)}return null};kt.registerSaveRouter(Q5);kt.registerLoadRouter(Q5);function sg(e,t){return new rg(e,t)}function ET(e,t){return sg(e,t)}var Uf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},eb=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},RT=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function _T(e,t,a,n){let r=arguments;return new RT(tb(...r))}function tb(e,t,a,n){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Uf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Uf({modelTopology:e,weightSpecs:t,weightData:a,trainingConfig:n}))}function $T(e){return new eb(e)}function MT(e){return new eb(e)}var ab={};Le(ab,{confusionMatrix:()=>ZT});function FT(e,t,a=!1,n=!1){let r=_(e,"a","matMul"),s=_(t,"b","matMul");[r,s]=bt(r,s);let i={a:r,b:s},o={transposeA:a,transposeB:n};return L.runKernel(pi,i,o)}var Qe=z({matMul_:FT});function OT(e,t,a=1,n=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:a,offValue:n};return L.runKernel(kl,s,i)}var kc=z({oneHot_:OT});function nb(){B().set("PROD",!0)}function PT(){B().set("DEBUG",!0)}function DT(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ig(e){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}C9(ig);function zT(){L.disposeVariables()}function Dt(){return L}function LT(){return L.memory()}function WT(e){return L.profile(e)}function De(e,t){return L.tidy(e,t)}function le(e){J2(e).forEach(t=>t.dispose())}function zn(e){return L.keep(e)}function BT(e){return L.time(e)}function Ic(e){return L.setBackend(e)}function og(){return L.ready()}function Xt(){return L.backendName}function VT(e){L.removeBackend(e)}function rb(e){return L.findBackend(e)}function UT(e){return L.findBackendFactory(e)}function Wl(e,t,a=1){return L.registerBackend(e,t,a)}function Nr(){return L.backend}function GT(e,t){B().setPlatform(e,t)}function HT(e){let t={input:_(e,"input","imag")};return L.runKernel(xd,t)}var Wd=z({imag_:HT});function jT(e){let t={x:_(e,"x","neg")};return L.runKernel(bl,t)}var Ln=z({neg_:jT});function qT(e){let t={input:_(e,"input","real")};return L.runKernel(Id,t)}var Xo=z({real_:qT});function XT(e,t,a){let n=_(e,"x","transpose");if(t==null&&(t=n.shape.map((i,o)=>o).reverse()),F(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{F(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={x:n},s={perm:t};return n.dtype==="complex64"?De(()=>{let i=Xo(n),o=Wd(n);return i=L.runKernel(nr,{x:i},s),o=L.runKernel(nr,{x:o},s),a&&(o=Ln(o)),sr(i,o)}):L.runKernel(nr,r,s)}var Ko=z({transpose_:XT});function KT(e,t,a){let n=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");F(a==null||a>0&&Number.isInteger(a),()=>`If provided, numClasses must be a positive integer, but got ${a}`),F(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),F(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),F(n.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),F(a>0&&Number.isInteger(a),()=>`numClasses is required to be a positive integer, but got ${a}`);let s=kc(Xe(n,"int32"),a),i=kc(Xe(r,"int32"),a),o=Ko(s),l=Qe(o,i);return Xe(l,"int32")}var ZT=z({confusionMatrix_:KT}),ro={};Le(ro,{assertAndGetBroadcastShape:()=>Mt,getBroadcastDims:()=>sb,getReductionAxes:()=>lg});function sb(e,t){let a=e.length,n=[];for(let r=0;r<a;r++){let s=a-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&i===1&&n.unshift(s)}return n}function lg(e,t){let a=[];for(let n=0;n<t.length;n++){let r=e[e.length-n-1],s=t.length-n-1,i=t[s];(r==null||r===1&&i>1)&&a.unshift(s)}return a}function Mt(e,t){let a=[],n=Math.max(e.length,t.length);for(let r=0;r<n;r++){let s=e[e.length-r-1];s==null&&(s=1);let i=t[t.length-r-1];if(i==null&&(i=1),s===1)a.unshift(i);else if(i===1)a.unshift(s);else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else a.unshift(s)}return a}var Ir={};Le(Ir,{fromPixels:()=>nN,fromPixelsAsync:()=>tN,toPixels:()=>aN});function ug(e,t,a){if(oi(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Bn(e,a);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return fs(e,t,n,a)}var Ns;function ib(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=!1,n=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)a=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(bc(Vu,L.backendName)!=null){let p={pixels:e},h={numChannels:t};return L.runKernel(Vu,p,h)}let[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],d;if(i)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(n||a)d=e.data;else if(s||r||o){if(Ns==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Ns=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Ns=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ns.canvas.width=l,Ns.canvas.height=u,Ns.drawImage(e,0,0,l,u),d=Ns.getImageData(0,0,l,u).data}let c;if(t===4)c=new Int32Array(d);else{let p=l*u;c=new Int32Array(p*t);for(let h=0;h<p;h++)for(let f=0;f<t;++f)c[h*t+f]=d[h*4+f]}return ug(c,[u,l,t],"int32")}function YT(e){return e!=null&&e.data instanceof Uint8Array}function JT(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function QT(e){return e!=null&&e.width!==0&&e.height!==0}function eN(e){return JT()&&!(e instanceof ImageBitmap)&&QT(e)&&!YT(e)}async function tN(e,t=3){let a=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&eN(e)){let n;try{n=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===e.width&&n.height===e.height?a=n:a=e}else a=e;return ib(a,t)}async function aN(e,t){let a=_(e,"img","toPixels");if(!(e instanceof ft)){let u=a;a=Xe(u,"int32"),u.dispose()}if(a.rank!==2&&a.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${a.rank}.`);let[n,r]=a.shape.slice(0,2),s=a.rank===2?1:a.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(a.dtype!=="float32"&&a.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${a.dtype}. Please use float32 or int32 tensors.`);let i=await a.data(),o=a.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*n*4);for(let u=0;u<n*r;++u){let d=[0,0,0,255];for(let p=0;p<s;p++){let h=i[u*s+p];if(a.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(a.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);s===1?(d[0]=h*o,d[1]=h*o,d[2]=h*o):d[p]=h*o}let c=u*4;l[c+0]=Math.round(d[0]),l[c+1]=Math.round(d[1]),l[c+2]=Math.round(d[2]),l[c+3]=Math.round(d[3])}if(t!=null){t.width=r,t.height=n;let u=t.getContext("2d"),d=new ImageData(l,r,n);u.putImageData(d,0,0)}return a!==e&&a.dispose(),l}var nN=z({fromPixels_:ib}),dg={};Le(dg,{prepareAndValidate:()=>ob});function ob(e,t){let a=e.shape.length,n=t.shape.length;if(a<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>a)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${a}`);if(mt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let c=0;c<r.length-1;++c)i*=r[c];let o=e.shape,l=r.slice();l.pop();let u=1;for(let c=s;c<a;++c)u*=o[c],l.push(o[c]);let d=[...ll(e.shape).map(c=>c/u),1].slice(0,s);return[l,i,u,d]}var pg={};Le(pg,{calculateShapes:()=>lb,validateInput:()=>hg,validateUpdateShape:()=>cg});function cg(e,t,a){let n=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${a.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${r}.`;if(a.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<n+(a.rank-r))throw new Error(s+` Output shape length < ${n+(a.rank-r)}`);if(a.rank!==r+e.length-n)throw new Error(s+` update.rank != ${r+e.length-n}`);for(let i=0;i<r;++i)if(a.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${a.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<a.rank-r;++i)if(a.shape[i+r]!==e[i+n])throw new Error(s+` updates.shape[${i+r}] (${a.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function hg(e,t,a){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(a.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}cg(a,t,e)}function lb(e,t,a){let n=t.shape.length,r=n>1?t.shape[n-1]:1,s=a.length,i=1;for(let c=r;c<s;++c)i*=a[c];let o=r<1?1:r,l=mt(t.shape)/o,u=[...ll(a.slice(0,r)),1],d=mt(a);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:u,outputSize:d}}var gt={};Le(gt,{assertParamsValid:()=>sN,computeFlatOffset:()=>dN,computeOutShape:()=>oN,getNormalizedAxes:()=>lN,isSliceContinous:()=>uN,maskToAxes:()=>iN,parseSliceParams:()=>pN,sliceInfo:()=>cN,startForAxis:()=>mb,startIndicesWithElidedDims:()=>cb,stopForAxis:()=>gb,stopIndicesWithElidedDims:()=>hb,stridesForAxis:()=>fb,stridesWithElidedDims:()=>ub});var Gm=-2,rN=-1;function sN(e,t,a){let n=e.shape.length;F(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),F(n===a.length,()=>`Error in slice${n}D: Length of size ${a} must match the rank of the array (${n}).`);for(let r=0;r<n;++r)F(t[r]+a[r]<=e.shape[r],()=>`Error in slice${n}D: begin[${r}] + size[${r}] (${t[r]+a[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function iN(e){let t=[],a=0;for(;e>0;)e&1&&t.push(a),e/=2,a++;return t}function oN(e,t,a){let n=[];for(let r=0;r<e.length;r++)n[r]=Math.ceil((t[r]-e[r])/a[r]);return n}function ub(e,t,a,n){let r=[...e];for(let s=r.length;s<n.length;s++)r.push(1);for(let s=0;s<a;s++)s===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function db(e,t,a){return a<=e?a:a-(t-1)}function pb(e,t){let a=[];for(let n=0;n<e;n++)a.push(t+n);return a}function lN(e,t,a,n,r,s,i,o,l){let u=e.length,d=new Array(u),c=new Array(u),p=new Array(u);if(t.length&&a>0){let h=t[0],f=a+1;d=cb(i,h,f,n,e),c=hb(o,h,f,r,e),p=ub(s,h,f,e)}else for(let h=0;h<u;h++)d[h]=mb(i,n,s,e,h,l),c[h]=gb(o,r,s,e,h,l),p[h]=fb(s,h,l);return{begin:d,end:c,strides:p}}function cb(e,t,a,n,r){let s=[...r],i=pb(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let l=db(t,a,o),u=n[l];e&1<<l&&(u=0),s[o]=u}return s}function hb(e,t,a,n,r){let s=[...r],i=pb(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let l=db(t,a,o),u=n[l];e&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[o]=u}for(let o=0;o<s.length;o++){let l=r[o];s[o]<0&&(s[o]+=l),s[o]=Bu(0,s[o],r[o])}return s}function fb(e,t,a){let n=e[t];return(a&1<<t||n==null)&&(n=1),n}function mb(e,t,a,n,r,s){let i=t[r],o=a[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=n[r];return i<0&&(i+=l),i=Bu(0,i,l-1),i}function gb(e,t,a,n,r,s){let i=t[r],o=a[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=n[r];return i<0&&(i+=l),o>0?i=Bu(0,i,l):i=Bu(-1,i,l-1),i}function uN(e,t,a){let n=a.length;for(let r=0;r<a.length;r++)if(a[r]>1){n=r;break}for(let r=n+1;r<a.length;r++)if(t[r]>0||a[r]!==e[r])return!1;return!0}function dN(e,t){let a=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)a+=e[n]*t[n];return a}function pN(e,t,a){let n,r=e.shape.length;typeof t=="number"?n=[t,...new Array(r-1).fill(0)]:t.length<r?n=t.concat(new Array(r-t.length).fill(0)):n=t.slice(),n.forEach(i=>{F(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return a==null?s=new Array(r).fill(-1):typeof a=="number"?s=[a,...new Array(r-1).fill(-1)]:a.length<r?s=a.concat(new Array(r-a.length).fill(-1)):s=a,s=s.map((i,o)=>i>=0?i:(F(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-n[o])),[n,s]}function cN(e,t,a,n,r,s,i,o,l){let u;if(n==null?(u=new Array(t.length),u.fill(1)):u=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,c={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:u.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let y=0;y<c.dims;y++)d&&(1<<y&o)!==0&&c.numAddAxisAfterEllipsis++,1<<y&i&&(d=!0);d||(c.ellipsisMask|=1<<c.dims,c.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};hN(c,p);let h=!0,f=!0,m=!0,g=[],A=[];for(let y=0;y<e.length;++y){if(p.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);let x=!!(p.shrinkAxisMask&1<<y),b=e[y];if(b===-1){g.push(x?1:-1);continue}let w=[p.beginMask&1<<y,p.endMask&1<<y],S=[p.strides[y]>0?0:-1,p.strides[y]>0?b:b-1];if(x&&p.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[y]===1;let N=!!(p.beginMask&1<<y&&p.endMask&1<<y);if(p.beginValid&&p.endValid){if(x){let E=p.begin[y]<0?b+p.begin[y]:p.begin[y];if(p.begin[y]=E,p.end[y]=p.begin[y]+1,E<0||E>=b)throw Error(`slice index ${p.begin[y]} of dimension ${y} out of bounds.`)}else p.begin[y]=OA(p.begin[y],0,p.strides[y],b,w,S),p.end[y]=OA(p.end[y],1,p.strides[y],b,w,S);let $=p.strides[y]===1&&p.begin[y]===0&&p.end[y]===b;h=h&&$,f=f&&(y===0&&p.strides[y]===1||$)}else h=h&&p.strides[y]===1&&N,f=f&&(y===0&&p.strides[y]===1||N);let C,M=!1;if(p.beginValid&&p.endValid?(C=p.end[y]-p.begin[y],M=!0):x?(C=1,M=!0):N&&b>=0&&(p.strides[y]<0?C=-b:C=b,M=!0),M){let $;C===0||C<0!=p.strides[y]<0?$=0:$=Math.trunc(C/p.strides[y])+(C%p.strides[y]!==0?1:0),g.push($)}else g.push(-1)}for(let y=0;y<p.finalShapeGatherIndices.length;++y){let x=p.finalShapeGatherIndices[y];x>=0?A.push(g[x]):x===Gm&&A.push(1)}return{finalShapeSparse:A.filter((y,x)=>p.finalShapeGatherIndices[x]!==Gm),finalShape:A,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function hN(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let a=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;a<r;a++)t.begin[a]=0,t.end[a]=0,t.strides[a]=1,t.beginMask|=1<<a,t.endMask|=1<<a,t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[a]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(Gm),t.finalShapeGatherIndicesSparse.push(-1);else{if(a===t.begin.length)throw Error(`Index out of range using input dim ${a}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[a]=e.begin[n]),e.end!=null&&(t.end[a]=e.end[n]),t.strides[a]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<a),e.endMask&1<<n&&(t.endMask|=1<<a),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(rN),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<a):(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[a]=n,a++}}function OA(e,t,a,n,r,s){if(r[t])return a>0?s[t]:s[t+1&1];{let i=e<0?n+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var Ab={};Le(Ab,{Serializable:()=>yb,SerializationMap:()=>Ds,registerClass:()=>ms});var yb=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Ds=class{constructor(){this.classNameMap={}}static getMap(){return Ds.instance==null&&(Ds.instance=new Ds),Ds.instance}static register(e){Ds.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function ms(e){F(e.className!=null,()=>"Class being registered does not have the static className property defined."),F(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),F(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ds.register(e)}var xb={};Le(xb,{TEST_EPSILON_FLOAT16:()=>bb,createVideoElement:()=>vN,encodeStrings:()=>vb,expectArrayBuffersEqual:()=>bN,expectArraysClose:()=>mN,expectArraysEqual:()=>AN,expectNumbersClose:()=>yN,expectPromiseToFail:()=>gN,expectValuesInRange:()=>xN,play:()=>wN,testEpsilon:()=>fg});var fN=.001,bb=.1;function mN(e,t,a){return a==null&&(a=fg()),Hm(e,t,(n,r)=>mg(n,r,a))}function fg(){return L.backend.floatPrecision()===32?fN:bb}function Hm(e,t,a){let n=!0;if((aa(e)||aa(t))&&(n=!1),aa(e)&&aa(t)&&(n=!0),n){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Bn(e),o=Bn(t);if(!qr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=aa(e)?e:Xs(e),s=aa(t)?t:Xs(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.
Actual:   ${r}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=r[i],l=s[i];if(!a(o,l))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function gN(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function AN(e,t){let a=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Cr(e)||Cr(e[0])||Cr(t)||Cr(t[0])?Hm(e,a,(n,r)=>n==r):Hm(e,t,(n,r)=>mg(n,r,0))}function yN(e,t,a){if(a==null&&(a=fg()),!mg(e,t,a))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function mg(e,t,a){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>a)}function xN(e,t,a){for(let n=0;n<e.length;n++)if(e[n]<t||e[n]>a)throw new Error(`Value out of range:${e[n]} low: ${t}, high: ${a}`)}function bN(e,t){let a=new Float32Array(e),n=new Float32Array(t);if(a.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${a.length}`);for(let r=0;r<n.length;r++)if(a[r]!==n[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${n[r]} but got ${a[r]} instead`)}function vb(e){for(let t=0;t<e.length;t++){let a=e[t];Array.isArray(a)?vb(a):e[t]=Pd(a)}return e}function vN(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(a=>{t.addEventListener("loadeddata",n=>a(t)),t.load()})}async function wN(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var wb="4.0.0";function kN(e,t){let a=_(e,"a","add"),n=_(t,"b","add");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(ur,r)}var ke=z({add_:kN});function IN(e,t){let a=_(e,"a","floorDiv"),n=_(t,"b","floorDiv");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(Ti,r)}var Ah=z({floorDiv_:IN});function SN(e,t){let a=_(e,"a","div"),n=_(t,"b","div");if([a,n]=bt(a,n),a.dtype==="int32"&&n.dtype==="int32")return Ah(a,n);let r={a,b:n},s={};return L.runKernel(wi,r,s)}var Ne=z({div_:SN});function TN(e,t){let a=_(e,"a","mul"),n=_(t,"b","mul");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(is,r)}var ie=z({mul_:TN});function NN(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let a={x:t};return L.runKernel(Xc,a)}else{let a={x:t};return L.runKernel(ul,a)}}var Oa=z({abs_:NN});function CN(e){let t={x:_(e,"x","acos")};return L.runKernel(ud,t)}var kb=z({acos_:CN});function EN(e){let t={x:_(e,"x","acosh")};return L.runKernel(dd,t)}var Ib=z({acosh_:EN});function RN(e){F(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),F(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,s)=>_(r,`tensors${s}`,"addN")),a=t[0];t.forEach(r=>{if(r.dtype!==a.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!qr(r.shape,a.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return L.runKernel(li,n)}var gg=z({addN_:RN});function _N(e,t=null,a=!1){let n={x:_(e,"x","all","bool")},r={axis:t,keepDims:a};return L.runKernel(dl,n,r)}var Sb=z({all_:_N});function $N(e,t=null,a=!1){let n={x:_(e,"x","any","bool")},r={axis:t,keepDims:a};return L.runKernel(pl,n,r)}var Tb=z({any_:$N});function MN(e,t=0){let a={x:_(e,"x","argMax")},n={axis:t};return L.runKernel(ui,a,n)}var Bl=z({argMax_:MN});function FN(e,t=0){let a={x:_(e,"x","argMin")},n={axis:t};return L.runKernel(pd,a,n)}var Nb=z({argMin_:FN});function ON(e){let t={x:_(e,"x","asin")};return L.runKernel(cd,t)}var Cb=z({asin_:ON});function PN(e){let t={x:_(e,"x","asinh")};return L.runKernel(hd,t)}var Eb=z({asinh_:PN});function DN(e){let t={x:_(e,"x","atan")};return L.runKernel(fd,t)}var Rb=z({atan_:DN});function zN(e,t){let a=_(e,"a","atan2"),n=_(t,"b","atan2");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(cl,r)}var _b=z({atan2_:zN});function LN(e){let t={x:_(e,"x","atanh")};return L.runKernel(md,t)}var $b=z({atanh_:LN});function WN(e,t,a,n,r="NHWC",s){let i=e[3],o=[...t,i],l=Ob(r);return Bd(e,o,a,s,n,null,null,l)}function Mb(e,t,a,n,r,s,i="channelsLast"){let[o,l]=Sc(t),u;if(i==="channelsLast")u=[o,l,e[3],e[3]];else if(i==="channelsFirst")u=[o,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Bd(e,u,a,n,r,s,!1,i)}function BN(e,t,a,n,r,s,i="NDHWC"){let[o,l,u]=jm(t),d,c;if(i==="NDHWC")c="channelsLast",d=[o,l,u,e[4],e[4]];else if(i==="NCDHW")c="channelsFirst",d=[o,l,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Fb(e,d,a,n,r,!1,c,s)}function Bd(e,t,a,n,r,s,i=!1,o="channelsLast"){let[l,u,d,c]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,d,c]=e;else if(o==="channelsFirst")[l,c,u,d]=e;else throw new Error(`Unknown dataFormat ${o}`);let[p,h,,f]=t,[m,g]=Sc(a),[A,y]=Sc(n),x=Uo(p,A),b=Uo(h,y),{padInfo:w,outHeight:S,outWidth:N}=GN(r,u,d,m,g,x,b,s,o),C=i?f*c:f,M;return o==="channelsFirst"?M=[l,C,S,N]:o==="channelsLast"&&(M=[l,S,N,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:c,outHeight:S,outWidth:N,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:A,dilationWidth:y,inShape:e,outShape:M,filterShape:t}}function Fb(e,t,a,n,r,s=!1,i="channelsLast",o){let[l,u,d,c,p]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,d,c,p]=e;else if(i==="channelsFirst")[l,p,u,d,c]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,f,m,,g]=t,[A,y,x]=jm(a),[b,w,S]=jm(n),N=Uo(h,b),C=Uo(f,w),M=Uo(m,S),{padInfo:$,outDepth:E,outHeight:I,outWidth:R}=HN(r,u,d,c,A,y,x,N,C,M,o),P=s?g*p:g,D;return i==="channelsFirst"?D=[l,P,E,I,R]:i==="channelsLast"&&(D=[l,E,I,R,P]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:E,outHeight:I,outWidth:R,outChannels:P,padInfo:$,strideDepth:A,strideHeight:y,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:C,effectiveFilterWidth:M,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:e,outShape:D,filterShape:t}}function VN(e,t,a,n,r){n==null&&(n=Ag(e,t,a));let s=e[0],i=e[1],o=Us((s-t+2*n)/a+1,r),l=Us((i-t+2*n)/a+1,r);return[o,l]}function UN(e,t,a,n,r,s){r==null&&(r=Ag(e,t,n));let i=e[0],o=e[1],l=e[2],u=Us((i-t+2*r)/n+1,s),d=Us((o-t+2*r)/n+1,s),c=Us((l-t+2*r)/n+1,s);return[u,d,c,a]}function Ag(e,t,a,n=1){let r=Uo(t,n);return Math.floor((e[0]*(a-1)-a+r)/2)}function Sc(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function jm(e){return typeof e=="number"?[e,e,e]:e}function Uo(e,t){return t<=1?e:e+(e-1)*(t-1)}function GN(e,t,a,n,r,s,i,o,l){let u,d,c;if(typeof e=="number"){u={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=VN([t,a],s,n,e,o);d=p[0],c=p[1]}else if(e==="same"){d=Math.ceil(t/n),c=Math.ceil(a/r);let p=Math.max(0,(d-1)*n+s-t),h=Math.max(0,(c-1)*r+i-a),f=Math.floor(p/2),m=p-f,g=Math.floor(h/2),A=h-g;u={top:f,bottom:m,left:g,right:A,type:"SAME"}}else if(e==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/n),c=Math.ceil((a-i+1)/r);else if(typeof e=="object"){let p=l==="channelsLast"?e[1][0]:e[2][0],h=l==="channelsLast"?e[1][1]:e[2][1],f=l==="channelsLast"?e[2][0]:e[3][0],m=l==="channelsLast"?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},d=Us((t-s+p+h)/n+1,o),c=Us((a-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:d,outWidth:c}}function HN(e,t,a,n,r,s,i,o,l,u,d){let c,p,h,f;if(typeof e=="number"){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=UN([t,a,n,1],o,1,r,e,d);p=m[0],h=m[1],f=m[2]}else if(e==="same"){p=Math.ceil(t/r),h=Math.ceil(a/s),f=Math.ceil(n/i);let m=(p-1)*r+o-t,g=(h-1)*s+l-a,A=(f-1)*i+u-n,y=Math.floor(m/2),x=m-y,b=Math.floor(g/2),w=g-b,S=Math.floor(A/2),N=A-S;c={top:b,bottom:w,left:S,right:N,front:y,back:x,type:"SAME"}}else if(e==="valid")c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),h=Math.ceil((a-l+1)/s),f=Math.ceil((n-u+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outDepth:p,outHeight:h,outWidth:f}}function Us(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Xu(e){let[t,a,n]=Sc(e);return t===1&&a===1&&n===1}function dr(e,t){return Xu(e)||Xu(t)}function Ob(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function mn(e,t,a){if(a!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);if(typeof t=="number")F(Ho(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(r=>{F(Ho(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function jN(e,t){let a={x:_(e,"x","reshape","string_or_numeric")},n={shape:t};return L.runKernel(Nl,a,n)}var te=z({reshape_:jN});function qN(e,t,a,n,r){let s=_(e,"x","avgPool","float32"),i=1;F(dr(a,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`);let o=s,l=!1;s.rank===3&&(l=!0,o=te(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),mn("avgPool",n,r);let u={x:o},d={filterSize:t,strides:a,pad:n,dimRoundingMode:r},c=L.runKernel(di,u,d);return c=Xe(c,s.dtype),l?te(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var yg=z({avgPool_:qN});function XN(e,t,a,n,r,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,l=!1;i.rank===4&&(l=!0,o=te(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),F(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),mn("avgPool3d",n,r);let u={x:o},d={filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:s},c=L.runKernel(Hc,u,d);return c=Xe(c,o.dtype),l?te(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var Pb=z({avgPool3d_:XN});function KN(e,t=0){F(e.length>=1,()=>"Pass at least one tensor to concat");let a=qu(e,"tensors","concat","string_or_numeric");if(a[0].dtype==="complex64"&&a.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),a.length===1)return Ca(a[0]);let n=a,r={axis:t};return L.runKernel(fl,n,r)}var ut=z({concat_:KN});function ZN(e){let t={x:_(e,"x","sigmoid","float32")};return L.runKernel(us,t)}var Wn=z({sigmoid_:ZN});function YN(e,t,a){let n=_(e,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let r={x:n},s={begin:t,size:a};return L.runKernel(_l,r,s)}var Ve=z({slice_:YN});function JN(e){let t={x:_(e,"x","tanh","float32")};return L.runKernel(Qi,t)}var Tc=z({tanh_:JN});function QN(e,t,a,n,r,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),l=_(a,"lstmBias","basicLSTMCell"),u=_(n,"data","basicLSTMCell"),d=_(r,"c","basicLSTMCell"),c=_(s,"h","basicLSTMCell"),p=ut([u,c],1),h=Qe(p,o),f=ke(h,l),m=f.shape[0],g=f.shape[1]/4,A=[m,g],y=Ve(f,[0,0],A),x=Ve(f,[0,g],A),b=Ve(f,[0,g*2],A),w=Ve(f,[0,g*3],A),S=ke(ie(Wn(y),Tc(x)),ie(d,Wn(ke(i,b)))),N=ie(Tc(S),Wn(w));return[S,N]}var Db=z({basicLSTMCell_:QN});function eC(e,t,a){let n=_(e,"x","batchToSpaceND"),r=t.reduce((o,l)=>o*l);F(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),F(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),F(n.shape[0]%r===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let s={x:n},i={blockShape:t,crops:a};return L.runKernel(hl,s,i)}var xg=z({batchToSpaceND_:eC});function tC(e){let t;return e.rank===0||e.rank===1?t=te(e,[1,1,1,e.size]):e.rank===2?t=te(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function aC(e,t,a,n,r,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let d;n!=null&&(d=_(n,"offset","batchNorm")),F(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:tC(i),scale:u,offset:d,mean:o,variance:l},p={varianceEpsilon:s},h=L.runKernel(Ni,c,p);return te(h,i.shape)}var Vd=z({batchNorm_:aC});function nC(e,t,a,n,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let d;return n!=null&&(d=_(n,"offset","batchNorm")),F(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),F(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),F(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&F(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),Vd(i,o,l,d,u,s)}var zb=z({batchNorm2d_:nC});function rC(e,t,a,n,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let d;return n!=null&&(d=_(n,"offset","batchNorm")),F(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),F(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),F(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&F(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),Vd(i,o,l,d,u,s)}var Lb=z({batchNorm3d_:rC});function sC(e,t,a,n,r,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),l=_(a,"variance","batchNorm"),u;r!=null&&(u=_(r,"scale","batchNorm"));let d;return n!=null&&(d=_(n,"offset","batchNorm")),F(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),F(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),F(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&F(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&F(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),Vd(i,o,l,d,u,s)}var Wb=z({batchNorm4d_:sC});function iC(e,t,a){let n=_(e,"x","bincount"),r=_(t,"weights","bincount");F(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),F(a>=0,()=>`size must be non-negative, but got ${a}.`),F(r.size===n.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${r.shape}.`);let s={x:n,weights:r},i={size:a};return L.runKernel(jc,s,i)}var bg=z({bincount_:iC});function oC(e,t){let a=_(e,"s0","broadcastArgs","int32"),n=_(t,"s1","broadcastArgs","int32");if(a.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${a.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let r={s0:a,s1:n};return L.runKernel(qc,r)}var Bb=z({broadcastArgs_:oC});function lC(e,t){let a=_(e,"broadcastTo","x"),n=a.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<a.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let l=a.shape.slice();for(;l.length<t.length;)l.unshift(1);a=te(a,l)}let r=a.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(a.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return Ca(a);let i={x:a},o={reps:s};return L.runKernel(hs,i,o)}var Gs=z({broadcastTo_:lC});function uC(e){let t={x:_(e,"x","ceil","float32")};return L.runKernel(Xr,t)}var Vb=z({ceil_:uC});function ir(e,t,a){let n={shape:e,value:t,dtype:a};return L.runKernel(gl,{},n)}function dC(e,t,a){let n=_(e,"x","clipByValue");if(F(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`),t===a)return ir(n.shape,t,n.dtype);let r={x:n},s={clipValueMin:t,clipValueMax:a};return L.runKernel(Kr,r,s)}var Ub=z({clipByValue_:dC});function pC(e){return ut(e,0)}var Gb=z({concat1d_:pC});function cC(e,t){return ut(e,t)}var yh=z({concat2d_:cC});function hC(e,t){return ut(e,t)}var Hb=z({concat3d_:hC});function fC(e,t){return ut(e,t)}var jb=z({concat4d_:fC});function mC(e,t,a,n,r="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),mn("conv2d",n,i);let c=r==="NHWC"?u.shape[3]:u.shape[1];F(c===l.shape[2],()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`),F(dr(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let p={x:u,filter:l},h={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i},f=L.runKernel(hi,p,h);return d?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ud=z({conv2d_:mC});function gC(e,t,a,n,r="NWC",s=1,i){let o=_(e,"x","conv1d"),l=_(t,"filter","conv1d"),u=o,d=!1;o.rank===2&&(d=!0,u=te(o,[1,o.shape[0],o.shape[1]])),F(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),F(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),mn("conv1d",n,i),F(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),F(dr(a,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${s}'`),F(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let c=te(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=te(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=Ud(p,c,[1,a],n,"NHWC",[1,s],i);return d?te(h,[h.shape[2],h.shape[3]]):te(h,[h.shape[0],h.shape[2],h.shape[3]])}var qb=z({conv1d_:gC});function AC(e,t,a,n,r,s="NHWC",i){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;t.rank===3&&(u=!0,l=te(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),F(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),F(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),F(a.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let d=s==="NHWC"?o[3]:o[1],c=s==="NHWC"?l.shape[3]:l.shape[1];F(d===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${a.shape[2]}.`),F(c===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${a.shape[3]}.`),mn("conv2dDerInput",r,i);let p={dy:l,filter:a},h={strides:n,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=L.runKernel(fi,p,h);return u?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Xb=z({conv2DBackpropInput_:AC});function yC(e,t,a,n,r,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Xb(a,i,o,n,r,"NHWC",s)}var Kb=z({conv2dTranspose_:yC});function xC(e,t,a,n,r="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=te(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),F(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),F(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),F(dr(a,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),F(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let d={x:l,filter:o},c={strides:a,pad:n,dataFormat:r,dilations:s},p=L.runKernel(Zc,d,c);return u?te(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Zb=z({conv3d_:xC});function bC(e,t,a,n,r){F(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=te(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];F(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),F(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),F(a.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),F(l===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${a.shape[3]}.`),F(u===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${a.shape[4]}.`);let d={dy:i,filter:a},c={pad:r,strides:n,inputShape:s},p=L.runKernel(Yc,d,c);return o?te(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var vC=z({conv3DBackpropInput_:bC});function wC(e,t,a,n,r){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return vC(a,s,i,n,r)}var Yb=z({conv3dTranspose_:wC});function kC(e){let t={x:_(e,"x","cos","float32")};return L.runKernel(mi,t)}var Jb=z({cos_:kC});function IC(e){let t={x:_(e,"x","cosh","float32")};return L.runKernel(gi,t)}var Qb=z({cosh_:IC});function SC(e,t=0,a=!1,n=!1){let r={x:_(e,"x","cumprod")},s={axis:t,exclusive:a,reverse:n};return L.runKernel(Ai,r,s)}var e3=z({cumprod_:SC});function TC(e,t=0,a=!1,n=!1){let r={x:_(e,"x","cumsum")},s={axis:t,exclusive:a,reverse:n};return L.runKernel(yi,r,s)}var t3=z({cumsum_:TC});function NC(e,t,a,n=!1){let r=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");F(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),F(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),F(a>=0,()=>`size must be non-negative, but got ${a}.`),F(s.size===r.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`);let i={x:r,weights:s},o={size:a,binaryOutput:n};return L.runKernel(Jc,i,o)}var a3=z({denseBincount_:NC});function CC(e,t,a="NHWC"){let n=_(e,"x","depthToSpace","float32"),r=a==="NHWC"?n.shape[1]:n.shape[2],s=a==="NHWC"?n.shape[2]:n.shape[3],i=a==="NHWC"?n.shape[3]:n.shape[1];F(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),F(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${n.shape}`),F(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),F(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let o={x:n},l={blockSize:t,dataFormat:a};return L.runKernel(bi,o,l)}var n3=z({depthToSpace_:CC});function EC(e,t,a,n,r="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;o.rank===3&&(d=!0,u=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),F(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let c=r==="NHWC"?u.shape[3]:u.shape[1];F(c===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c}) must match the inChannels dimension in filter ${l.shape[2]}.`),mn("depthwiseConv2d",n,i);let p={x:u,filter:l},h={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i},f=L.runKernel(vi,p,h);return d?te(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var xh=z({depthwiseConv2d_:EC});function RC(e){let t={x:_(e,"x","diag")};return L.runKernel(th,t)}var r3=z({diag_:RC});function _C(e,t,a,n,r=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");F(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),F(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),F(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=te(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let d={x:l,filter:o},c={strides:a,pad:n,dilations:r},p=L.runKernel(ah,d,c);return u?te(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var s3=z({dilation2d_:_C});function $C(e,t){let a=_(e,"a","equal","string_or_numeric"),n=_(t,"b","equal","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(Zr,r)}var vg=z({equal_:$C});function MC(e,t,a){let n=_(t,"a","where"),r=_(a,"b","where"),s=_(e,"condition","where","bool"),i=Mt(Mt(s.shape,n.shape),r.shape),o=Gs(s,i),l=Gs(n,i),u=Gs(r,i),d={condition:o,t:l,e:u};return L.runKernel(Rl,d)}var Js=z({where_:MC});function FC(e){let t={x:_(e,"x","zerosLike")};return L.runKernel(Ll,t)}var Ba=z({zerosLike_:FC});function OC(e,t){let a=_(e,"a","div"),n=_(t,"b","div");[a,n]=bt(a,n);let r=Ne(a,n),s=Ba(r),i=vg(n,s);return Js(i,s,r)}var i3=z({divNoNan_:OC});function PC(e,t){let a=_(e,"t1","dot"),n=_(t,"t2","dot");F((a.rank===1||a.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${n.rank}.`);let r=a.rank===1?a.size:a.shape[1],s=n.rank===1?n.size:n.shape[0];if(F(r===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`),a.rank===1&&n.rank===1){let i=te(a,[1,-1]),o=te(n,[-1,1]),l=Qe(i,o);return te(l,[])}else if(a.rank===1&&n.rank===2){let i=te(a,[1,-1]),o=te(n,[n.shape[0],n.shape[1]]),l=Qe(i,o);return te(l,[l.size])}else if(a.rank===2&&n.rank===1){let i=te(n,[-1,1]),o=Qe(a,i);return te(o,[o.size])}else{let i=te(n,[n.shape[0],n.shape[1]]);return Qe(a,i)}}var o3=z({dot_:PC});function DC(e,...t){let a=t.map((r,s)=>_(r,`tensors${s}`,"einsum")),n={equation:e};return L.runKernel(Ad,a,n)}var l3=z({einsum_:DC});function zC(e){let t={x:_(e,"x","elu","float32")};return L.runKernel(ki,t)}var wg=z({elu_:zC});function LC(e){let t=_(e,"x","erf");F(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Xe(t,"float32"));let a={x:t};return L.runKernel(yd,a)}var u3=z({erf_:LC});function kg(e,t){for(let a=0;a<e.length;++a)if(e[e.length-a-1]!==t-1-a)return!1;return!0}function d3(e,t,a){let n=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<n;o++)a.indexOf(o)===-1?r.push(e[s++]):r.push(t[i++]);return r}function WC(e,t){let a=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&a.push(e[s]);let r=t.map(s=>e[s]);return[a,r]}function Gd(e,t){let a=t.map(n=>1);return d3(e,a,t)}function BC(e,t,a){F(kg(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function VC(e,t){if(kg(e,t))return null;let a=[];for(let n=0;n<t;++n)e.indexOf(n)===-1&&a.push(n);return e.forEach(n=>a.push(n)),a}function UC(e){return e.map((t,a)=>[a,t]).sort((t,a)=>t[1]-a[1]).map(t=>t[0])}function GC(e,t){let a=[];for(let n=t-e;n<t;++n)a.push(n);return a}function HC(e,t=null,a=!1){let n={x:_(e,"x","max")},r={reductionIndices:t,keepDims:a};return L.runKernel(Mi,n,r)}var hn=z({max_:HC});function jC(e,t=null,a=!1){let n={x:_(e,"x","min")},r={axis:t,keepDims:a};return L.runKernel(Pi,n,r)}var Hs=z({min_:jC});function qC(e,t){let a=_(e,"base","pow"),n=_(t,"exp","pow");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(Bi,r)}var Zo=z({pow_:qC});function $e(e,t){if((aa(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&aa(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return fs(e,[],[],t)}function XC(e){let t={x:_(e,"x","sqrt","float32")};return L.runKernel(ds,t)}var Vn=z({sqrt_:XC});function KC(e){let t=_(e,"x","square"),a={};return L.runKernel("Square",{x:t},a)}var fn=z({square_:KC});function ZC(e,t=null,a=!1){let n=_(e,"x","sum");n.dtype==="bool"&&(n=Xe(n,"int32"));let r={x:n},s={axis:t,keepDims:a};return L.runKernel(Zi,r,s)}var at=z({sum_:ZC});function YC(e,t="euclidean",a=null,n=!1){e=_(e,"x","norm");let r=p3(e,t,a),s=r.shape;if(n){let i=ld(a,e.shape);s=Gd(r.shape,i)}return te(r,s)}function p3(e,t,a=null){if(e.rank===0)return Oa(e);if(e.rank!==1&&a===null)return p3(te(e,[-1]),t,a);if(e.rank===1||typeof a=="number"||Array.isArray(a)&&a.length===1){if(t===1)return at(Oa(e),a);if(t===1/0)return hn(Oa(e),a);if(t===-1/0)return Hs(Oa(e),a);if(t==="euclidean"||t===2)return Vn(at(Zo(Oa(e),$e(2,"int32")),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(a)&&a.length===2){if(t===1)return hn(at(Oa(e),a[0]),a[1]-1);if(t===1/0)return hn(at(Oa(e),a[1]),a[0]);if(t===-1/0)return Hs(at(Oa(e),a[1]),a[0]);if(t==="fro"||t==="euclidean")return Vn(at(fn(e),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${a}`)}var Hd=z({norm_:YC});function JC(e,t=null,a=!1){return Hd(e,"euclidean",t,a)}var c3=z({euclideanNorm_:JC});function QC(e){let t={x:_(e,"x","exp")};return L.runKernel(Yr,t)}var Vr=z({exp_:QC});function eE(e,t=0){let a=_(e,"x","expandDims","string_or_numeric");F(t<=a.rank,()=>"Axis must be <= rank of the tensor");let n={input:a},r={dim:t};return L.runKernel(ml,n,r)}var Pa=z({expandDims_:eE});function tE(e){let t={x:_(e,"x","expm1")};return L.runKernel(Ii,t)}var h3=z({expm1_:tE});function aE(e,t){let a=_(e,"x","tile","string_or_numeric");F(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`);let n={x:a},r={reps:t};return L.runKernel(hs,n,r)}var js=z({tile_:aE});function nE(e,t,a,n="float32"){t==null&&(t=e);let r=xe([e,t],n),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);let i=te(r.toTensor(),[e,t]);if(a==null)return i;if(a.length===1)return js(Pa(i,0),[a[0],1,1]);if(a.length===2)return js(Pa(Pa(i,0),0),[a[0],a[1],1,1]);if(a.length===3)return js(Pa(Pa(Pa(i,0),0),0),[a[0],a[1],a[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}var Ig=z({eye_:nE});function rE(e){let t={x:_(e,"x","floor","float32")};return L.runKernel(Jr,t)}var Sg=z({floor_:rE});function sE(e,t,a=0,n=0){let r=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:r,indices:s},o={axis:a,batchDims:n};return L.runKernel(Al,i,o)}var Tg=z({gather_:sE});function iE(e,t){let a=_(e,"a","greater","string_or_numeric"),n=_(t,"b","greater","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(Qr,r)}var jd=z({greater_:iE});function oE(e,t){let a=_(e,"a","greaterEqual","string_or_numeric"),n=_(t,"b","greaterEqual","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(es,r)}var Ng=z({greaterEqual_:oE});function lE(e){let t={x:_(e,"x","isFinite")};return L.runKernel(bd,t)}var f3=z({isFinite_:lE});function uE(e){let t={x:_(e,"x","isInf")};return L.runKernel(vd,t)}var m3=z({isInf_:uE});function dE(e){let t={x:_(e,"x","isNaN")};return L.runKernel(yl,t)}var g3=z({isNaN_:dE});function pE(e,t=.2){let a={x:_(e,"x","leakyRelu")},n={alpha:t};return L.runKernel(Ri,a,n)}var Cg=z({leakyRelu_:pE});function cE(e,t){let a=_(e,"a","less","string_or_numeric"),n=_(t,"b","less","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(ts,r)}var A3=z({less_:cE});function hE(e,t){let a=_(e,"a","lessEqual","string_or_numeric"),n=_(t,"b","lessEqual","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(as,r)}var bh=z({lessEqual_:hE});function y3(e,t,a){if(a<=0)throw new Error("The number of values should be positive.");let n={start:e,stop:t,num:a};return L.runKernel(sh,{},n)}function fE(e,t=5,a=1,n=1,r=.5){let s=_(e,"x","localResponseNormalization");F(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),F(Ho(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=te(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:a,alpha:n,beta:r},d=L.runKernel(ih,l,u);return o?te(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var x3=z({localResponseNormalization_:fE});function mE(e){let t={x:_(e,"x","log","float32")};return L.runKernel(ns,t)}var Yo=z({log_:mE});function gE(e){let t={x:_(e,"x","log1p")};return L.runKernel(wd,t)}var Eg=z({log1p_:gE});function AE(e){return F(zr(e),()=>"The f passed in grad(f) must be a function"),(t,a)=>{let n=_(t,"x","tf.grad","string_or_numeric"),r=a!=null?_(a,"dy","tf.grad"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(n),[n],r);return r!=null&&Aa(s.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vh(i),i[0]})}}function yE(e){return F(zr(e),()=>"The f passed in grads(f) must be a function"),(t,a)=>{F(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=qu(t,"args","tf.grads","string_or_numeric"),r=a!=null?_(a,"dy","tf.grads"):null;return L.tidy(()=>{let{value:s,grads:i}=L.gradients(()=>e(...n),n,r);return r!=null&&Aa(s.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(i),i})}}function xE(e){return F(zr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,a)=>{F(t instanceof ft,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(a==null||a instanceof ft,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:r}=L.gradients(()=>e(t),[t],a);return vh(n),{grad:n[0],value:r}}}function bE(e){return F(zr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,a)=>{F(Array.isArray(t)&&t.every(r=>r instanceof ft),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(a==null||a instanceof ft,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=L.gradients(()=>e(...t),t,a);return a!=null&&Aa(n.value.shape,a.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vh(n.grads),n}}function b3(e,t){F(zr(e),()=>"The f passed in variableGrads(f) must be a function"),F(t==null||Array.isArray(t)&&t.every(u=>u instanceof Hu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=t!=null;if(!a){t=[];for(let u in L.registeredVariables)t.push(L.registeredVariables[u])}let n=a?t.filter(u=>!u.trainable):null,r=t.length;t=t.filter(u=>u.trainable),F(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let s=!0,{value:i,grads:o}=L.gradients(e,t,null,s);F(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,d)=>{o[d]!=null&&(l[u.name]=o[d])}),n?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Un(e){return L.customGrad(e)}function vh(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function vE(e){let t={x:_(e,"x","softplus")};return L.runKernel(Nd,t)}var Rg=z({softplus_:vE});function wE(e){let t=_(e,"x","logSigmoid");return Un(a=>({value:Ln(Rg(Ln(a))),gradFunc:n=>ie(n,Wn(Ln(a)))}))(t)}var v3=z({logSigmoid_:wE});function kE(e,t){let a=_(e,"a","sub"),n=_(t,"b","sub");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(cs,r)}var we=z({sub_:kE});function IE(e,t=-1){let a=_(e,"logits","logSoftmax");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and axis was ${t}`);return Un((n,r)=>{let s=hn(n,t,!0),i=we(n,s),o=we(Xe(i,"float32"),Yo(at(Vr(i),t,!0)));return r([o]),{value:o,gradFunc:(l,u)=>{let[d]=u,c=!0,p=Vr(d);return we(l,ie(at(l,t,c),p))}}})(a)}var w3=z({logSoftmax_:IE});function SE(e,t=null,a=!1){let n=_(e,"x","logSumExp"),r=ld(t,n.shape),s=hn(n,r,!0),i=we(n,s),o=Vr(i),l=at(o,r),u=Yo(l),d=ke(te(s,u.shape),u);if(a){let c=Gd(d.shape,r);return te(d,c)}return d}var _g=z({logSumExp_:SE});function TE(e,t){let a=_(e,"a","logicalAnd","bool"),n=_(t,"b","logicalAnd","bool");Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(_i,r)}var Ku=z({logicalAnd_:TE});function NE(e){let t={x:_(e,"x","logicalNot","bool")};return L.runKernel($i,t)}var $g=z({logicalNot_:NE});function CE(e,t){let a=_(e,"a","logicalOr","bool"),n=_(t,"b","logicalOr","bool");Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(xl,r)}var Mg=z({logicalOr_:CE});function EE(e,t){let a=_(e,"a","logicalXor","bool"),n=_(t,"b","logicalXor","bool");return Mt(a.shape,n.shape),Ku(Mg(e,t),$g(Ku(e,t)))}var k3=z({logicalXor_:EE}),zp=2147483648;function RE(e,t,a="left"){let n=_(e,"sortedSequence","searchSorted"),r=_(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=r.shape[r.shape.length-1],o=te(n,[-1,s]),l=te(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(mt(l.shape)>=zp)throw new Error(`values tensor size must less than ${zp}`);if(o.shape[1]>=zp)throw new Error(`trailing dim_size must less than ${zp} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:a};return L.runKernel(hh,u,d)}var wh=z({searchSorted_:RE});function I3(e,t){return wh(e,t,"left")}function _E(e,t,a,n,r){let s=_(e,"x","maxPool"),i=1,o=s,l=!1;s.rank===3&&(l=!0,o=te(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),F(dr(a,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),mn("maxPool",n,r);let u={x:o},d={filterSize:t,strides:a,pad:n,dimRoundingMode:r},c=L.runKernel(Fi,u,d);return l?te(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Fg=z({maxPool_:_E});function $E(e,t=[1,1,1],a,n,r,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,l=!1;i.rank===4&&(l=!0,o=te(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),F(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),mn("maxPool3d",n,r);let u={x:o},d={filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:s},c=L.runKernel(oh,u,d);return l?te(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var S3=z({maxPool3d_:$E});function ME(e,t,a,n,r=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:a,pad:n,includeBatchInIndex:r},o=L.runKernel(lh,s,i);return{result:o[0],indexes:o[1]}}var T3=z({maxPoolWithArgmax_:ME});function FE(e,t){let a=_(e,"a","maximum"),n=_(t,"b","maximum");[a,n]=bt(a,n),a.dtype==="bool"&&(a=Xe(a,"int32"),n=Xe(n,"int32")),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(rs,r)}var Og=z({maximum_:FE});function OE(e,t=null,a=!1){let n={x:_(e,"x","mean")},r={axis:t,keepDims:a};return L.runKernel(Oi,n,r)}var Zu=z({mean_:OE});function Nn(e,t="float32"){if(t==="complex64"){let n=Nn(e,"float32"),r=Nn(e,"float32");return sr(n,r)}let a=Gc(mt(e),t);return L.makeTensor(a,e,t)}function Rr(e,t="float32"){if(t==="complex64"){let n=Rr(e,"float32"),r=Nn(e,"float32");return sr(n,r)}let a=D2(mt(e),t);return L.makeTensor(a,e,t)}function N3(e,t,{indexing:a="xy"}={}){if(a!=="xy"&&a!=="ij")throw new TypeError(`${a} is not a valid third argument to meshgrid`);if(e===void 0)return[];let n=_(e,"x","meshgrid",e instanceof ft?e.dtype:"float32");if(t===void 0)return[n];let r=_(t,"y","meshgrid",t instanceof ft?t.dtype:"float32"),s=mt(n.shape),i=mt(r.shape);return a==="xy"?(n=te(n,[1,-1]),r=te(r,[-1,1]),[Qe(Rr([i,1],n.dtype),n),Qe(r,Rr([1,s],r.dtype))]):(n=te(n,[-1,1]),r=te(r,[1,-1]),[Qe(n,Rr([1,i],n.dtype)),Qe(Rr([s,1],r.dtype),r)])}function PE(e,t){let a=_(e,"a","minimum"),n=_(t,"b","minimum");[a,n]=bt(a,n),a.dtype==="bool"&&(a=Xe(a,"int32"),n=Xe(n,"int32")),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(ss,r)}var Pg=z({minimum_:PE});function DE(e,t,a){F(a==="reflect"||a==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let n=_(e,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let r=a==="reflect"?1:0;for(let o=0;o<n.rank;o++)F(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),F(t[o][0]>=0&&t[o][0]<=n.shape[o]-r&&t[o][1]>=0&&t[o][1]<=n.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${n.shape[o]-r} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:a},i={x:n};return L.runKernel(Di,i,s)}var C3=z({mirrorPad_:DE});function zE(e,t){let a=_(e,"a","mod"),n=_(t,"b","mod");[a,n]=bt(a,n);let r={a,b:n};return L.runKernel(kd,r)}var kh=z({mod_:zE});function LE(e,t=null,a=!1){e=_(e,"x","moments");let n=ld(t,e.shape),r=Zu(e,n,a),s=r.shape;a||(s=Gd(r.shape,n));let i=fn(we(Xe(e,"float32"),te(r,s))),o=Zu(i,n,a);return{mean:r,variance:o}}var E3=z({moments_:LE});function WE(e,t,a,n){let r=_(t,"data","multiRNNCell"),s=qu(a,"c","multiRNNCell"),i=qu(n,"h","multiRNNCell"),o=r,l=[];for(let c=0;c<e.length;c++){let p=e[c](o,s[c],i[c]);l.push(p[0]),l.push(p[1]),o=p[1]}let u=[],d=[];for(let c=0;c<l.length;c+=2)u.push(l[c]),d.push(l[c+1]);return[u,d]}var R3=z({multiRNNCell_:WE});function BE(e,t,a,n=!1){let r=_(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);a=a||Math.random();let o={logits:i===1?te(r,[1,-1]):r},l={numSamples:t,seed:a,normalized:n},u=L.runKernel(uh,o,l);return i===1?te(u,[u.size]):u}var _3=z({multinomial_:BE});function VE(e,t){let a=_(e,"a","notEqual","string_or_numeric"),n=_(t,"b","notEqual","string_or_numeric");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n};return L.runKernel(os,r)}var Dg=z({notEqual_:VE});function UE(e){let t={x:_(e,"x","onesLike")};return L.runKernel(wl,t)}var $3=z({onesLike_:UE});function GE(e,t){let a=_(e,"v1","outerProduct"),n=_(t,"v2","outerProduct");F(a.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${a.rank} and ${n.rank}.`);let r=te(a,[-1,1]),s=te(n,[1,-1]);return Qe(r,s)}var M3=z({outerProduct_:GE});function HE(e,t,a=0){let n=_(e,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:a},s={x:n};return L.runKernel(Wi,s,r)}var gs=z({pad_:HE});function jE(e,t,a=0){return F(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),gs(e,[t],a)}var F3=z({pad1d_:jE});function qE(e,t,a=0){return F(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),gs(e,t,a)}var O3=z({pad2d_:qE});function XE(e,t,a=0){return F(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),gs(e,t,a)}var P3=z({pad3d_:XE});function KE(e,t,a=0){return F(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),gs(e,t,a)}var D3=z({pad4d_:KE});function ZE(e,t,a){let n=_(e,"x","spaceToBatchND");F(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),F(a.length===t.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] ${t.length}`),F(n.shape.reduce((i,o,l)=>l>0&&l<=t.length?i&&(o+a[l-1][0]+a[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:n},s={blockShape:t,paddings:a};return L.runKernel(Ml,r,s)}var zg=z({spaceToBatchND_:ZE});function YE(e,t,a,n,r,s,i){r==null&&(r=[1,1]),s==null&&(s=1),n===0&&(n="valid");let o=_(e,"x","maxPool"),l=o,u=!1;o.rank===3&&(u=!0,l=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(dr(s,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`);let d=Mb(l.shape,t,s,r,n),c=[d.dilationHeight,d.dilationWidth],p;n==="same"?p=QE([d.filterHeight,d.filterWidth],c):p=[[0,0],[0,0]];let h=c[0]===1&&c[1]===1,[f,m]=JE([d.inHeight,d.inWidth],c,p),g=h?n:"valid",A=h?l:zg(l,c,f),y=(a==="avg"?()=>yg(A,t,s,g,i):()=>Fg(A,t,s,g,i))(),x=h?y:xg(y,c,m);return u?te(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function JE(e,t,a){let n=a.map(d=>d[0]),r=a.map(d=>d[1]),s=e.concat(n,r),i=t.map((d,c)=>(d-s[c]%d)%d),o=r.map((d,c)=>d+i[c]),l=t.map((d,c)=>[n[c],o[c]]),u=t.map((d,c)=>[0,i[c]]);return[l,u]}function QE(e,t){let a=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),n=a.map(s=>Math.floor(s/2)),r=a.map((s,i)=>s-n[i]);return a.map((s,i)=>[n[i],r[i]])}var z3=z({pool_:YE});function eR(e,t){let a=_(e,"x","prelu"),n=_(t,"alpha","prelu"),r={x:a,alpha:n};return L.runKernel(Vi,r)}var Lg=z({prelu_:eR});function tR(e,t=null,a=!1){let n=_(e,"x","prod");n.dtype==="bool"&&(n=Xe(n,"int32"));let r={x:n},s={axis:t,keepDims:a};return L.runKernel(Ui,r,s)}var L3=z({prod_:tR});function aR(e,t,a,n){let r=e.map((d,c)=>_(d,`tensors${c}`,"raggedGather","int32")),s=_(t,"paramsDenseValues","raggedGather"),i=_(a,"indices","raggedGather","int32"),o={paramsNestedSplits:r,paramsDenseValues:s,indices:i},l={outputRaggedRank:n},u=L.runKernel(dh,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var W3=z({raggedGather_:aR});function nR(e,t,a){let n=_(e,"starts","raggedRange"),r=_(t,"limits","raggedRange",n.dtype),s=_(a,"deltas","raggedRange",n.dtype),i={starts:n,limits:r,deltas:s},o=L.runKernel(ph,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var B3=z({raggedRange_:nR});function rR(e,t,a,n,r){let s=_(e,"shape","raggedTensorToTensor","int32"),i=_(t,"values","raggedTensorToTensor"),o=_(a,"defaultValue","raggedTensorToTensor",i.dtype),l=n.map((c,p)=>_(c,`tensors${p}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:o,rowPartitionTensors:l},d={rowPartitionTypes:r};return L.runKernel(ch,u,d)}var V3=z({raggedTensorToTensor_:rR});function sR(e,t,a){let n=mt(e),r=null;if(a==null||a==="float32")r=new Float32Array(n);else if(a==="int32")r=new Int32Array(n);else if(a==="bool")r=new Uint8Array(n);else throw new Error(`Unknown data type ${a}`);for(let s=0;s<n;s++)r[s]=t();return L.makeTensor(r,e,a)}var U3=z({rand_:sR}),Wg=il(g5()),Bg=class{constructor(e,t,a,n,r){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=r||Math.random();this.random=Wg.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,a=!1;for(;!a;){let n,r,s;do n=2*this.random()-1,r=2*this.random()-1,s=n*n+r*r;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(a=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},iR=class{constructor(e,t,a,n){this.alpha=e,this.beta=1/t,this.dtype=a;let r=n||Math.random();this.randu=Wg.alea(r.toString()),this.randn=new Bg(0,1,a,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,a,n,r,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,e=n*n,t=1-.331*e*e,a=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<a)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},oR=class{constructor(e=0,t=1,a,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=a,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Wg.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function lR(e,t,a=1,n="float32",r){if(a==null&&(a=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new iR(t,a,n,r),i=xe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var G3=z({randomGamma_:lR});function uR(e,t=0,a=1,n,r){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Bg(t,a,n,!1,r),i=xe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Vg=z({randomNormal_:uR});function dR(e,t,a){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Vg(e,0,1,t,a)}var H3=z({randomStandardNormal_:dR});function pR(e,t=0,a=1,n="float32",r){let s=xe(e,n),i=new oR(t,a,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Ug=z({randomUniform_:pR});function Jo(e,t,a=1,n="float32"){if(a===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:a,dtype:n};return L.runKernel(Sl,{},r)}function cR(e){let t={x:_(e,"x","reciprocal")};return L.runKernel(Tl,t)}var j3=z({reciprocal_:cR});function hR(e){let t={x:_(e,"x","relu")};return L.runKernel(Gi,t)}var qd=z({relu_:hR});function fR(e){let t={x:_(e,"x","relu6")};return L.runKernel(qi,t)}var Gg=z({relu6_:fR});function mR(e,t){let a={x:_(e,"x","reverse")},n={dims:t};return L.runKernel(Cl,a,n)}var Ur=z({reverse_:mR});function gR(e){let t=_(e,"x","reverse");return F(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ur(t,0)}var q3=z({reverse1d_:gR});function AR(e,t){let a=_(e,"x","reverse");return F(a.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),Ur(a,t)}var X3=z({reverse2d_:AR});function yR(e,t){let a=_(e,"x","reverse");return F(a.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),Ur(a,t)}var K3=z({reverse3d_:yR});function xR(e,t){let a=_(e,"x","reverse");return F(a.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),Ur(a,t)}var Z3=z({reverse4d_:xR});function bR(e){let t={x:_(e,"x","round")};return L.runKernel(El,t)}var Hg=z({round_:bR});function vR(e){let t={x:_(e,"x","rsqrt","float32")};return L.runKernel(ls,t)}var Y3=z({rsqrt_:vR});function wR(e){let t={x:_(e,"x","selu")};return L.runKernel(Sd,t)}var J3=z({selu_:wR});function kR(e,t,a,n,r,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),u=_(a,"pointwiseFilter","separableConv2d"),d=o,c=!1;if(o.rank===3&&(c=!0,d=te(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),F(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),F(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),F(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),F(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let p=l.shape[2],h=l.shape[3];F(u.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${u.shape[2]}.`);let f=xh(d,l,n,r,i,s),m=Ud(f,u,1,"valid",i);return c?te(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Q3=z({separableConv2d_:kR});async function IR(e,t){let a=_(e,"x","setdiff1d"),n=_(t,"y","setdiff1d");F(a.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${a.dtype}) and y (${n.dtype}).`),F(a.rank===1,()=>`x should be 1D tensor, but got x (${a.shape}).`),F(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let r=await a.data(),s=await n.data(),i=new Set(s),o=0;for(let d=0;d<r.length;d++)i.has(r[d])||o++;let l=new Ct([o],a.dtype),u=new Ct([o],"int32");for(let d=0,c=0;d<r.length;d++)i.has(r[d])||(l.values[c]=r[d],u.values[c]=d,c++);return[l.toTensor(),u.toTensor()]}var ev=IR;function SR(e){let t={x:_(e,"x","sign")};return L.runKernel(Td,t)}var tv=z({sign_:SR});function TR(e){let t={x:_(e,"x","sin","float32")};return L.runKernel(Ki,t)}var av=z({sin_:TR});function NR(e){let t={x:_(e,"x","sinh")};return L.runKernel($l,t)}var nv=z({sinh_:NR});function CR(e,t,a){let n=_(e,"x","slice1d");return F(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Ve(n,[t],[a])}var rv=z({slice1d_:CR});function ER(e,t,a){let n=_(e,"x","slice2d");return F(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,a)}var sv=z({slice2d_:ER});function RR(e,t,a){let n=_(e,"x","slice3d");return F(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,a)}var Nc=z({slice3d_:RR});function _R(e,t,a){let n=_(e,"x","slice4d");return F(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Ve(n,t,a)}var jg=z({slice4d_:_R});function $R(e,t=-1){let a=_(e,"logits","softmax","float32");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${t}`);let n={logits:a},r={dim:t};return L.runKernel(Yi,n,r)}var qg=z({softmax_:$R});function MR(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(nh,t)}var Ih=z({fft_:MR});function FR(e){F(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return L.runKernel(rh,t)}var Yu=z({ifft_:FR});function OR(e){let t=e.shape[e.shape.length-1],a=e.size/t,n;if(t<=2){let r=te(e,[a,t]);n=Yu(r)}else{let r=[a,2*(t-1)],s=te(Xo(e),[a,t]),i=te(Wd(e),[a,t]),o=Ur(Ve(s,[0,1],[a,t-2]),1),l=ie(Ur(Ve(i,[0,1],[a,t-2]),1),$e(-1)),u=ut([s,o],1),d=ut([i,l],1),c=te(sr(u,d),[r[0],r[1]]);n=Yu(c)}if(n=Xo(n),e.rank===3&&e.shape[0]!==0){let r=n,s=e.shape[0];n=te(n,[s,n.shape[0]/s,n.shape[1]]),r.dispose()}return n}var Xg=z({irfft_:OR});function PR(e,t,a=0){let n={x:_(e,"x","split")},r={numOrSizeSplits:t,axis:a};return L.runKernel(Fl,n,r)}var Gn=z({split_:PR});function DR(e,t){F(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a=e.shape[e.shape.length-1],n=e.size/a,r;if(t!=null&&t<a){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Ve(e,f,m),a=t}else if(t!=null&&t>a){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-a,r=ut([e,Nn(f)],e.shape.length-1),a=t}else r=e;let s=Ba(r),i=te(sr(r,s),[n,a]),o=Ih(i),l=Math.floor(a/2)+1,u=Xo(o),d=Wd(o),c=Gn(u,[l,a-l],u.shape.length-1),p=Gn(d,[l,a-l],d.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,te(sr(c[0],p[0]),h)}var Sh=z({rfft_:DR});function zR(e,t){let a=_(e,"a","squaredDifference"),n=_(t,"b","squaredDifference");[a,n]=bt(a,n),Mt(a.shape,n.shape);let r={a,b:n},s={};return L.runKernel(ps,r,s)}var Kg=z({squaredDifference_:zR});function LR(e,t){let a=_(e,"x","squeeze","string_or_numeric");return te(a,x5(a.shape,t).newShape)}var it=z({squeeze_:LR});function WR(e,t=0){let a=qu(e,"tensors","stack","string_or_numeric");F(a.length>=1,()=>"Pass at least one tensor to tf.stack"),a.length>0&&F(t<=a[0].rank,()=>"Axis must be <= rank of the tensor");let n=a,r={axis:t};return L.runKernel(Il,n,r)}var en=z({stack_:WR});function BR(e,t=0){let a={x:_(e,"x","step")},n={alpha:t};return L.runKernel(ao,a,n)}var Zg=z({step_:BR});function VR(e,t,a,n,r=0,s=0,i=0,o=0,l=0){let u={x:_(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:a,strides:n,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return L.runKernel(Ji,u,d)}var iv=z({stridedSlice_:VR});function UR(e){let t={x:_(e,"x","tan","float32")};return L.runKernel(Dl,t)}var ov=z({tan_:UR});function na(e,t){oi(e);let a=Bn(e,t);if(a.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return fs(e,null,a,t)}function Fr(e,t,a){if(oi(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Bn(e,a);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return fs(e,t,n,a)}function lv(e,t,a){if(oi(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Bn(e,a);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return fs(e,t,n,a)}function uv(e,t,a){if(oi(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Bn(e,a);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return fs(e,t,n,a)}function dv(e,t,a){if(oi(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Bn(e,a);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,fs(e,t,n,a)}function GR(e,t=1,a=!0){let n=_(e,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:n},i={k:t,sorted:a},[o,l]=L.runKernel(eo,s,i);return{values:o,indices:l}}var pv=z({topk_:GR});function HR(e,t=0,a=1,n,r){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Bg(t,a,n,!0,r),i=xe(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var cv=z({truncatedNormal_:HR});function jR(e,t=0){let a=_(e,"x","unique","string_or_numeric");F(a.rank>0,()=>"The input tensor must be at least 1D");let n={x:a},r={axis:t},[s,i]=L.runKernel(fh,n,r);return{values:s,indices:i}}var hv=z({unique_:jR});function qR(e,t,a){let n=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");F(Ho(a),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:r},i={numSegments:a};return L.runKernel(mh,s,i)}var fv=z({unsortedSegmentSum_:qR});function XR(e,t=0){let a=_(e,"x","unstack","string_or_numeric");F(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`);let n={value:a},r={axis:t};return L.runKernel(zl,n,r)}var gn=z({unstack_:XR});function mv(e,t){return wh(e,t,"right")}function gv(e,t=!0,a,n){return L.makeVariable(e,t,a,n)}function Av(e,t){let a=[];for(let s=0;s<t.length;s++)t[s]&&a.push(s);let n=xe(e,"int32"),r=xe([a.length,e.length],"int32");for(let s=0;s<a.length;s++){let i=n.indexToLoc(a[s]),o=s*e.length;r.values.set(i,o)}return r.toTensor()}async function KR(e){let t=_(e,"condition","whereAsync","bool"),a=await t.data(),n=Av(t.shape,a);return e!==t&&t.dispose(),n}var Yg=KR;async function ZR(e,t,a){let n=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),s=a??0,i=r.rank,o=n.shape;F(i>0,()=>"mask cannot be scalar"),Aa(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=te(n,u),c=te(r,[-1]),p=await Yg(c),h=it(p,[1]),f=Tg(d,h,s);return e!==n&&n.dispose(),t!==r&&r.dispose(),h.dispose(),d.dispose(),c.dispose(),p.dispose(),f}var yv=ZR;function YR(e,t,a,n,r=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(a,"decay","movingAverage");O5(s,i),F(qr(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=$e(1),u=we(l,o),d=ie(we(i,s),u);if(r){F(n!=null,()=>"When using zeroDebias: true, step is required.");let c=_(n,"step","movingAverage");d=Ne(d,we(l,Zo(o,c)))}return ke(s,d)}var xv=z({movingAverage_:YR});function JR(e,t,a){let n=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");hg(r,n,a);let s={indices:n,updates:r},i={shape:a};return L.runKernel(Xi,s,i)}var bv=z({scatterND_:JR});function QR(e,t,a,n){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(a.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${a.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function e_(e,t,a,n=0){let r=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(n,"defaultValue","sparseToDense",s.dtype);QR(r,s,a,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:a};return L.runKernel(_d,o,l)}var vv=z({sparseToDense_:e_});function t_(e,t){let a=_(t,"indices","gatherND","int32"),n={params:_(e,"x","gatherND","string_or_numeric"),indices:a};return L.runKernel(Ci,n)}var wv=z({gatherND_:t_});function a_(e,t){if(t==null)return e.shape.slice();if(qr(e.shape,t))return t;if(e.shape.length===t.length){let a=[];for(let n=0;n<e.shape.length;n++)t[n]==null&&e.shape[n]!=null?a.push(e.shape[n]):a.push(t[n]);return a}return t}function n_(e,t,a,n){let r=_(e,"x","dropout");if(F(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),F(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof ft?r.clone():r;let s=a_(r,a),i=1-t,o=Ne(Sg(ke(Ug(s,0,1,"float32",n),i)),i);return ie(r,o)}var kv=z({dropout_:n_});function Jg(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Th(e,t,a){let n=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+n-1);r[s]=t-a*Math.cos(i)}return na(r,"float32")}async function r_(e,t,a=1){let n=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");F(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),F(n.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${r.rank}`),Aa(n.shape.slice(0,n.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];F(a>0&&a<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${a}`);let i=await n.data(),o=await r.data(),[l,u]=[i.length/s,s],d=b5("bool",l);for(let c=0;c<l;c++){let p=c*u,h=i.subarray(p,p+u),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),d[c]=0;for(let m=0;m<a;m++)if(f[m].index===o[c]){d[c]=1;break}}return e!==n&&n.dispose(),t!==r&&r.dispose(),Be(d,r.shape,"bool")}var Iv=r_,Qg={};Le(Qg,{conv2d:()=>l_,depthwiseConv2d:()=>f_,matMul:()=>g_});function s_(e,t,a,n,r,s="NHWC",i){let o=e;e.rank===3&&(o=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=te(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),F(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),F(a.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let u=s==="NHWC"?o.shape[3]:o.shape[1],d=s==="NHWC"?l.shape[3]:l.shape[1];F(u===a[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${a[2]}.`),F(d===a[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${a[3]}).`),mn("conv2dDerFilter",r,i);let c={x:o,dy:l},p={strides:n,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:a};return L.runKernel(Kc,c,p)}var i_=z({conv2DBackpropFilter_:s_});function Nh(e,t,a){if(a==null||a==="linear")return e;if(a==="relu")return ie(e,Zg(t));throw new Error(`Cannot compute gradient for fused activation ${a}.`)}function Ch(e,t){let a=t,n=lg(e.shape,t.shape);return n.length>0&&(a=at(a,n)),te(a,e.shape)}function Eh(e,t,a,n){if(t==="linear")return e;if(t==="relu")return qd(e);if(t==="elu")return wg(e);if(t==="relu6")return Gg(e);if(t==="prelu")return Lg(e,a);if(t==="leakyrelu")return Cg(e,n);if(t==="sigmoid")return Wn(e);throw new Error(`Unknown fused activation ${t}.`)}var Rh=(e,t)=>!(e>0)||t==="linear";function o_({x:e,filter:t,strides:a,pad:n,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",Rh(L.state.gradientDepth,l)===!1){F(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=Ud(e,t,a,n,r,s,i);return o!=null&&(S=ke(S,o)),Eh(S,l,u,d)}let c=_(e,"x","conv2d","float32"),p=_(t,"filter","conv2d","float32"),h=c,f=!1;c.rank===3&&(f=!0,h=te(c,[1,c.shape[0],c.shape[1],c.shape[2]])),F(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),F(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),mn("fused conv2d",n,i);let m=r==="NHWC"?h.shape[3]:h.shape[1];F(p.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),F(dr(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let g=Bd(h.shape,p.shape,a,s,n,i),A;o!=null&&(A=_(o,"bias","fused conv2d"),[A]=bt(A,c),r==="NHWC"?Mt(g.outShape,A.shape):(F(A.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${A.shape.length}.`),F(A.shape.length===0||A.shape[0]===g.outChannels||A.shape[0]===1,()=>`Error in fused conv2d: bias shape (${A.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(u!=null){let S=u.shape;if(F(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)F(S[0]===1||S[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${g.outChannels}).`);else if(S.length===3)try{Mt(S,g.outShape)}catch{let C=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(C)}y=_(u,"prelu weights","fused conv2d")}let x=(S,N)=>{F(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[C,M,$,E]=N,I=Nh(S,$,l);F(Xu(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let R=Xb(M.shape,I,C,a,n),P=i_(M,I,C.shape,a,n),D=[R,P];if(E!=null){let W=Ch(E,I);D.push(W)}return D},b={x:h,filter:p,bias:A,preluActivationWeights:y},w={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Un((S,N,C)=>{let M=L.runKernel(Wr,b,w);return C([N,S,M]),f&&(M=te(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(h,p):Un((S,N,C,M)=>{let $=L.runKernel(Wr,b,w);return M([N,S,$,C]),f&&($=te($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:x}})(h,p,A)}var l_=z({fusedConv2d_:o_});function u_(e,t,a,n,r,s=[1,1],i){let o=e;e.rank===3&&(o=te(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;l.rank===3&&(l=te(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:n,pad:r,dimRoundingMode:i,dilations:s,filterShape:a};return L.runKernel(Qc,u,d)}var d_=z({depthwiseConv2dNativeBackpropFilter_:u_});function p_(e,t,a,n,r,s=[1,1],i){let o=t,l=!1;t.rank===3&&(l=!0,o=te(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:a},d={strides:n,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},c=L.runKernel(eh,u,d);return l?te(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var c_=z({depthwiseConv2dNativeBackpropInput_:p_});function h_({x:e,filter:t,strides:a,pad:n,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(Rh(L.state.gradientDepth,l)===!1){let w=xh(e,t,a,n,r,s,i);return o!=null&&(w=ke(w,o)),Eh(w,l,u,d)}let c=_(e,"x","depthwiseConv2d","float32"),p=_(t,"filter","depthwiseConv2d","float32"),h=c,f=!1;c.rank===3&&(f=!0,h=te(c,[1,c.shape[0],c.shape[1],c.shape[2]])),F(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),F(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),F(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),s==null&&(s=[1,1]),F(dr(a,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),mn("fused depthwiseConv2d",n,i);let m=Bd(h.shape,p.shape,a,s,n,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=bt(g,c),Mt(m.outShape,g.shape));let A;u!=null&&(A=_(u,"prelu weights","fused depthwiseConv2d"));let y=(w,S)=>{F(Xu(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[N,C,M,$]=S,E=Nh(w,M,l),I=c_(C.shape,E,N,a,n,s,i),R=d_(C,E,N.shape,a,n,s,i);if($!=null){let P=Ch(g,E);return[I,R,P]}return[I,R]},x={x:h,filter:p,bias:g,preluActivationWeights:A},b={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return o==null?Un((w,S,N)=>{let C=L.runKernel(Br,x,b);return N([S,w,C]),f&&(C=te(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:y}})(h,p):Un((w,S,N,C)=>{let M=L.runKernel(Br,x,b);return C([S,w,M,N]),f&&(M=te(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:y}})(h,p,g)}var f_=z({fusedDepthwiseConv2d_:h_});function m_({a:e,b:t,transposeA:a=!1,transposeB:n=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Rh(L.state.gradientDepth,s)===!1){let $=Qe(e,t,a,n);return r!=null&&($=ke($,r)),Eh($,s,i,o)}let l=_(e,"a","fused matMul"),u=_(t,"b","fused matMul");[l,u]=bt(l,u);let d=a?l.shape[l.rank-2]:l.shape[l.rank-1],c=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=mt(f),A=mt(m);F(d===c,()=>`Error in fused matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${a} and transposeB=${n} must match.`);let y=Mt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,h]),x=a?te(l,[g,d,p]):te(l,[g,p,d]),b=n?te(u,[A,h,c]):te(u,[A,c,h]),w;r!=null&&(w=_(r,"bias","fused matMul"),[w]=bt(w,l),Mt(y,w.shape));let S;i!=null&&(S=_(i,"prelu weights","fused matMul"));let N=($,E)=>{let[I,R,P,D]=E,W=Nh(te($,P.shape),P,s),V,G;if(!a&&!n?(V=Qe(W,R,!1,!0),G=Qe(I,W,!0,!1)):!a&&n?(V=Qe(W,R,!1,!1),G=Qe(W,I,!0,!1)):a&&!n?(V=Qe(R,W,!1,!0),G=Qe(I,W,!1,!1)):(V=Qe(R,W,!0,!0),G=Qe(W,I,!0,!0)),r!=null){let U=Ch(D,W);return[V,G,U]}else return[V,G]},C={a:x,b,bias:w,preluActivationWeights:S},M={transposeA:a,transposeB:n,activation:s,leakyreluAlpha:o};return r==null?Un(($,E,I)=>{let R=L.runKernel(Lr,C,M);return I([$,E,R]),{value:te(R,y),gradFunc:N}})(x,b):Un(($,E,I,R)=>{let P=L.runKernel(Lr,C,M);return R([$,E,P,I]),{value:te(P,y),gradFunc:N}})(x,b,w)}var g_=z({fusedMatMul_:m_});function A_(e){return Th(e,.54,.46)}var y_=z({hammingWindow_:A_});function x_(e){return Th(e,.5,.5)}var Sv=z({hannWindow_:x_});function b_(e,t,a,n=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ve(e,s,t)),s+=a;if(n)for(;s<e.size;){let o=s+t-e.size,l=ut([Ve(e,s,t-o),ir([o],r)]);i.push(l),s+=a}return i.length===0?Fr([],[0,t]):te(ut(i),[i.length,t])}var Tv=z({frame_:b_});function v_(e,t,a,n,r=Sv){n==null&&(n=Jg(t));let s=Tv(e,t,a),i=ie(s,r(t));return Sh(i,n)}var w_=z({stft_:v_});function k_(e,t,a,n,r="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),l=_(a,"boxInd","cropAndResize","int32"),u=o.shape[0];F(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),F(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),F(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),F(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),F(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),F(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let d={image:i,boxes:o,boxInd:l},c={method:r,extrapolationValue:s,cropSize:n};return L.runKernel(xi,d,c)}var I_=z({cropAndResize_:k_});function S_(e){let t=_(e,"image","flipLeftRight","float32");F(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let a={image:t};return L.runKernel(Si,a,{})}var T_=z({flipLeftRight_:S_});function N_(e){let t=_(e,"image","grayscaleToRGB"),a=t.rank-1,n=t.shape[a];F(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),F(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let r=new Array(t.rank);return r.fill(1,0,a),r[a]=3,js(t,r)}var C_=z({grayscaleToRGB_:N_});function E_(e,t,a=0,n=.5){let r=_(e,"image","rotateWithOffset","float32");F(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let s={image:r},i={radians:t,fillValue:a,center:n};return L.runKernel(no,s,i)}var R_=z({rotateWithOffset_:E_});function Vl(e,t,a,n,r,s){n==null&&(n=.5),r==null&&(r=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return a=Math.min(a,i),F(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),F(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),F(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),F(t.rank===1,()=>"scores must be a 1D tensor"),F(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),F(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:s}}function __(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=Vl(s,i,a,n,r);a=o.maxOutputSize,n=o.iouThreshold,r=o.scoreThreshold;let l={maxOutputSize:a,iouThreshold:n,scoreThreshold:r};return L.runKernel(zi,{boxes:s,scores:i},l)}var $_=z({nonMaxSuppression_:__});function M_(e,t,a){let n=F_(e,t,a),r=n<0?-(n+1):n;e.splice(r,0,t)}function F_(e,t,a){return P_(e,t,a||O_)}function O_(e,t){return e>t?1:e<t?-1:0}function P_(e,t,a){let n=0,r=e.length,s=0,i=!1;for(;n<r;){s=n+(r-n>>>1);let o=a(t,e[s]);o>0?n=s+1:(r=s,i=!o)}return i?n:-n-1}function Nv(e,t,a,n,r){return e1(e,t,a,n,r,0)}function Cv(e,t,a,n,r,s){return e1(e,t,a,n,r,0,!1,s,!0)}function Ev(e,t,a,n,r,s){return e1(e,t,a,n,r,s,!0)}function e1(e,t,a,n,r,s,i=!1,o=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(PA);let d=s>0?-.5/s:0,c=[],p=[];for(;c.length<a&&u.length>0;){let g=u.pop(),{score:A,boxIndex:y,suppressBeginIndex:x}=g;if(A<r)break;let b=!1;for(let w=c.length-1;w>=x;--w){let S=D_(e,y,c[w]);if(S>=n){b=!0;break}if(g.score=g.score*z_(n,d,S),g.score<=r)break}g.suppressBeginIndex=c.length,b||(g.score===A?(c.push(y),p.push(g.score)):g.score>r&&M_(u,g,PA))}let h=c.length,f=a-h;o&&f>0&&(c.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:c};return i&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function D_(e,t,a){let n=e.subarray(t*4,t*4+4),r=e.subarray(a*4,a*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),c=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(o-s)*(l-i),f=(c-u)*(p-d);if(h<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),A=Math.min(o,c),y=Math.min(l,p),x=Math.max(A-m,0)*Math.max(y-g,0);return x/(h+f-x)}function z_(e,t,a){let n=Math.exp(t*a*a);return a<=e?n:0}function PA(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function L_(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=Vl(s,i,a,n,r);a=o.maxOutputSize,n=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:c}=Nv(u,d,a,n,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),na(c,"int32")}var W_=L_;function B_(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Vl(i,o,a,n,r,s);a=l.maxOutputSize,n=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:o},d={maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:s},c=L.runKernel(Li,u,d);return{selectedIndices:c[0],selectedScores:c[1]}}var V_=z({nonMaxSuppressionWithScore_:B_});async function U_(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Vl(i,o,a,n,r,s);a=l.maxOutputSize,n=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],c=u[1],{selectedIndices:p,selectedScores:h}=Ev(d,c,a,n,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:na(p,"int32"),selectedScores:na(h)}}var G_=U_;function H_(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),l=Vl(i,o,a,n,r,null),u=l.maxOutputSize,d=l.iouThreshold,c=l.scoreThreshold,p={boxes:i,scores:o},h={maxOutputSize:u,iouThreshold:d,scoreThreshold:c,padToMaxOutputSize:s},f=L.runKernel(vl,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}var j_=z({nonMaxSuppressionPadded_:H_});async function q_(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),l=Vl(i,o,a,n,r,null),u=l.maxOutputSize,d=l.iouThreshold,c=l.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Cv(p,h,u,d,c,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:na(f,"int32"),validOutputs:$e(m,"int32")}}var X_=q_;function K_(e,t,a=!1,n=!1){let r=_(e,"images","resizeBilinear");F(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),F(n===!1||a===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=te(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:a,halfPixelCenters:n,size:t},u=L.runKernel(ji,o,l);return i?te(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Z_=z({resizeBilinear_:K_});function Y_(e,t,a=!1,n=!1){let r=_(e,"images","resizeNearestNeighbor");F(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),F(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),F(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),F(n===!1||a===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=te(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:a,halfPixelCenters:n,size:t},u=L.runKernel(Hi,o,l);return i?te(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var J_=z({resizeNearestNeighbor_:Y_});function Q_(e,t="binary",a=!1,n=.5){let r=_(e,"image","threshold"),s=.2989,i=.587,o=.114,l=r.shape[0]*r.shape[1],u=ie(na([n]),255),d,c,p,h;if(F(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),F(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),F(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),F(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[d,c,p]=Gn(r,[1,1,1],-1);let m=ie(d,s),g=ie(c,i),A=ie(p,o);h=ke(ke(m,g),A)}else h=e;if(t==="otsu"){let m=bg(Xe(Hg(h),"int32"),Be([]),256);u=e$(m,l)}let f=a?bh(h,u):jd(h,u);return Xe(ie(f,255),"int32")}function e$(e,t){let a=na([-1]),n=na([0]),r=na([0]),s,i,o,l,u,d;for(let c=0;c<e.size-1;c++){s=Ve(e,0,c+1),i=Ve(e,c+1),u=Ne(at(s),t),d=Ne(at(i),t);let p=at(ie(s,Jo(0,s.size)));o=Ne(p,at(s));let h=ir(i.shape,s.size),f=ke(Jo(0,i.size),h),m=ie(i,f);l=Ne(at(m),at(i));let g=we(o,l),A=we(o,l),y=ie(u,d);r=ie(ie(y,g),A);let x=jd(r,n);n=Js(x,r,n),a=Js(x,na([c]),a)}return a}var t$=z({threshold_:Q_});function a$(e,t,a="nearest",n="constant",r=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");F(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),F(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:o},u={interpolation:a,fillMode:n,fillValue:r,outputShape:s};return L.runKernel(to,l,u)}var n$=z({transform_:a$});function r$(e,t,a){F(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),F(a%1===0,()=>`bandPart(): numUpper must be an integer, got ${a}.`);let n=_(e,"a","bandPart");F(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let r=n.shape,[s,i]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(a<=i))throw new Error(`bandPart(): numUpper (${a}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),a<0&&(a=i);let o=te(Jo(0,s,1,"int32"),[-1,1]),l=Jo(0,i,1,"int32"),u=we(o,l),d=Ku(bh(u,$e(+t,"int32")),Ng(u,$e(-a,"int32"))),c=Nn([s,i],n.dtype);return te(en(gn(te(n,[-1,s,i])).map(p=>Js(d,p,c))),r)}var s$=z({bandPart_:r$});function i$(e){let t;if(Array.isArray(e)){t=!1,F(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let s=1;s<e.length;++s)F(e[s].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${r})`)}else t=!0,e=Gn(e,e.shape[0],0).map(r=>it(r,[0]));F(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let a=[],n=e;for(let r=0;r<e.length;++r)a.push(L.tidy(()=>{let s=n[r];if(r>0)for(let i=0;i<r;++i){let o=ie(at(ie(a[i],s)),a[i]);s=we(s,o)}return Ne(s,Hd(s,"euclidean"))}));return t?en(a,0):a}var o$=z({gramSchmidt_:i$});function l$(e,t=!1){if(F(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return DA(e,t);{let a=e.shape.slice(0,e.shape.length-2).reduce((l,u)=>l*u),n=gn(te(e,[a,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];n.forEach(l=>{let[u,d]=DA(l,t);r.push(u),s.push(d)});let i=te(en(r,0),e.shape),o=te(en(s,0),e.shape);return[i,o]}}function DA(e,t=!1){return L.tidy(()=>{F(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let a=e.shape[0],n=e.shape[1],r=Ig(a),s=Ca(e),i=Fr([[1]],[1,1]),o=Ca(i),l=a>=n?n:a;for(let u=0;u<l;++u){let d=s,c=o,p=r;[o,s,r]=L.tidy(()=>{let h=Ve(s,[u,u],[a-u,1]),f=Hd(h),m=Ve(s,[u,u],[1,1]),g=Js(jd(m,0),Fr([[-1]]),Fr([[1]])),A=we(m,ie(g,f)),y=Ne(h,A);y.shape[0]===1?o=Ca(i):o=ut([i,Ve(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let x=Ln(Ne(Qe(g,A),f)),b=Ve(s,[u,0],[a-u,n]),w=ie(x,o),S=Ko(o);if(u===0)s=we(b,Qe(w,Qe(S,b)));else{let M=we(b,Qe(w,Qe(S,b)));s=ut([Ve(s,[0,0],[u,n]),M],0)}let N=Ko(w),C=Ve(r,[0,u],[a,r.shape[1]-u]);if(u===0)r=we(C,Qe(Qe(C,o),N));else{let M=we(C,Qe(Qe(C,o),N));r=ut([Ve(r,[0,0],[a,u]),M],1)}return[o,s,r]}),le([d,c,p])}return!t&&a>n&&(r=Ve(r,[0,0],[a,n]),s=Ve(s,[0,0],[n,n])),[r,s]})}var u$=z({qr_:l$}),ha;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ha||(ha={}));function d$(e,t,a=ha.SUM_BY_NONZERO_WEIGHTS){let n=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let s=r==null?n:ie(n,r);if(a===ha.NONE)return s;if(a===ha.SUM)return at(s);if(a===ha.MEAN){if(r==null)return Zu(s);{let i=n.size/r.size,o=Ne(at(s),at(r));return i>1?Ne(o,$e(i)):o}}if(a===ha.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Ne(at(s),$e(n.size));{let i=ie(r,Rr(n.shape)),o=Xe(at(Dg(i,$e(0))),"float32");return Ne(at(s),o)}}throw Error(`Unknown reduction: ${a}`)}var pr=z({computeWeightedLoss_:d$});function p$(e,t,a,n=ha.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;a!=null&&(i=_(a,"weights","absoluteDifference")),Aa(r.shape,s.shape,"Error in absoluteDifference: ");let o=Oa(we(r,s));return pr(o,i,n)}var c$=z({absoluteDifference_:p$});function h$(e,t,a,n,r=ha.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;n!=null&&(o=_(n,"weights","cosineDistance")),Aa(s.shape,i.shape,"Error in cosineDistance: ");let l=$e(1),u=we(l,at(ie(s,i),a,!0));return pr(u,o,r)}var f$=z({cosineDistance_:h$});function m$(e,t,a,n=ha.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;a!=null&&(i=_(a,"weights","hingeLoss")),Aa(r.shape,s.shape,"Error in hingeLoss: ");let o=$e(1);r=we(ie($e(2),r),o);let l=qd(we(o,ie(r,s)));return pr(l,i,n)}var g$=z({hingeLoss_:m$});function A$(e,t,a,n=1,r=ha.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;a!=null&&(o=_(a,"weights","huberLoss")),Aa(s.shape,i.shape,"Error in huberLoss: ");let l=$e(n),u=Oa(we(i,s)),d=Pg(u,l),c=we(u,d),p=ke(ie($e(.5),fn(d)),ie(l,c));return pr(p,o,r)}var y$=z({huberLoss_:A$});function x$(e,t,a,n=1e-7,r=ha.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;a!=null&&(o=_(a,"weights","logLoss")),Aa(s.shape,i.shape,"Error in logLoss: ");let l=$e(1),u=$e(n),d=Ln(ie(s,Yo(ke(i,u)))),c=ie(we(l,s),Yo(ke(we(l,i),u))),p=we(d,c);return pr(p,o,r)}var b$=z({logLoss_:x$});function v$(e,t,a,n=ha.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;a!=null&&(i=_(a,"weights","meanSquaredError")),Aa(r.shape,s.shape,"Error in meanSquaredError: ");let o=Kg(r,s);return pr(o,i,n)}var w$=z({meanSquaredError_:v$});function k$(e,t){let a=_(e,"labels","sigmoidCrossEntropyWithLogits"),n=_(t,"logits","sigmoidCrossEntropyWithLogits");Aa(a.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=qd(n),s=ie(n,a),i=Eg(Vr(Ln(Oa(n))));return ke(we(r,s),i)}function I$(e,t,a,n=0,r=ha.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(a!=null&&(o=_(a,"weights","sigmoidCrossEntropy")),Aa(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=$e(n),d=$e(1),c=$e(.5);s=ke(ie(s,we(d,u)),ie(c,u))}let l=k$(s,i);return pr(l,o,r)}var S$=z({sigmoidCrossEntropy_:I$});function T$(e,t,a=-1){if(a===-1&&(a=t.rank-1),a!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${a}`);return Un((n,r,s)=>{let i=_g(r,[a],!0),o=we(Xe(r,"float32"),i);s([n,o]);let l=Ln(ie(o,n));return{value:at(l,[a]),gradFunc:(u,d)=>{let[c,p]=d,h=Gd(u.shape,[a]);return[ie(te(u,h),we(Xe(c,"float32"),Vr(p))),ie(te(u,h),we(Vr(p),Xe(c,"float32")))]}}})(e,t)}function N$(e,t,a,n=0,r=ha.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(a!=null&&(o=_(a,"weights","softmaxCrossEntropy")),Aa(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let u=$e(n),d=$e(1),c=$e(s.shape[1]);s=ke(ie(s,we(d,u)),Ne(u,c))}let l=T$(s,i);return pr(l,o,r)}var C$=z({softmaxCrossEntropy_:N$});function E$(e,t,a,n){let r=_(e,"indices","sparseFillEmptyRows","int32"),s=_(t,"values","sparseFillEmptyRows"),i=_(a,"denseShape","sparseFillEmptyRows","int32"),o=_(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:r,values:s,denseShape:i,defaultValue:o},u=L.runKernel(Cd,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var R$=z({sparseFillEmptyRows_:E$});function _$(e,t,a){let n=_(e,"inputIndices","sparseReshape","int32"),r=_(t,"inputShape","sparseReshape","int32"),s=_(a,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:r,newShape:s},o=L.runKernel(Ol,i);return{outputIndices:o[0],outputShape:o[1]}}var $$=z({sparseReshape_:_$});function M$(e,t,a){let n=_(e,"data","sparseSegmentMean"),r=_(t,"indices","sparseSegmentMean","int32"),s=_(a,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:r,segmentIds:s};return L.runKernel(Ed,i)}var F$=z({sparseSegmentMean_:M$});function O$(e,t,a){let n=_(e,"data","sparseSegmentSum"),r=_(t,"indices","sparseSegmentSum","int32"),s=_(a,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:r,segmentIds:s};return L.runKernel(Rd,i)}var P$=z({sparseSegmentSum_:O$});function D$(e,t,a,n,r,s,i,o){let l=_(e,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=_(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let d={separator:a,nGramWidths:n,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},c={data:l,dataSplits:u},p=L.runKernel(Pl,c,d);return{nGrams:p[0],nGramsSplits:p[1]}}var z$=z({stringNGrams_:D$});function L$(e,t,a=!0){let n=_(e,"input","stringSplit","string"),r=_(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let s={skipEmpty:a},i={input:n,delimiter:r},o=L.runKernel(Md,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var W$=z({stringSplit_:L$});function B$(e,t){let a=_(e,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:a};return L.runKernel(Fd,r,n)}var V$=z({stringToHashBucketFast_:B$}),Rv={fft:Ih,ifft:Yu,rfft:Sh,irfft:Xg},_v={hammingWindow:y_,hannWindow:Sv,frame:Tv,stft:w_},Ue={flipLeftRight:T_,grayscaleToRGB:C_,resizeNearestNeighbor:J_,resizeBilinear:Z_,rotateWithOffset:R_,cropAndResize:I_,nonMaxSuppression:$_,nonMaxSuppressionAsync:W_,nonMaxSuppressionWithScore:V_,nonMaxSuppressionWithScoreAsync:G_,nonMaxSuppressionPadded:j_,nonMaxSuppressionPaddedAsync:X_,threshold:t$,transform:n$},$v={bandPart:s$,gramSchmidt:o$,qr:u$},Mv={absoluteDifference:c$,computeWeightedLoss:pr,cosineDistance:f$,hingeLoss:g$,huberLoss:y$,logLoss:b$,meanSquaredError:w$,sigmoidCrossEntropy:S$,softmaxCrossEntropy:C$},Fv={sparseFillEmptyRows:R$,sparseReshape:$$,sparseSegmentMean:F$,sparseSegmentSum:P$},Ov={stringNGrams:z$,stringSplit:W$,stringToHashBucketFast:V$},As=class extends yb{minimize(e,t=!1,a){let{value:n,grads:r}=this.computeGradients(e,a);if(a!=null){let s=a.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(s)}else this.applyGradients(r);return le(r),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return b3(e,t)}dispose(){this.iterations_!=null&&le(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:$e(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(As,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var _h=class extends As{constructor(e,t,a=null){super(),this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=L.registeredVariables[t],r=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accum_grad`,variable:De(()=>Ba(n).variable(r))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${t}/accum_var`,variable:De(()=>Ba(n).variable(r))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[a].variable,o=this.accumulatedUpdates[a].variable;De(()=>{let l=ke(ie(i,this.rho),ie(fn(s),1-this.rho)),u=ie(Ne(Vn(ke(o,this.epsilon)),Vn(ke(i,this.epsilon))),s),d=ke(ie(o,this.rho),ie(fn(u),1-this.rho));i.assign(l),o.assign(d);let c=ke(ie(u,-this.learningRate),n);n.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(le(this.accumulatedGrads.map(e=>e.variable)),le(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,a=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};_h.className="Adadelta";ms(_h);var $h=class extends As{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=L.registeredVariables[t];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accumulator`,variable:De(()=>ir(n.shape,this.initialAccumulatorValue).variable(!1))});let r=Array.isArray(e)?e[a].tensor:e[t];if(r==null)return;let s=this.accumulatedGrads[a].variable;De(()=>{let i=ke(s,fn(r));s.assign(i);let o=ke(ie(Ne(r,Vn(ke(i,L.backend.epsilon()))),-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&le(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};$h.className="Adagrad";ms($h);var Mh=class extends As{constructor(e,t,a,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],De(()=>{this.accBeta1=$e(t).variable(),this.accBeta2=$e(a).variable()}),n==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);De(()=>{let a=we(1,this.accBeta1),n=we(1,this.accBeta2);t.forEach((r,s)=>{let i=L.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:De(()=>Ba(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${r}/v`,variable:De(()=>Ba(i).variable(o))});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedSecondMoment[s].variable,c=ke(ie(u,this.beta1),ie(l,1-this.beta1)),p=ke(ie(d,this.beta2),ie(fn(l),1-this.beta2)),h=Ne(c,a),f=Ne(p,n);u.assign(c),d.assign(p);let m=ke(ie(Ne(h,ke(Vn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(ie(this.accBeta1,this.beta1)),this.accBeta2.assign(ie(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&le(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),De(()=>{this.accBeta1.assign(Zo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Zo(this.beta2,this.iterations_+1))});let t=e.length/2,a=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Mh.className="Adam";ms(Mh);var Fh=class extends As{constructor(e,t,a,n=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],De(()=>{this.iteration=$e(0).variable(),this.accBeta1=$e(t).variable()}),n==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);De(()=>{let a=we(1,this.accBeta1),n=Ne(-this.learningRate,ke(ie(this.iteration,this.decay),1));t.forEach((r,s)=>{let i=L.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:Ba(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${r}/v`,variable:Ba(i).variable(o)});let l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;let u=this.accumulatedFirstMoment[s].variable,d=this.accumulatedWeightedInfNorm[s].variable,c=ke(ie(u,this.beta1),ie(l,1-this.beta1)),p=ie(d,this.beta2),h=Oa(l),f=Og(p,h);u.assign(c),d.assign(f);let m=ke(ie(Ne(n,a),Ne(c,ke(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ke(this.iteration,1)),this.accBeta1.assign(ie(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&le(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Fh.className="Adamax";ms(Fh);var Xd=class extends As{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=Array.isArray(e)?e[a].tensor:e[t];if(n==null)return;let r=L.registeredVariables[t];De(()=>{let s=ke(ie(this.c,n),r);r.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=zn($e(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Xd.className="SGD";ms(Xd);var Oh=class extends Xd{constructor(e,t,a=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=$e(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=L.registeredVariables[t];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${t}/momentum`,variable:De(()=>Ba(n).variable(!1))});let r=this.accumulations[a].variable,s=Array.isArray(e)?e[a].tensor:e[t];s!=null&&De(()=>{let i,o=ke(ie(this.m,r),s);this.useNesterov?i=ke(ie(this.c,ke(s,ie(o,this.m))),n):i=ke(ie(this.c,o),n),r.assign(o),n.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&le(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Oh.className="Momentum";ms(Oh);var Ph=class extends As{constructor(e,t=.9,a=0,n=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,n==null&&(this.epsilon=L.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=L.registeredVariables[t],r=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${t}/rms`,variable:De(()=>Ba(n).variable(r))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${t}/momentum`,variable:De(()=>Ba(n).variable(r))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${t}/mg`,variable:De(()=>Ba(n).variable(r))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[a].variable,o=this.accumulatedMoments[a].variable;De(()=>{let l=ke(ie(i,this.decay),ie(fn(s),1-this.decay));if(this.centered){let u=this.accumulatedMeanGrads[a].variable,d=ke(ie(u,this.decay),ie(s,1-this.decay)),c=Ne(ie(s,this.learningRate),Vn(we(l,ke(fn(d),this.epsilon)))),p=ke(ie(o,this.momentum),c);i.assign(l),u.assign(d),o.assign(p);let h=we(n,p);n.assign(h)}else{let u=ke(ie(i,this.decay),ie(fn(s),1-this.decay)),d=ke(ie(o,this.momentum),Ne(ie(s,this.learningRate),Vn(ke(u,this.epsilon))));i.assign(u),o.assign(d);let c=we(n,d);n.assign(c)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&le(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&le(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&le(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,a=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Ph.className="RMSProp";ms(Ph);var kr=class{static sgd(e){return new Xd(e)}static momentum(e,t,a=!1){return new Oh(e,t,a)}static rmsprop(e,t=.9,a=0,n=null,r=!1){return new Ph(e,t,a,n,r)}static adam(e=.001,t=.9,a=.999,n=null){return new Mh(e,t,a,n)}static adadelta(e=.001,t=.95,a=null){return new _h(e,t,a)}static adamax(e=.002,t=.9,a=.999,n=null,r=0){return new Fh(e,t,a,n,r)}static adagrad(e,t=.1){return new $h(e,t)}},U$={sgd:kr.sgd,momentum:kr.momentum,adadelta:kr.adadelta,adagrad:kr.adagrad,rmsprop:kr.rmsprop,adamax:kr.adamax,adam:kr.adam},G$=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function Pv(){return new Promise(e=>G$(()=>e()))}var T={};Le(T,{ERF_A1:()=>oM,ERF_A2:()=>lM,ERF_A3:()=>uM,ERF_A4:()=>dM,ERF_A5:()=>pM,ERF_P:()=>iM,PARALLELIZE_THRESHOLD:()=>t1,RowPartitionType:()=>Pn,SELU_SCALE:()=>sM,SELU_SCALEALPHA:()=>rM,applyActivation:()=>Eh,assertAndGetBroadcastShape:()=>Mt,assertAxesAreInnerMostDims:()=>BC,assertParamsConsistent:()=>H$,assignToTypedArray:()=>AM,axesAreInnerMostDims:()=>kg,calculateShapes:()=>lb,checkEinsumDimSizes:()=>kM,checkPadOnDimRoundingMode:()=>mn,combineLocations:()=>d3,combineRaggedTensorToTensorShapes:()=>q$,complexWithEvenIndex:()=>fM,complexWithOddIndex:()=>mM,computeConv2DInfo:()=>Bd,computeConv3DInfo:()=>Fb,computeDefaultPad:()=>Ag,computeDilation2DInfo:()=>WN,computeOptimalWindowSize:()=>Y$,computeOutAndReduceShapes:()=>WC,computeOutShape:()=>j$,computePool2DInfo:()=>Mb,computePool3DInfo:()=>BN,convertConv2DDataFormat:()=>Ob,decodeEinsumEquation:()=>vM,eitherStridesOrDilationsAreOne:()=>dr,expandShapeToKeepDim:()=>Gd,exponent:()=>xM,exponents:()=>yM,fromStringArrayToUint8:()=>GM,fromUint8ToStringArray:()=>UM,getAxesPermutation:()=>VC,getBroadcastDims:()=>sb,getComplexWithIndex:()=>gM,getEinsumComputePath:()=>IM,getEinsumPermutation:()=>wM,getFusedBiasGradient:()=>Ch,getFusedDyActivation:()=>Nh,getImageCenter:()=>J$,getInnerMostAxes:()=>GC,getPermuted:()=>eM,getRaggedRank:()=>K$,getReductionAxes:()=>lg,getReshaped:()=>Q$,getReshapedPermuted:()=>tM,getRowPartitionTypesHelper:()=>X$,getSliceBeginCoords:()=>aM,getSliceSize:()=>nM,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>CM,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>EM,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>RM,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>MM,getSparseReshapeInputOutputMismatchErrorMessage:()=>OM,getSparseReshapeInputOutputMultipleErrorMessage:()=>FM,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>_M,getSparseReshapeNegativeOutputDimErrorMessage:()=>$M,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>LM,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>PM,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>DM,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>zM,getUndoAxesPermutation:()=>UC,isIdentityPermutation:()=>SM,log:()=>s9,mergeRealAndImagArrays:()=>cM,prepareAndValidate:()=>ob,prepareSplitSize:()=>NM,segment_util:()=>Dv,shouldFuse:()=>Rh,slice_util:()=>gt,splitRealAndImagArrays:()=>hM,tupleValuesAreOne:()=>Xu,upcastType:()=>Yt,validateDefaultValueShape:()=>Z$,validateInput:()=>hg,validateUpdateShape:()=>cg,warn:()=>Tr});function H$(e,t){let a=e[0].length;e.forEach((r,s)=>{F(r.length===a,()=>`Error in concat${a}D: rank of tensors[${s}] must be the same as the rank of the rest (${a})`)}),F(t>=0&&t<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`);let n=e[0];e.forEach((r,s)=>{for(let i=0;i<a;i++)F(i===t||r[i]===n[i],()=>`Error in concat${a}D: Shape of tensors[${s}] (${r}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function j$(e,t){let a=e[0].slice();for(let n=1;n<e.length;n++)a[t]+=e[n][t];return a}var Pn;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Pn||(Pn={}));function q$(e,t,a){let n=new Array;if(a==null&&t==null)return n;if(t==null)for(;n.length<e+a.length;)n.push(-1);else n=t.slice();if(a==null)return n;if(e+a.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+a.length}, but shape.rank = ${n.length}`);for(let r=1;r<a.length;++r){let s=a[r],i=n[n.length-a.length+r],o=n[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else n[i]=s}return n}function X$(e){let t={FIRST_DIM_SIZE:Pn.FIRST_DIM_SIZE,VALUE_ROWIDS:Pn.VALUE_ROWIDS,ROW_LENGTHS:Pn.ROW_LENGTHS,ROW_SPLITS:Pn.ROW_SPLITS,ROW_LIMITS:Pn.ROW_LIMITS,ROW_STARTS:Pn.ROW_STARTS},a=[];for(let n of e)if(n in t)a.push(t[n]);else break;return a}function K$(e){return e.length===0?0:e[0]===Pn.FIRST_DIM_SIZE?e.length-1:e.length}function Z$(e,t){if(e==null||t==null)return;let a=e.length,n=t.length;if(a>=n)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${a} must be less than ragged tensor input flatValues.rank = ${n})`);for(let r=0;r<Math.min(a,n-1);++r){let s=e[r],i=t[r+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${s} but ragged tensor input.flatValues.shape[${r-e.length}] = ${i}`)}}var t1=30;function Y$(e){return e<=t1?e:xc(e,Math.floor(Math.sqrt(e)))}function J$(e,t,a){let n=a*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[n,r]}function Q$(e,t,a,n=!0){let r=[];if(n)r=r.concat(t.slice(0)),r.push(e[0]/a),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(s+1))}return r}function eM(e,t,a=!0){let n=[];if(a){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):r.push(i);n.push(...r),n.push(0),n.push(...s)}return n}function tM(e,t,a,n=!0){let r=[];n?r.push(e[0]/a):r.push(e[0]*a);for(let s=1;s<e.length;++s)s<=t.length?n?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function aM(e,t){let a=[0];for(let n=0;n<t;++n)a.push(e[n][0]);return a}function nM(e,t,a){let n=e.slice(0,1);for(let r=0;r<a;++r)n.push(e[r+1]-t[r][0]-t[r][1]);return n}var rM=1.7580993408473768,sM=1.0507009873554805,iM=.3275911,oM=.254829592,lM=-.284496736,uM=1.421413741,dM=-1.453152027,pM=1.061405429;function cM(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let a=new Float32Array(e.length*2);for(let n=0;n<a.length;n+=2)a[n]=e[n/2],a[n+1]=t[n/2];return a}function hM(e){let t=new Float32Array(e.length/2),a=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],a[n/2]=e[n+1];return{real:t,imag:a}}function fM(e){let t=Math.ceil(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let r=0;r<e.length;r+=4)a[Math.floor(r/4)]=e[r],n[Math.floor(r/4)]=e[r+1];return{real:a,imag:n}}function mM(e){let t=Math.floor(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let r=2;r<e.length;r+=4)a[Math.floor(r/4)]=e[r],n[Math.floor(r/4)]=e[r+1];return{real:a,imag:n}}function gM(e,t){let a=e[t*2],n=e[t*2+1];return{real:a,imag:n}}function AM(e,t,a,n){e[n*2]=t,e[n*2+1]=a}function yM(e,t){let a=new Float32Array(e/2),n=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);a[r]=Math.cos(s),n[r]=Math.sin(s)}return{real:a,imag:n}}function xM(e,t,a){let n=(a?2:-2)*Math.PI*(e/t),r=Math.cos(n),s=Math.sin(n);return{real:r,imag:s}}var Gf="->",bM=/->/g,zA=",",LA="...";function vM(e,t){e=e.replace(/\s/g,"");let a=(e.length-e.replace(bM,"").length)/Gf.length;if(a<1)throw new Error("Equations without an arrow are not supported.");if(a>1)throw new Error(`Equation must contain exactly one arrow ("${Gf}").`);let[n,r]=e.split(Gf);F(n.indexOf(LA)===-1,()=>`The ellipsis notation ("${LA}") is not supported yet.`);let s=n.split(zA),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<r.length;++p){let h=r[p];if(!s.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);o.indexOf(h)===-1&&o.push(h)}for(let p=0;p<n.length;++p){let h=n[p];o.indexOf(h)===-1&&h!==zA&&o.push(h)}let l=new Array(s.length);for(let p=0;p<i;++p){if(new Set(s[p].split("")).size!==s[p].length)throw new Error(`Found duplicate axes in input component ${s[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let h=0;h<s[p].length;++h)l[p].push(o.indexOf(s[p][h]))}let u=o.length,d=r.length,c=[];for(let p=d;p<u;++p)c.push(p);return{allDims:o,summedDims:c,idDims:l}}function wM(e,t){let a=new Array(e);a.fill(-1);for(let r=0;r<t.length;++r)a[t[r]]=r;let n=[];for(let r=0;r<e;++r)a[r]===-1&&n.push(r);return a=a.filter(r=>r!==-1),{permutationIndices:a,expandDims:n}}function kM(e,t,a){let n=new Array(e);for(let r=0;r<a.length;++r){let s=a[r].shape;for(let i=0;i<t[r].length;++i)n[t[r][i]]===void 0?n[t[r][i]]=s[i]:F(n[t[r][i]]===s[i],()=>`Expected dimension ${n[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function IM(e,t){let a=e,n=[],r=0;e.length===0&&a.push(-1),r=e.length+1;for(let i=0;i<r;++i)n.push([]);let s=[];for(let i=0;i<a.length;++i){let o=a[i],l=TM(t,o);for(let u of l)s.indexOf(u)===-1&&(n[i].push(u),s.push(u))}return{path:a,steps:n}}function SM(e){return e.every((t,a)=>t===a)}function TM(e,t){let a=[];for(let n=0;n<e.length;++n)(e[n].length===0||e[n].indexOf(t)!==-1||t===-1)&&a.push(n);return a}function NM(e,t,a=0){let n=[];if(typeof t=="number")F(e.shape[a]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(e.shape[a]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);F(r<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,l)=>l>0?o+l:o);t[s]=e.shape[a]-i}F(e.shape[a]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function CM(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function EM(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function RM(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function _M(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function $M(e,t){return`size ${e} must be non-negative, not ${t}`}function MM(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function FM(e,t){let a=mt(e),n=mt(t);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function OM(e,t){let a=mt(e),n=mt(t);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function PM(){return"segment ids must be >= 0"}function DM(){return"segment ids are not increasing"}function zM(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function LM(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}var Dv={};Le(Dv,{collectGatherOpShapeInfo:()=>VM,computeOutShape:()=>BM,segOpComputeOptimalWindowSize:()=>WM});function WM(e,t){let a=!1,n;for(e<=t1?(n=e,a=!0):n=xc(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=xc(e,n+1);return n}function BM(e,t,a){let n=[],r=e.length;for(let s=0;s<r;s++)s!==t?n.push(e[s]):n.push(a);return n}function VM(e,t,a,n){let r=t.shape.length,s=e.shape.length;if(n!==0&&(n<-r||n>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${n}`);if(n<0&&(n+=r),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(a<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${a}).`);for(let c=0;c<n;++c)if(e.shape[c]!==t.shape[c])throw new Error(`x.shape[${c}]: ${e.shape[c]} should be equal to indices.shape[${c}]: ${t.shape[c]}.`);let i=e.shape[a],o=[],l=1,u=1,d=1;for(let c=0;c<n;++c)o.push(e.shape[c]),l*=e.shape[c];for(let c=n;c<a;c++)o.push(e.shape[c]),u*=e.shape[c];for(let c=n;c<r;c++)o.push(t.shape[c]);for(let c=a+1;c<s;c++)o.push(e.shape[c]),d*=e.shape[c];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function UM(e){try{return e.map(t=>vc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function GM(e){return e.map(t=>Pd(t))}var An={};Le(An,{nonMaxSuppressionV3Impl:()=>Nv,nonMaxSuppressionV4Impl:()=>Cv,nonMaxSuppressionV5Impl:()=>Ev,whereImpl:()=>Av});var HM=B();HM.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var on;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(on||(on={}));var WA;(function(e){let t;(function(a){a[a.LEGACY=0]="LEGACY",a[a.V1=1]="V1",a[a.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(WA||(WA={}));var a1={};function jM(e,t){let a={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};a1[e]=a}function zv(e){return a1[e]}function qM(e){delete a1[e]}function k(e,t,a,n,r){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return fa(t.inputNames[s.inputIndexStart],a,n,r);if(s.type==="tensors")return t.inputNames.slice(o,l).map(c=>fa(c,a,n,r));let u=fa(t.inputNames.slice(o)[0],a,n,r),d=u.dataSync();return s.type==="number"?d[0]:v.toNestedArray(u.shape,d)}let i=t.attrParams[e];return i&&i.value}function fa(e,t,a,n){let[r,s]=Fa(e);if(n!=null){let o=n.getHashTableHandleByName(r);if(o!=null)return o}let i=a.currentContextIds.find(o=>!!t[Cc(r,o)]);return i!==void 0?t[Cc(r,i)][s]:void 0}function XM(e,t,a){return t[Cc(e,a.currentContextId)]}function Dn(e,t){let[a,n,r]=Fa(e);return[Cc(a,t&&t.currentContextId),n,r]}function Cc(e,t){return t?`${e}-${t}`:e}function Fa(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let a=t[0],n=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[a,r,n]}function ic(e,t,a){let n=k("pad",e,t,a);if(n==="explicit"){n=k("explicitPaddings",e,t,a);let r=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)r[s][0]=n[s*2],r[s][1]=n[s*2+1];return r}return n}function Yn(e){return e.kept?e:Ca(e)}var Lv={};Le(Lv,{json:()=>KM});var KM=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Wv={};Le(Wv,{json:()=>ZM});var ZM=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Bv={};Le(Bv,{json:()=>YM});var YM=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Vv={};Le(Vv,{json:()=>JM});var JM=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Uv={};Le(Uv,{json:()=>QM});var QM=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Gv={};Le(Gv,{json:()=>eF});var eF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Hv={};Le(Hv,{json:()=>tF});var tF=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],jv={};Le(jv,{json:()=>aF});var aF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],qv={};Le(qv,{json:()=>nF});var nF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Xv={};Le(Xv,{json:()=>rF});var rF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Kv={};Le(Kv,{json:()=>sF});var sF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Zv={};Le(Zv,{json:()=>iF});var iF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Yv={};Le(Yv,{json:()=>oF});var oF=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Jv={};Le(Jv,{json:()=>lF});var lF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Qv={};Le(Qv,{json:()=>uF});var uF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],e7={};Le(e7,{json:()=>dF});var dF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],t7={};Le(t7,{json:()=>pF});var pF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],a7={};Le(a7,{json:()=>cF});var cF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],n7={};Le(n7,{json:()=>hF});var hF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],BA=class{constructor(){let e=[Lv,Wv,Bv,Vv,Uv,Gv,Hv,jv,qv,Xv,Kv,Zv,Yv,Jv,Qv,e7,t7,a7,n7],t=[].concat(...e.map(a=>a.json));this.opMappers=t.reduce((a,n)=>(a[n.tfOpName]=n,a),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){let a=e.node,n=[],r=[],s=[],i=a.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?n.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],l=[],u={},d={};t!=null&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach(f=>{let m=i[f];m.inputNames.forEach((g,A)=>{let[y,,x]=Dn(g),b=i[y];if(b.outputs!=null){let w=b.outputs.indexOf(x);if(w!==-1){let S=`${y}:${w}`;m.inputNames[A]=S}}m.inputs.push(b),b.children.push(m)})}),Object.keys(d).length===0?c.forEach(f=>{let m=i[f];m.children.length===0&&l.push(m)}):Object.keys(d).forEach(f=>{let[m]=Dn(f),g=i[m];g!=null&&(g.signatureKey=d[f],l.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(f=>{let[m]=Dn(f),g=i[m];g&&(g.signatureKey=u[f],o.push(g))}):o=n;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:n,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,a)=>(t[e[a].name]=a,t),{})}mapNode(e){let t=zv(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let a={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(a.inputParams=t.inputs.reduce((n,r)=>(n[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},n),{})),t.attrs!=null&&(a.attrParams=t.attrs.reduce((n,r)=>{let s=r.type,i;switch(r.type){case"string":i=qm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=qm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=e2(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=e2(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=Km(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=Km(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=Qm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Qm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=Xm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Xm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=a2(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=a2(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=Jm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Jm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=t2(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=t2(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=Zm(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Zm(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=Ym(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Ym(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=VA(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=VA(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return n[r.name]={value:i,type:s},n},{})),a}mapFunction(e){let t=e.nodeDef,a=[],n=[],r={};t!=null&&(r=t.reduce((u,d)=>(u[d.name]=this.mapNode(d),d.op==="Const"&&n.push(u[d.name]),u),{}));let s=[],i=[];e.signature.inputArg.forEach(u=>{let[d]=Dn(u.name),c={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:n1(u.type),type:"dtype"}},children:[]};c.signatureKey=u.name,s.push(c),r[d]=c}),Object.keys(r).forEach(u=>{let d=r[u];d.inputNames.forEach((c,p)=>{let[h,,f]=Dn(c),m=r[h];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let A=`${h}:${g}`;d.inputNames[p]=A}}d.inputs.push(m),m.children.push(d)})});let o=e.ret;e.signature.outputArg.forEach(u=>{let[d,c]=Dn(o[u.name]),p=r[d];p!=null&&(p.defaultOutput=c,i.push(p))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:a,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a),t),{}),outputs:e.signature.outputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a,e.ret),t),{})}}mapArgToTensorInfo(e,t){let a=e.name;return t!=null&&(a=t[a]),{name:a,dtype:e.type}}};function fF(e){let t=B().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function r7(e,t){let a=Array.isArray(e)?String.fromCharCode.apply(null,e):fF(e);return t?a:a.toLowerCase()}function qm(e,t,a,n=!1){let r=e[t];return r!=null?r7(r.s,n):a}function Xm(e,t,a){let n=e[t];return n?n.b:a}function Km(e,t,a){let n=e[t]||{},r=n.i!=null?n.i:n.f!=null?n.f:a;return typeof r=="number"?r:parseInt(r,10)}function n1(e){switch(typeof e=="string"&&(e=on[e]),e){case on.DT_FLOAT:case on.DT_HALF:return"float32";case on.DT_INT32:case on.DT_INT64:case on.DT_INT8:case on.DT_UINT8:return"int32";case on.DT_BOOL:return"bool";case on.DT_DOUBLE:return"float32";case on.DT_STRING:return"string";default:return null}}function VA(e,t,a){let n=e[t];return n&&n.func?n.func.name:a}function Zm(e,t,a){let n=e[t];return n&&n.type?n1(n.type):a}function Ym(e,t,a){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(r=>n1(r)):a}function s7(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Jm(e,t,a){let n=e[t];return n&&n.shape?s7(n.shape):a}function Qm(e,t,a){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):a}function e2(e,t,a,n=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(s=>r7(s,n)):a}function t2(e,t,a){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(r=>s7(r)):a}function a2(e,t,a){let n=e[t];return n&&n.list&&n.list.b?n.list.b:a}var mF=class{constructor(e,t,a){this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,r)=>(n[r]=this.getAttr(r),n),{}))}getInput(e){return fa(e,this.tensorMap,this.context)}getAttr(e,t){let a=this.node.rawAttrs[e];if(a.tensor!=null)return fa(e,this.tensorMap,this.context);if(a.i!=null||a.f!=null)return Km(this.node.rawAttrs,e,t);if(a.s!=null)return qm(this.node.rawAttrs,e,t);if(a.b!=null)return Xm(this.node.rawAttrs,e,t);if(a.shape!=null)return Jm(this.node.rawAttrs,e,t);if(a.type!=null)return Zm(this.node.rawAttrs,e,t);if(a.list!=null){if(a.list.i!=null||a.list.f!=null)return Qm(this.node.rawAttrs,e,t);if(a.list.s!=null)return e2(this.node.rawAttrs,e,t);if(a.list.shape!=null)return t2(this.node.rawAttrs,e,t);if(a.list.b!=null)return a2(this.node.rawAttrs,e,t);if(a.list.type!=null)return Ym(this.node.rawAttrs,e,t)}return t}},Jt={};Le(Jt,{OP_SCOPE_SUFFIX:()=>Q2,abs:()=>Oa,acos:()=>kb,acosh:()=>Ib,add:()=>ke,addN:()=>gg,all:()=>Sb,any:()=>Tb,argMax:()=>Bl,argMin:()=>Nb,asin:()=>Cb,asinh:()=>Eb,atan:()=>Rb,atan2:()=>_b,atanh:()=>$b,avgPool:()=>yg,avgPool3d:()=>Pb,basicLSTMCell:()=>Db,batchNorm:()=>Vd,batchNorm2d:()=>zb,batchNorm3d:()=>Lb,batchNorm4d:()=>Wb,batchToSpaceND:()=>xg,bincount:()=>bg,booleanMaskAsync:()=>yv,broadcastArgs:()=>Bb,broadcastTo:()=>Gs,buffer:()=>xe,cast:()=>Xe,ceil:()=>Vb,clipByValue:()=>Ub,clone:()=>Ca,complex:()=>sr,concat:()=>ut,concat1d:()=>Gb,concat2d:()=>yh,concat3d:()=>Hb,concat4d:()=>jb,conv1d:()=>qb,conv2d:()=>Ud,conv2dTranspose:()=>Kb,conv3d:()=>Zb,conv3dTranspose:()=>Yb,cos:()=>Jb,cosh:()=>Qb,cosineWindow:()=>Th,cumprod:()=>e3,cumsum:()=>t3,denseBincount:()=>a3,depthToSpace:()=>n3,depthwiseConv2d:()=>xh,diag:()=>r3,dilation2d:()=>s3,div:()=>Ne,divNoNan:()=>i3,dot:()=>o3,dropout:()=>kv,einsum:()=>l3,elu:()=>wg,enclosingPowerOfTwo:()=>Jg,equal:()=>vg,erf:()=>u3,euclideanNorm:()=>c3,exp:()=>Vr,expandDims:()=>Pa,expm1:()=>h3,eye:()=>Ig,fft:()=>Ih,fill:()=>ir,floor:()=>Sg,floorDiv:()=>Ah,fused:()=>Qg,gather:()=>Tg,gatherND:()=>wv,greater:()=>jd,greaterEqual:()=>Ng,ifft:()=>Yu,imag:()=>Wd,image:()=>Ue,inTopKAsync:()=>Iv,irfft:()=>Xg,isFinite:()=>f3,isInf:()=>m3,isNaN:()=>g3,leakyRelu:()=>Cg,less:()=>A3,lessEqual:()=>bh,linalg:()=>$v,linspace:()=>y3,localResponseNormalization:()=>x3,log:()=>Yo,log1p:()=>Eg,logSigmoid:()=>v3,logSoftmax:()=>w3,logSumExp:()=>_g,logicalAnd:()=>Ku,logicalNot:()=>$g,logicalOr:()=>Mg,logicalXor:()=>k3,losses:()=>Mv,lowerBound:()=>I3,matMul:()=>Qe,max:()=>hn,maxPool:()=>Fg,maxPool3d:()=>S3,maxPoolWithArgmax:()=>T3,maximum:()=>Og,mean:()=>Zu,meshgrid:()=>N3,min:()=>Hs,minimum:()=>Pg,mirrorPad:()=>C3,mod:()=>kh,moments:()=>E3,movingAverage:()=>xv,mul:()=>ie,multiRNNCell:()=>R3,multinomial:()=>_3,neg:()=>Ln,norm:()=>Hd,notEqual:()=>Dg,oneHot:()=>kc,ones:()=>Rr,onesLike:()=>$3,op:()=>z,outerProduct:()=>M3,pad:()=>gs,pad1d:()=>F3,pad2d:()=>O3,pad3d:()=>P3,pad4d:()=>D3,pool:()=>z3,pow:()=>Zo,prelu:()=>Lg,print:()=>ng,prod:()=>L3,raggedGather:()=>W3,raggedRange:()=>B3,raggedTensorToTensor:()=>V3,rand:()=>U3,randomGamma:()=>G3,randomNormal:()=>Vg,randomStandardNormal:()=>H3,randomUniform:()=>Ug,range:()=>Jo,real:()=>Xo,reciprocal:()=>j3,relu:()=>qd,relu6:()=>Gg,reshape:()=>te,reverse:()=>Ur,reverse1d:()=>q3,reverse2d:()=>X3,reverse3d:()=>K3,reverse4d:()=>Z3,rfft:()=>Sh,round:()=>Hg,rsqrt:()=>Y3,scalar:()=>$e,scatterND:()=>bv,searchSorted:()=>wh,selu:()=>J3,separableConv2d:()=>Q3,setdiff1dAsync:()=>ev,sigmoid:()=>Wn,sign:()=>tv,signal:()=>_v,sin:()=>av,sinh:()=>nv,slice:()=>Ve,slice1d:()=>rv,slice2d:()=>sv,slice3d:()=>Nc,slice4d:()=>jg,softmax:()=>qg,softplus:()=>Rg,spaceToBatchND:()=>zg,sparse:()=>Fv,sparseToDense:()=>vv,spectral:()=>Rv,split:()=>Gn,sqrt:()=>Vn,square:()=>fn,squaredDifference:()=>Kg,squeeze:()=>it,stack:()=>en,step:()=>Zg,stridedSlice:()=>iv,string:()=>Ov,sub:()=>we,sum:()=>at,tan:()=>ov,tanh:()=>Tc,tensor:()=>Be,tensor1d:()=>na,tensor2d:()=>Fr,tensor3d:()=>ug,tensor4d:()=>lv,tensor5d:()=>uv,tensor6d:()=>dv,tile:()=>js,topk:()=>pv,transpose:()=>Ko,truncatedNormal:()=>cv,unique:()=>hv,unsortedSegmentSum:()=>fv,unstack:()=>gn,upperBound:()=>mv,variable:()=>gv,where:()=>Js,whereAsync:()=>Yg,zeros:()=>Nn,zerosLike:()=>Ba});var gF=(e,t,a,n=Jt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(k("a",e,t,a),k("b",e,t,a))];case"AddN":return[n.addN(k("tensors",e,t,a))];case"FloorMod":case"Mod":return[n.mod(k("a",e,t,a),k("b",e,t,a))];case"Mul":return[n.mul(k("a",e,t,a),k("b",e,t,a))];case"RealDiv":case"Div":return[n.div(k("a",e,t,a),k("b",e,t,a))];case"DivNoNan":return[n.divNoNan(k("a",e,t,a),k("b",e,t,a))];case"FloorDiv":return[n.floorDiv(k("a",e,t,a),k("b",e,t,a))];case"Sub":return[n.sub(k("a",e,t,a),k("b",e,t,a))];case"Minimum":return[n.minimum(k("a",e,t,a),k("b",e,t,a))];case"Maximum":return[n.maximum(k("a",e,t,a),k("b",e,t,a))];case"Pow":return[n.pow(k("a",e,t,a),k("b",e,t,a))];case"SquaredDifference":return[n.squaredDifference(k("a",e,t,a),k("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AF=(e,t,a,n=Jt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(k("x",e,t,a))];case"Acos":return[n.acos(k("x",e,t,a))];case"Acosh":return[n.acosh(k("x",e,t,a))];case"Asin":return[n.asin(k("x",e,t,a))];case"Asinh":return[n.asinh(k("x",e,t,a))];case"Atan":return[n.atan(k("x",e,t,a))];case"Atan2":return[n.atan2(k("x",e,t,a),k("y",e,t,a))];case"Atanh":return[n.atanh(k("x",e,t,a))];case"Ceil":return[n.ceil(k("x",e,t,a))];case"Complex":return[n.complex(k("real",e,t,a),k("imag",e,t,a))];case"Cos":return[n.cos(k("x",e,t,a))];case"Cosh":return[n.cosh(k("x",e,t,a))];case"Elu":return[n.elu(k("x",e,t,a))];case"Erf":return[n.erf(k("x",e,t,a))];case"Exp":return[n.exp(k("x",e,t,a))];case"Expm1":return[n.expm1(k("x",e,t,a))];case"Floor":return[n.floor(k("x",e,t,a))];case"Log":return[n.log(k("x",e,t,a))];case"Log1p":return[n.log1p(k("x",e,t,a))];case"Imag":return[n.imag(k("x",e,t,a))];case"Neg":return[n.neg(k("x",e,t,a))];case"Reciprocal":return[n.reciprocal(k("x",e,t,a))];case"Real":return[n.real(k("x",e,t,a))];case"Relu":return[n.relu(k("x",e,t,a))];case"Round":return[n.round(k("x",e,t,a))];case"Selu":return[n.selu(k("x",e,t,a))];case"Sigmoid":return[n.sigmoid(k("x",e,t,a))];case"Sin":return[n.sin(k("x",e,t,a))];case"Sign":return[n.sign(k("x",e,t,a))];case"Sinh":return[n.sinh(k("x",e,t,a))];case"Softplus":return[n.softplus(k("x",e,t,a))];case"Sqrt":return[n.sqrt(k("x",e,t,a))];case"Square":return[n.square(k("x",e,t,a))];case"Tanh":return[n.tanh(k("x",e,t,a))];case"Tan":return[n.tan(k("x",e,t,a))];case"ClipByValue":return[n.clipByValue(k("x",e,t,a),k("clipValueMin",e,t,a),k("clipValueMax",e,t,a))];case"Relu6":return[n.relu6(k("x",e,t,a))];case"Rsqrt":return[n.rsqrt(fa(e.inputNames[0],t,a))];case"Prod":return[n.prod(k("x",e,t,a),k("axes",e,t,a))];case"LeakyRelu":return[n.leakyRelu(k("x",e,t,a),k("alpha",e,t,a))];case"Prelu":return[n.prelu(k("x",e,t,a),k("alpha",e,t,a))];case"IsNan":return[n.isNaN(fa(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function un(e,t,a=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>a+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let r=e[n],s=t[n];v.assert(r<0||s<0||r===s,()=>a+` Shapes ${e} and ${t} must match`)}}}function UA(e){return!(typeof e=="number"||e.some(t=>t<0))}function gu(e,t,a){let n=n2(e,a),r=!UA(n);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(r&&t.forEach(s=>{n=n2(s.shape,n)}),!UA(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function n2(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let a=[];for(let n=0;n<e.length;++n){let r=e[n],s=t[n];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);a[n]=r>=0?r:s}return a}var yF=class{constructor(e,t,a,n,r,s,i){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=n,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=$e(0),zn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),un(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);a.tensor=t,zn(t),a.written=!0,this.tensors[e]=a}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((a,n)=>this.write(a,t[n]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return Be([],[0].concat(this.elementShape));let a=this.readMany(e);return un(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),en(a,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Be([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let a=this.readMany(t);return un(this.elementShape,a[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${a[0].shape})`),ut(a,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let a=Math.max(...e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(e,gn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let a=0,n=e.map(o=>(a+=o,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=a===0?0:t.size/a,s=[];De(()=>{t=te(t,[1,a,r]);for(let o=0;o<e.length;++o){let l=o===0?0:n[o-1],u=[0,l,0],d=[1,e[o],r];s[o]=te(Ve(t,u,d),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Qo=class{constructor(e,t,a,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,e?.forEach(r=>{if(a!==r.dtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${r.dtype}`);un(t,r.shape,"TensorList shape mismatch: "),zn(r)}),this.idTensor=$e(0),this.maxNumElements=n,zn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Qo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,a=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(a!==-1&&this.tensors.length!==a)throw new Error(`Operation expected a list with ${a} elements but got a list with ${this.tensors.length} elements.`);un(e,this.elementShape,"TensorList shape mismatch: ");let n=gu(this.elementShape,this.tensors,e);return De(()=>{let r=this.tensors.map(s=>te(s,n));return en(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let a=gu(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,un(n.shape,e,"TensorList shape mismatch: "),te(n,a)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(un(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");zn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Qo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let a=0;a<Math.min(this.tensors.length,e);++a)t.tensors[a]=this.tensors[a];return t}getItem(e,t,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);un(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=gu(this.elementShape,this.tensors,t);return te(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);un(this.elementShape,t.shape,"TensorList shape mismatch: "),zn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,a){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);un(this.elementShape,a,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=gu(this.elementShape,this.tensors,a);return e.length===0?Be([],[0].concat(n)):De(()=>{let r=e.map(s=>te(this.tensors[s],n));return en(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);un(this.elementShape,t,"TensorList shape mismatch: ");let a=gu(this.elementShape,this.tensors,t);return this.size()===0?Be([],[0].concat(a)):De(()=>{let n=this.tensors.map(r=>te(r,a));return ut(n,0)})}};function xF(e,t,a){let n=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==a)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${a}`);let r=e.shape.slice(1);un(r,t,"TensorList shape mismatch: ");let s=gn(e);return new Qo(s,t,n)}function bF(e,t,a,n){return new Qo([],e,t,n)}function vF(e,t,a,n){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(n!=null&&n!==-1&&r>=n)throw new Error(`Max index must be < array size (${r}  vs. ${n})`);let s=new Qo([],a,e.dtype,n),i=gn(e,0);return t.forEach((o,l)=>{s.setItem(o,i[l])}),s}function wF(e,t,a){let n=0,r=t.map(d=>(n+=d,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=n2(s,a),o=n===0?0:e.size/n,l=De(()=>{let d=[];e=te(e,[1,n,o]);for(let c=0;c<t.length;++c){let p=c===0?0:r[c-1],h=[0,p,0],f=[1,t[c],o];d[c]=te(Ve(e,h,f),i)}return e.dispose(),d}),u=new Qo([],a,e.dtype,t.length);for(let d=0;d<l.length;d++)u.setItem(d,l[d]);return u}var kF=async(e,t,a)=>{switch(e.op){case"If":case"StatelessIf":{let n=k("thenBranch",e,t,a),r=k("elseBranch",e,t,a),s=k("cond",e,t,a),i=k("args",e,t,a);return(await s.data())[0]?a.functionMap[n].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap):a.functionMap[r].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{let n=k("body",e,t,a),r=k("cond",e,t,a),s=k("args",e,t,a),i=await a.functionMap[r].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap),o=s.map(d=>d.id),l=await i[0].data();i.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let u=s;for(;l[0];){let d=u;u=await a.functionMap[n].executeFunctionAsync(u,a.tensorArrayMap,a.tensorListMap);let c=u.map(h=>h.id);d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&c.indexOf(h.id)===-1&&h.dispose()});let p=await a.functionMap[r].executeFunctionAsync(u,a.tensorArrayMap,a.tensorListMap);l=await p[0].data(),p.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&c.indexOf(h.id)===-1&&h.dispose()})}return u}case"LoopCond":{let n=k("pred",e,t,a);return[Yn(n)]}case"Switch":{let n=k("pred",e,t,a),r=k("data",e,t,a);return r.kept||(r=Yn(r)),(await n.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let n=e.inputNames.find(r=>fa(r,t,a)!==void 0);if(n){let r=fa(n,t,a);return[Yn(r)]}return}case"Enter":{let n=k("frameName",e,t,a),r=k("tensor",e,t,a);return a.enterFrame(n),[Yn(r)]}case"Exit":{let n=k("tensor",e,t,a);return a.exitFrame(),[Yn(n)]}case"NextIteration":{let n=k("tensor",e,t,a);return a.nextIteration(),[Yn(n)]}case"TensorArrayV3":{let n=k("size",e,t,a),r=k("dtype",e,t,a),s=k("elementShape",e,t,a),i=k("dynamicSize",e,t,a),o=k("clearAfterRead",e,t,a),l=k("identicalElementShapes",e,t,a),u=k("name",e,t,a),d=new yF(u,r,n,s,l,i,o);return a.addTensorArray(d),[d.idTensor,$e(1)]}case"TensorArrayWriteV3":{let n=k("tensorArrayId",e,t,a),r=k("index",e,t,a),s=k("tensor",e,t,a),i=a.getTensorArray(n.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let n=k("tensorArrayId",e,t,a),r=k("index",e,t,a);return[a.getTensorArray(n.id).read(r)]}case"TensorArrayGatherV3":{let n=k("tensorArrayId",e,t,a),r=k("indices",e,t,a),s=k("dtype",e,t,a);return[a.getTensorArray(n.id).gather(r,s)]}case"TensorArrayScatterV3":{let n=k("tensorArrayId",e,t,a),r=k("indices",e,t,a),s=k("tensor",e,t,a),i=a.getTensorArray(n.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id),s=k("dtype",e,t,a);return[r.concat(s)]}case"TensorArraySplitV3":{let n=k("tensorArrayId",e,t,a),r=k("tensor",e,t,a),s=k("lengths",e,t,a),i=a.getTensorArray(n.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id);return[$e(r.size(),"int32")]}case"TensorArrayCloseV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let n=k("tensorListId",e,t,a),r=k("index",e,t,a),s=k("tensor",e,t,a),i=a.getTensorList(n.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let n=k("tensorListId",e,t,a),r=k("index",e,t,a),s=k("elementShape",e,t,a),i=k("elementDType",e,t,a);return[a.getTensorList(n.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=k("indices",e,t,a),r=k("tensor",e,t,a),s=k("elementShape",e,t,a),i=k("numElements",e,t,a),o=vF(r,n,s,i);return a.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=k("elementShape",e,t,a),r=k("elementDType",e,t,a),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,a),o=e.op==="TensorListReserve"?-1:i,l=bF(n,r,i,o);return a.addTensorList(l),[l.idTensor]}case"TensorListGather":{let n=k("tensorListId",e,t,a),r=k("indices",e,t,a),s=k("elementShape",e,t,a),i=k("elementDType",e,t,a);return[a.getTensorList(n.id).gather(r,i,s)]}case"TensorListStack":{let n=k("tensorListId",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a),i=k("numElements",e,t,a);return[a.getTensorList(n.id).stack(r,s,i)]}case"TensorListFromTensor":{let n=k("tensor",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a),i=xF(n,r,s);return a.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=k("tensorListId",e,t,a),r=a.getTensorList(n.id),s=k("dtype",e,t,a),i=k("elementShape",e,t,a);return[r.concat(s,i)]}case"TensorListPushBack":{let n=k("tensorListId",e,t,a),r=k("tensor",e,t,a),s=a.getTensorList(n.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let n=k("tensorListId",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a);return[a.getTensorList(n.id).popBack(r,s)]}case"TensorListSplit":{let n=k("tensor",e,t,a),r=k("elementShape",e,t,a),s=k("lengths",e,t,a),i=wF(n,s,r);return a.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=k("tensorListId",e,t,a),r=a.getTensorList(n.id);return[$e(r.size(),"int32")]}case"TensorListResize":{let n=k("tensorListId",e,t,a),r=k("size",e,t,a),s=a.getTensorList(n.id).resize(r);return a.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function GA(e,t,a){let[n,r]=k("fusedOps",e,t,a),s=n==="biasadd",i=!s,o=r==="prelu",l=n==="fusedbatchnorm",u=k("numArgs",e,t,a);if(s){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=k("strides",e,t,a),c=ic(e,t,a),p=k("dataFormat",e,t,a).toUpperCase(),h=k("dilations",e,t,a),[f,m]=k("args",e,t,a);i&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,a);return{stride:d,pad:c,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var IF=(e,t,a,n=Jt)=>{switch(e.op){case"Conv1D":{let r=k("stride",e,t,a),s=k("pad",e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilation",e,t,a);return[n.conv1d(k("x",e,t,a),k("filter",e,t,a),r,s,i,o)]}case"Conv2D":{let r=k("strides",e,t,a),s=ic(e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilations",e,t,a);return[n.conv2d(k("x",e,t,a),k("filter",e,t,a),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:c}=GA(e,t,a);return[n.fused.conv2d({x:k("x",e,t,a),filter:k("filter",e,t,a),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:c}=GA(e,t,a);return[n.fused.depthwiseConv2d({x:k("x",e,t,a),filter:k("filter",e,t,a),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=k("outputShape",e,t,a),s=k("strides",e,t,a),i=ic(e,t,a);return[n.conv2dTranspose(k("x",e,t,a),k("filter",e,t,a),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=k("strides",e,t,a),s=ic(e,t,a),i=k("dilations",e,t,a),o=k("dataFormat",e,t,a).toUpperCase();return[n.depthwiseConv2d(k("input",e,t,a),k("filter",e,t,a),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilations",e,t,a);return[n.conv3d(k("x",e,t,a),k("filter",e,t,a),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.avgPool(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.maxPool(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a),o=k("includeBatchInIndex",e,t,a),{result:l,indexes:u}=n.maxPoolWithArgmax(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s,o);return[l,u]}case"AvgPool3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.avgPool3d(k("x",e,t,a),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.maxPool3d(k("x",e,t,a),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("dilations",e,t,a),o=r[1],l=r[2],u=i[1],d=i[2];return[n.dilation2d(k("x",e,t,a),k("filter",e,t,a),[o,l],s,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},SF=(e,t,a,n=Jt)=>{switch(e.op){case"Fill":{let r=k("shape",e,t,a),s=k("dtype",e,t,a),i=k("value",e,t,a);return[n.fill(r,i,s)]}case"LinSpace":{let r=k("start",e,t,a),s=k("stop",e,t,a),i=k("num",e,t,a);return[n.linspace(r,s,i)]}case"Multinomial":{let r=k("logits",e,t,a),s=k("numSamples",e,t,a),i=k("seed",e,t,a);return[n.multinomial(r,s,i)]}case"OneHot":{let r=k("indices",e,t,a),s=k("depth",e,t,a),i=k("onValue",e,t,a),o=k("offValue",e,t,a),l=k("dtype",e,t,a);return[n.oneHot(r,s,i,o,l)]}case"Ones":return[n.ones(k("shape",e,t,a),k("dtype",e,t,a))];case"OnesLike":return[n.onesLike(k("x",e,t,a))];case"RandomStandardNormal":return[n.randomStandardNormal(k("shape",e,t,a),k("dtype",e,t,a),k("seed",e,t,a))];case"RandomUniform":return[n.randomUniform(k("shape",e,t,a),k("minval",e,t,a),k("maxval",e,t,a),k("dtype",e,t,a))];case"Range":{let r=k("start",e,t,a),s=k("stop",e,t,a),i=k("step",e,t,a);return[n.range(r,s,i,k("dtype",e,t,a))]}case"TruncatedNormal":{let r=k("shape",e,t,a),s=k("mean",e,t,a),i=k("stdDev",e,t,a),o=k("seed",e,t,a);return[n.truncatedNormal(r,s,i,k("dtype",e,t,a),o)]}case"Zeros":return[n.zeros(k("shape",e,t,a),k("dtype",e,t,a))];case"ZerosLike":return[n.zerosLike(k("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Hf(e,t,a){let n=k("boxes",e,t,a),r=k("scores",e,t,a),s=k("maxOutputSize",e,t,a),i=k("iouThreshold",e,t,a),o=k("scoreThreshold",e,t,a),l=k("softNmsSigma",e,t,a);return{boxes:n,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}var TF=async(e,t,a,n,r=Jt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:d}=Hf(e,t,a),c=await r.image.nonMaxSuppressionWithScoreAsync(s,i,o,l,u,d);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Hf(e,t,a),d=k("padToMaxOutputSize",e,t,a),c=await r.image.nonMaxSuppressionPaddedAsync(s,i,o,l,u,d);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=Hf(e,t,a);return[await r.image.nonMaxSuppressionAsync(s,i,o,l,u)]}case"Where":{let s=r.cast(k("condition",e,t,a),"bool"),i=[await r.whereAsync(s)];return s.dispose(),i}case"ListDiff":return r.setdiff1dAsync(k("x",e,t,a),k("y",e,t,a));default:throw TypeError(`Node type ${e.op} is not implemented`)}},NF=(e,t,a,n=Jt)=>{switch(e.op){case"LowerBound":{let r=k("sortedSequence",e,t,a),s=k("values",e,t,a);return[n.lowerBound(r,s)]}case"TopKV2":{let r=k("x",e,t,a),s=k("k",e,t,a),i=k("sorted",e,t,a),o=n.topk(r,s,i);return[o.values,o.indices]}case"UpperBound":{let r=k("sortedSequence",e,t,a),s=k("values",e,t,a);return[n.upperBound(r,s)]}case"Unique":{let r=k("x",e,t,a),s=n.unique(r);return[s.values,s.indices]}case"UniqueV2":{let r=k("x",e,t,a),s=k("axis",e,t,a),i=n.unique(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CF=(e,t,a,n=Jt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=k("default",e,t,a);return[fa(e.name,t,a)||r];case"Placeholder":return[fa(e.name,t,a)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let d=k("x",e,t,a);return[Yn(d)]}case"IdentityN":return k("x",e,t,a).map(d=>Yn(d));case"Snapshot":let s=k("x",e,t,a);return[Yn(s)];case"Shape":return[n.tensor1d(k("x",e,t,a).shape,"int32")];case"ShapeN":return k("x",e,t,a).map(d=>n.tensor1d(d.shape));case"Size":return[n.scalar(k("x",e,t,a).size,"int32")];case"Rank":return[n.scalar(k("x",e,t,a).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=k("x",e,t,a),o=k("data",e,t,a),l=k("message",e,t,a),u=k("summarize",e,t,a);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let d=0;d<o.length;d++)console.log(Array.prototype.slice.call(o[d].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},EF=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=$e(0),this.tensorMap=new Map,zn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return $e(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),De(()=>{let n=gn(t),r=a.length,s=n.length;v.assert(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let i=0;i<r;i++){let o=a[i],l=n[i];zn(l),this.tensorMap.set(o,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return De(()=>{let n=[];for(let r=0;r<a.length;r++){let s=a[r],i=this.findWithDefault(s,t);n.push(i)}return en(n)})}findWithDefault(e,t){let a=this.tensorMap.get(e);return a??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},RF=async(e,t,a,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=n.getHashTableHandleByName(e.name);if(r!=null)return[r];{let s=k("keyDType",e,t,a),i=k("valueDType",e,t,a),o=new EF(s,i);return n.addHashTable(e.name,o),[o.handle]}}case"LookupTableImport":case"LookupTableImportV2":{let r=k("tableHandle",e,t,a,n),s=k("keys",e,t,a),i=k("values",e,t,a);return[await n.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=k("tableHandle",e,t,a,n),s=k("keys",e,t,a),i=k("defaultValue",e,t,a);return[await n.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=k("tableHandle",e,t,a,n);return[n.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},_F=(e,t,a,n=Jt)=>{switch(e.op){case"ResizeBilinear":{let r=k("images",e,t,a),s=k("size",e,t,a),i=k("alignCorners",e,t,a),o=k("halfPixelCenters",e,t,a);return[n.image.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let r=k("images",e,t,a),s=k("size",e,t,a),i=k("alignCorners",e,t,a),o=k("halfPixelCenters",e,t,a);return[n.image.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{let r=k("image",e,t,a),s=k("boxes",e,t,a),i=k("boxInd",e,t,a),o=k("cropSize",e,t,a),l=k("method",e,t,a),u=k("extrapolationValue",e,t,a);return[n.image.cropAndResize(r,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let r=k("images",e,t,a),s=k("transforms",e,t,a),i=k("outputShape",e,t,a),o=k("fillValue",e,t,a),l=k("interpolation",e,t,a),u=k("fillMode",e,t,a);return[n.image.transform(r,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$F=(e,t,a,n=Jt)=>{switch(e.op){case"Equal":return[n.equal(k("a",e,t,a),k("b",e,t,a))];case"NotEqual":return[n.notEqual(k("a",e,t,a),k("b",e,t,a))];case"Greater":return[n.greater(k("a",e,t,a),k("b",e,t,a))];case"GreaterEqual":return[n.greaterEqual(k("a",e,t,a),k("b",e,t,a))];case"Less":return[n.less(k("a",e,t,a),k("b",e,t,a))];case"LessEqual":return[n.lessEqual(k("a",e,t,a),k("b",e,t,a))];case"LogicalAnd":return[n.logicalAnd(k("a",e,t,a),k("b",e,t,a))];case"LogicalNot":return[n.logicalNot(k("a",e,t,a))];case"LogicalOr":return[n.logicalOr(k("a",e,t,a),k("b",e,t,a))];case"Select":case"SelectV2":return[n.where(k("condition",e,t,a),k("a",e,t,a),k("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MF=(e,t,a,n=Jt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(k("a",e,t,a),k("b",e,t,a),k("transposeA",e,t,a),k("transposeB",e,t,a))];case"Einsum":return[n.einsum(k("equation",e,t,a),...k("tensors",e,t,a))];case"Transpose":return[n.transpose(k("x",e,t,a),k("perm",e,t,a))];case"_FusedMatMul":let[r,s]=k("fusedOps",e,t,a),i=r==="biasadd",o=s==="prelu",l=k("numArgs",e,t,a),u=k("leakyreluAlpha",e,t,a);if(i){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,c]=k("args",e,t,a);return[n.fused.matMul({a:k("a",e,t,a),b:k("b",e,t,a),transposeA:k("transposeA",e,t,a),transposeB:k("transposeB",e,t,a),bias:d,activation:s,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},FF=(e,t,a,n=Jt)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(k("x",e,t,a),k("axis",e,t,a),k("keepDims",e,t,a))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(k("x",e,t,a),k("mean",e,t,a),k("variance",e,t,a),k("offset",e,t,a),k("scale",e,t,a),k("epsilon",e,t,a))];case"FusedBatchNormV3":return[n.batchNorm(k("x",e,t,a),k("mean",e,t,a),k("variance",e,t,a),k("offset",e,t,a),k("scale",e,t,a),k("epsilon",e,t,a))];case"LRN":return[n.localResponseNormalization(k("x",e,t,a),k("radius",e,t,a),k("bias",e,t,a),k("alpha",e,t,a),k("beta",e,t,a))];case"Softmax":return[n.softmax(k("x",e,t,a))];case"LogSoftmax":return[n.logSoftmax(k("x",e,t,a))];case"SparseToDense":return[n.sparseToDense(k("sparseIndices",e,t,a),k("outputShape",e,t,a),k("sparseValues",e,t,a),k("defaultValue",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},OF=(e,t,a,n=Jt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.max(k("x",e,t,a),o,l)]}case"Mean":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.mean(k("x",e,t,a),o,l)]}case"Min":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.min(k("x",e,t,a),o,l)]}case"Sum":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.sum(k("x",e,t,a),o,l)]}case"All":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.all(k("x",e,t,a),o,l)]}case"Any":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.any(k("x",e,t,a),o,l)]}case"ArgMax":{let o=k("axis",e,t,a);return[n.argMax(k("x",e,t,a),o)]}case"ArgMin":{let o=k("axis",e,t,a);return[n.argMin(k("x",e,t,a),o)]}case"Prod":{let o=k("axis",e,t,a),l=k("keepDims",e,t,a);return[n.prod(k("x",e,t,a),o,l)]}case"Cumprod":{let o=k("axis",e,t,a),l=k("exclusive",e,t,a),u=k("reverse",e,t,a);return[n.cumprod(k("x",e,t,a),o,l,u)]}case"Cumsum":{let o=k("axis",e,t,a),l=k("exclusive",e,t,a),u=k("reverse",e,t,a);return[n.cumsum(k("x",e,t,a),o,l,u)]}case"Bincount":let r=k("x",e,t,a),s=k("weights",e,t,a),i=k("size",e,t,a);return[n.bincount(r,s,i)];case"DenseBincount":{let o=k("x",e,t,a),l=k("weights",e,t,a),u=k("size",e,t,a),d=k("binaryOutput",e,t,a);return[n.denseBincount(o,l,u,d)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PF=(e,t,a,n=Jt)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=k("n",e,t,a),s=k("axis",e,t,a),i=k("tensors",e,t,a);return i=i.slice(0,r),[n.concat(i,s)]}case"Gather":{let r=k("x",e,t,a),s=k("indices",e,t,a);return[n.gather(r,n.cast(s,"int32"),0)]}case"GatherV2":{let r=k("axis",e,t,a),s=k("batchDims",e,t,a),i=k("x",e,t,a),o=k("indices",e,t,a);return[n.gather(i,n.cast(o,"int32"),r,s)]}case"Reverse":{let r=k("dims",e,t,a),s=[];for(let o=0;o<r.length;o++)r[o]&&s.push(o);let i=k("x",e,t,a);return[n.reverse(i,s)]}case"ReverseV2":{let r=k("axis",e,t,a),s=k("x",e,t,a);return[n.reverse(s,r)]}case"Slice":{let r=k("begin",e,t,a),s=k("size",e,t,a);return[n.slice(k("x",e,t,a),r,s)]}case"StridedSlice":{let r=k("begin",e,t,a),s=k("end",e,t,a),i=k("strides",e,t,a),o=k("beginMask",e,t,a),l=k("endMask",e,t,a),u=k("ellipsisMask",e,t,a),d=k("newAxisMask",e,t,a),c=k("shrinkAxisMask",e,t,a),p=k("x",e,t,a);return[n.stridedSlice(p,r,s,i,o,l,u,d,c)]}case"Pack":return De(()=>{let r=k("axis",e,t,a),s=k("tensors",e,t,a),i=s[0].shape,o=n.squeeze(s[0]).shape,l=s.map(u=>{let d=v.arraysEqual(u.shape,i);if(!d&&!v.arraysEqual(n.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return d?u:n.reshape(u,i)});return[n.stack(l,r)]});case"Unpack":{let r=k("axis",e,t,a),s=k("tensor",e,t,a);return n.unstack(s,r)}case"Tile":{let r=k("reps",e,t,a);return[n.tile(k("x",e,t,a),r)]}case"Split":case"SplitV":{let r=k("axis",e,t,a),s=k("numOrSizeSplits",e,t,a),i=k("x",e,t,a);return n.split(i,s,r)}case"ScatterNd":{let r=k("indices",e,t,a),s=k("values",e,t,a),i=k("shape",e,t,a);return[n.scatterND(r,s,i)]}case"GatherNd":{let r=k("x",e,t,a),s=k("indices",e,t,a);return[n.gatherND(r,s)]}case"SparseToDense":{let r=k("sparseIndices",e,t,a),s=k("outputShape",e,t,a),i=k("sparseValues",e,t,a),o=k("defaultValue",e,t,a);return[n.sparseToDense(r,i,s,i.dtype===o.dtype?o:n.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DF=(e,t,a,n=Jt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(k("indices",e,t,a),k("values",e,t,a),k("denseShape",e,t,a),k("defaultValue",e,t,a));return[r,s,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=n.sparse.sparseReshape(k("inputIndices",e,t,a),k("inputShape",e,t,a),k("newShape",e,t,a));return[r,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(k("data",e,t,a),k("indices",e,t,a),k("segmentIds",e,t,a))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(k("data",e,t,a),k("indices",e,t,a),k("segmentIds",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},zF=(e,t,a,n=Jt)=>{switch(e.op){case"FFT":return[n.fft(k("x",e,t,a))];case"IFFT":return[n.ifft(k("x",e,t,a))];case"RFFT":return[n.rfft(k("x",e,t,a))];case"IRFFT":return[n.irfft(k("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},LF=(e,t,a,n=Jt)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=n.string.stringNGrams(k("data",e,t,a),k("dataSplits",e,t,a),k("separator",e,t,a),k("nGramWidths",e,t,a),k("leftPad",e,t,a),k("rightPad",e,t,a),k("padWidth",e,t,a),k("preserveShortSequences",e,t,a));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:i}=n.string.stringSplit(k("input",e,t,a),k("delimiter",e,t,a),k("skipEmpty",e,t,a));return[r,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(k("input",e,t,a),k("numBuckets",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},WF=(e,t,a,n=Jt)=>{switch(e.op){case"Cast":return[n.cast(k("x",e,t,a),k("dtype",e,t,a))];case"ExpandDims":{let r=k("axis",e,t,a);return[n.expandDims(k("x",e,t,a),r)]}case"Squeeze":{let r=k("axis",e,t,a);return[n.squeeze(k("x",e,t,a),r)]}case"Reshape":return[n.reshape(k("x",e,t,a),k("shape",e,t,a))];case"MirrorPad":return[n.mirrorPad(k("x",e,t,a),k("padding",e,t,a),k("mode",e,t,a))];case"PadV2":case"Pad":return[n.pad(k("x",e,t,a),k("padding",e,t,a),k("constantValue",e,t,a))];case"SpaceToBatchND":{let r=k("blockShape",e,t,a),s=k("paddings",e,t,a);return[n.spaceToBatchND(k("x",e,t,a),r,s)]}case"BatchToSpaceND":{let r=k("blockShape",e,t,a),s=k("crops",e,t,a);return[n.batchToSpaceND(k("x",e,t,a),r,s)]}case"DepthToSpace":{let r=k("blockSize",e,t,a),s=k("dataFormat",e,t,a).toUpperCase();return[n.depthToSpace(k("x",e,t,a),r,s)]}case"BroadcastTo":return[n.broadcastTo(k("x",e,t,a),k("shape",e,t,a))];case"BroadcastArgs":return[n.broadcastArgs(k("s0",e,t,a),k("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function HA(e,t,a,n,r=De){let s=((i,o,l)=>{switch(i.category){case"arithmetic":return r(()=>gF(i,o,l));case"basic_math":return r(()=>AF(i,o,l));case"control":return kF(i,o,l);case"convolution":return r(()=>IF(i,o,l));case"creation":return r(()=>SF(i,o,l));case"dynamic":return TF(i,o,l);case"evaluation":return r(()=>NF(i,o,l));case"image":return r(()=>_F(i,o,l));case"graph":return r(()=>CF(i,o,l));case"logical":return r(()=>$F(i,o,l));case"matrices":return r(()=>MF(i,o,l));case"normalization":return r(()=>FF(i,o,l));case"reduction":return r(()=>OF(i,o,l));case"slice_join":return r(()=>PF(i,o,l));case"sparse":return r(()=>DF(i,o,l));case"spectral":return r(()=>zF(i,o,l));case"string":return r(()=>LF(i,o,l));case"transformation":return r(()=>WF(i,o,l));case"hash_table":return RF(i,o,l,n);case"custom":let u=zv(i.op);if(u&&u.customExecutor)return u.customExecutor(new mF(i,o,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,a);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var jA=class{constructor(e={},t={},a={},n={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=a,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let a=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(a))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function qA(e,t,a,n){let r=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map(p=>Fa(p)[0]),d=[];n!=null&&(d=n.map(p=>Fa(p.name)[0]));let c=[...t];for(;c.length>0;){let p=c.pop();if((i7(p)||HF(p)||jF(p))&&i==null&&(i=p,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(p.name),a[p.name]==null&&u.indexOf(p.name)===-1&&d.indexOf(p.name)===-1){if(p.inputs.length===0){s.push(p.name);continue}p.inputs.forEach(h=>{l.has(h.name)||(l.add(h.name),c.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function BF(e,t,a){let{usedNodes:n,inputs:r}=a,s=[],i=Object.keys(r).map(d=>Fa(d)[0]).map(d=>e.nodes[d]),o=e.initNodes;i.forEach(d=>{n.has(d.name)&&s.push(d)}),e.weights.forEach(d=>{n.has(d.name)&&s.push(d)}),o?.forEach(d=>{n.has(d.name)&&s.push(d)});let l=new Set,u=[];for(;s.length>0;){let d=s.pop();l.add(d.name),t[d.name]||u.push(d),d.children.forEach(c=>{!l.has(c.name)&&n.has(c.name)&&c.inputs.every(p=>l.has(p.name))&&s.push(c)})}return u}var VF=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],UF=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],GF=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function i7(e){return VF.indexOf(e.op)>=0}function HF(e){return UF.indexOf(e.op)>=0}function jF(e){return GF.indexOf(e.op)>=0}var r2=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(a=>{this._functionExecutorMap[a]=new r2(e.functions[a],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(a=>e[a].map(n=>n.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let a=e.map(r=>r.name).sort(),n=t.map(r=>r.name).sort();return a.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}compile(e,t){let a=qA(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:r,syncInputs:s}=a;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let i=t.map(l=>l.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${n}]`)}return BF(this.graph,this.weightMap,a)}execute(e,t){e=this.mapInputs(e);let a=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=a.map(d=>this.graph.nodes[Fa(d)[0]]),r=t.map(d=>Fa(d)[0]),s=r.map(d=>this.graph.nodes[d]);this.resetIntermediateTensors(),s.length===0&&(s=this._outputs);let i=this.getCompilationKey(n,s),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return De(()=>{let d=new jA(this.weightMap,l,u,this.functionExecutorMap),c=Object.assign({},this.weightMap);Object.keys(e).forEach(f=>{let[m,g]=Fa(f),A=[];A[g]=e[f],c[m]=A});let p=this.getFrozenTensorIds(c),h={};for(let f=0;f<o.length;f++){let m=o[f];if(!c[m.name]){let g=HA(m,c,d,this._resourceManager);if(v.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);c[m.name]=g,this.checkTensorForDisposal(m.name,m,c,d,p,r,h)}}return this.parent==null&&d.dispose(p),t.map(f=>fa(f,c,d))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(a=>e[a]).map(a=>a.map(n=>n.id)));return new Set(t)}checkTensorForDisposal(e,t,a,n,r,s,i){t.category==="control"||s.indexOf(e)!==-1||(a[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let l=XM(o.name,a,n);l?.forEach(u=>{if(u&&!u.kept&&!r.has(u.id)){let d=i[u.id];if(d===1){if(!this.keepTensorForDebug)u.dispose();else{let[c,p]=Dn(t.name,n);this.intermediateTensors[c]?this.intermediateTensors[c][p]=u:(this.intermediateTensors[c]=[],this.intermediateTensors[c][p]=u)}delete i[u.id]}else d!=null&&i[u.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(t=>{t&&!t.kept&&!t.isDisposed&&!this.keepIds.has(t.id)&&t.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,a=!1,n={},r={}){a||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();let s=new jA(this.weightMap,n,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,a);let i=t.map(u=>fa(u,this.tensorsMap,s)),o=i.map(u=>u.id),l=Object.keys(e).map(u=>e[u].id);return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,a){let n=e.reduce((r,s,i)=>(r[this.inputs[i].name]=s,r),{});return this._executeAsync(n,this.outputNodes,!0,t,a)}async executeWithControlFlow(e,t,a,n){let r=Object.keys(e),s=r.map(y=>this.graph.nodes[Fa(y)[0]]),i=a.map(y=>Fa(y)[0]),o=i.map(y=>this.graph.nodes[y]);o.length===0&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:c}=qA(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(y=>{let[x,b]=Fa(y),w=[];w[b]=e[y],h[x]=w});let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let y=this.processStack(s,p,t,h,g,m,i,f,l);await Promise.all(y)}d==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=o.filter(y=>!i7(y)&&!fa(y.name,h,t)).map(y=>y.name);if(A.length>0){let y="";throw d!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${y}`)}return h}processStack(e,t,a,n,r,s,i,o,l){let u=[];for(;t.length>0;){let d=t.pop();a.currentContext=d.contexts;let c="";if(d.node.op==="Enter"&&k("isConstant",d.node,n,a)&&([c]=Dn(d.node.name,a)),n[d.node.name]==null){let p=HA(d.node,n,a,this._resourceManager);c||([c]=Dn(d.node.name,a));let h=a.currentContext;v.isPromise(p)?u.push(p.then(f=>(n[c]=f,a.currentContext=h,this.checkTensorForDisposal(c,d.node,n,a,s,i,o),this.processChildNodes(d.node,t,a,n,r,l),f))):(n[c]=p,this.checkTensorForDisposal(c,d.node,n,a,s,i,o),this.processChildNodes(d.node,t,a,n,r,l))}else this.processChildNodes(d.node,t,a,n,r,l)}return u}processChildNodes(e,t,a,n,r,s){e.children.forEach(i=>{let[o]=Dn(i.name,a);r[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!fa(l,n,a))&&(r[o]=!0,t.push({contexts:a.currentContext,node:i})):i.inputNames.every(l=>!!fa(l,n,a))&&(r[o]=!0,t.push({contexts:a.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let a=e[t],[n]=Fa(t),r=this.graph.nodes[n];if(r.attrParams.shape&&r.attrParams.shape.value){let s=r.attrParams.shape.value,i=s.length===a.shape.length&&a.shape.every((o,l)=>s[l]===-1||s[l]===o);v.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${s}], but was [${a.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&v.assert(a.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${a.dtype}`)})}mapInputs(e){let t={};for(let a in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[a]!=null){let n=this._signature.inputs[a];t[n.name]=e[a]}else t[a]=e[a];return t}checkInputs(e){let t=Object.keys(e).filter(a=>{let[n]=Fa(a);return this.graph.nodes[n]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[a]=Fa(t);if(!this.graph.nodes[a])throw new Error(`The output '${t}' is not found in the graph`)})}},qF=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},XF="?tfjs-format=file",KF="model.json",Dh=class{constructor(e,t={},a=er){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=a,t==null&&(this.loadOptions={}),this.resourceManager=new qF}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=a,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new r2(BA.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=BA.Instance.transformGraph(e.modelInitializer);this.initializer=new r2(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let a=this.io.getSaveHandlers(e);if(a.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new Error(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let a=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let n=a instanceof ft?[a]:a,r={};return n.forEach((s,i)=>r[this.structuredOutputKeys[i]]=s),r}return a}normalizeInputs(e){if(!(e instanceof ft)&&!Array.isArray(e)){if(this.signature!=null&&this.signature.inputs!=null)for(let n in this.signature.inputs){let r=this.signature.inputs[n];r.resourceId!=null&&(e[n]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let t=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+t!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-t} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((n,r)=>{let s=this.signature?this.signature.inputs[r]:null;return s!=null&&s.resourceId!=null?n[r]=this.resourceIdToCapturedInput[s.resourceId]:n[r]=e[a++],n},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=Object.keys(this.initializerSignature.outputs);for(let a=0;a<t.length;a++){let n=t[a],r=this.initializerSignature.outputs[n];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=this.executor.execute(e,t);return a.length>1?a:a[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=await this.executor.executeAsync(e,t);return a.length>1?a:a[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,a)=>(t[a]=[e[a]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&le(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function o7(e,t={},a=er){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=YF(e));let n=new Dh(e,t,a);return await n.load(),n}function ZF(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=er.getWeightSpecs(n.weightsManifest),i=er.getModelArtifactsForJSONSync(n,s,r);t=er.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=er.fromMemorySync(e);else throw new Error("Unknown model format");let a=new Dh(t);return a.load(),a}function YF(e){return e.endsWith("/")||(e=e+"/"),`${e}${KF}${XF}`}var JF="4.0.0";function me(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var QF=An.whereImpl,zh=class extends ol{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new od(this,Dt())}nextDataId(){return zh.nextDataId++}write(e,t,a){this.firstUse&&(this.firstUse=!1,B().get("IS_NODE")&&T.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:a,refCount:1}),n}makeTensorInfo(e,t,a){let n;if(t==="string"&&a!=null&&a.length>0&&v.isString(a[0])){let r=a.map(s=>v.encodeString(s));n=this.write(r,e,t)}else n=this.write(a,e,t);return{dataId:n,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,a,n,r){this.data.set(e,{values:t,dtype:n,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:a}=this.data.get(e);if(t==="complex64"){let n=this.readSync(a.real.dataId),r=this.readSync(a.imag.dataId);return T.mergeRealAndImagArrays(n,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let a=t.map(n=>v.decodeString(n));return xe(e.shape,e.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}makeOutput(e,t,a){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(t,a,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:a}=this.data.get(e);a!=null&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){me([e],"where");let t=this.readSync(e.dataId);return QF(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};zh.nextDataId=0;var r1={};Le(r1,{addImpl:()=>d7,bincountImpl:()=>i1,bincountReduceImpl:()=>p7,castImpl:()=>u7,ceilImpl:()=>c7,concatImpl:()=>o1,equalImpl:()=>h7,expImpl:()=>m7,expm1Impl:()=>A7,floorImpl:()=>y7,gatherNdImpl:()=>x7,gatherV2Impl:()=>b7,greaterEqualImpl:()=>w7,greaterImpl:()=>v7,lessEqualImpl:()=>I7,lessImpl:()=>k7,linSpaceImpl:()=>S7,logImpl:()=>T7,maxImpl:()=>N7,maximumImpl:()=>C7,minimumImpl:()=>E7,multiplyImpl:()=>l1,negImpl:()=>R7,notEqualImpl:()=>_7,prodImpl:()=>$7,raggedGatherImpl:()=>M7,raggedRangeImpl:()=>F7,raggedTensorToTensorImpl:()=>O7,rangeImpl:()=>d1,rsqrtImpl:()=>P7,scatterImpl:()=>Po,sigmoidImpl:()=>qO,simpleAbsImpl:()=>l7,sliceImpl:()=>Rc,sparseFillEmptyRowsImpl:()=>z7,sparseReshapeImpl:()=>L7,sparseSegmentReductionImpl:()=>p1,sqrtImpl:()=>ZO,squaredDifferenceImpl:()=>W7,stridedSliceImpl:()=>B7,stringNGramsImpl:()=>c1,stringSplitImpl:()=>h1,stringToHashBucketFastImpl:()=>f1,subImpl:()=>V7,tileImpl:()=>U7,topKImpl:()=>H7,transposeImpl:()=>u1,uniqueImpl:()=>j7});function l7(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}var eO=e=>{let{x:t}=e.inputs,a=e.backend;me(t,"abs");let n=new Float32Array(v.sizeFromShape(t.shape)),r=a.data.get(t.dataId).values;return n=l7(r),a.makeOutput(n,t.shape,t.dtype)},tO={kernelName:ul,backendName:"cpu",kernelFunc:eO};function Ft(e){return(t,a,n,r,s)=>{let i=T.assertAndGetBroadcastShape(t,a),o=i.length,l=v.computeStrides(i),u=v.sizeFromShape(i),d=v.getTypedArrayFromDType(s,u),c=t.length,p=a.length,h=v.computeStrides(t),f=v.computeStrides(a),m=T.getBroadcastDims(t,i),g=T.getBroadcastDims(a,i);if(m.length+g.length===0)for(let A=0;A<d.length;++A)d[A]=e(n[A%n.length],r[A%r.length]);else for(let A=0;A<d.length;++A){let y=v.indexToLoc(A,o,l),x=y.slice(-c);m.forEach(N=>x[N]=0);let b=v.locToIndex(x,c,h),w=y.slice(-p);g.forEach(N=>w[N]=0);let S=v.locToIndex(w,p,f);d[A]=e(n[b],r[S])}return[d,i]}}function za(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,o=a.makeTensorInfo(n.shape,"complex64"),l=a.data.get(o.dataId);return l.complexTensorInfos={real:a.makeTensorInfo(n.shape,"float32",s),imag:a.makeTensorInfo(r.shape,"float32",i)},o}var aO={kernelName:gd,backendName:"cpu",kernelFunc:za};function Ec(e,t,a="float32"){if(a==="complex64"){let r=Ec(e,t,"float32"),s=Ec(e,t,"float32");return za({inputs:{real:r,imag:s},backend:e})}let n=v.makeZerosTypedArray(v.sizeFromShape(t),a);return e.makeTensorInfo(t,a,n)}function Hn(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var nO={kernelName:Ei,backendName:"cpu",kernelFunc:Hn};function Qs(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.real,s=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,s)}var rO={kernelName:Id,backendName:"cpu",kernelFunc:Qs};function u7(e,t,a,n){if(n==="int32"){let r=Int32Array.from(e);return[t,"int32",r]}if(n==="bool"){let r=v.toTypedArray([0],a),[s,i]=Ft((o,l)=>o!==l?1:0)(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${a} to ${n}`)}function Gr(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Hn({inputs:{x:r},backend:a});let d=Ec(a,r.shape,r.dtype),c=Gr({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),p=za({inputs:{real:c,imag:d},backend:a});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),p}if(r.dtype==="complex64"){let d=Qs({inputs:{input:r},backend:a}),c=Gr({inputs:{x:d},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(d),c}if(!v.hasEncodingLoss(r.dtype,s)){let d=Hn({inputs:{x:r},backend:a});return{dataId:d.dataId,shape:d.shape,dtype:s}}let i=a.data.get(r.dataId).values,[o,l,u]=u7(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,l,u)}var sO={kernelName:ci,backendName:"cpu",kernelFunc:Gr};function Ht(e,t,a,n){return a==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;me([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,c=i.dtype==="string"?T.fromUint8ToStringArray(u):u,p=i.dtype==="string"?T.fromUint8ToStringArray(d):d,h=n||i.dtype,[f,m]=t(i.shape,o.shape,c,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=Gr({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),c=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,h=l.data.get(c.dataId).values,f=l.data.get(p.dataId).values,m=Gr({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),A=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,x=l.data.get(A.dataId).values,b=l.data.get(y.dataId).values,[w,S,N]=a(i.shape,o.shape,h,f,x,b),C=l.makeTensorInfo(N,"float32",w),M=l.makeTensorInfo(N,"float32",S),$=za({inputs:{real:C,imag:M},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(M),$}else{let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,c=n||i.dtype,[p,h]=t(i.shape,o.shape,u,d,c);return l.makeTensorInfo(h,c,p)}}}function s1(e){return(t,a,n,r,s,i)=>{let o=T.assertAndGetBroadcastShape(t,a),l=v.sizeFromShape(o),u=o.length,d=v.computeStrides(o),c=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=T.getBroadcastDims(t,o),f=T.getBroadcastDims(a,o),m=T.mergeRealAndImagArrays(n,r),g=T.mergeRealAndImagArrays(s,i),A=t.length,y=v.computeStrides(t),x=a.length,b=v.computeStrides(a);if(h.length+f.length===0)for(let w=0;w<c.length;w++){let S=w%m.length,N=w%g.length,C=e(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);c[w]=C.real,p[w]=C.imag}else for(let w=0;w<c.length;w++){let S=v.indexToLoc(w,u,d),N=S.slice(-A);h.forEach(I=>N[I]=0);let C=v.locToIndex(N,A,y),M=S.slice(-x);f.forEach(I=>M[I]=0);let $=v.locToIndex(M,x,b),E=e(m[C*2],m[C*2+1],g[$*2],g[$*2+1]);c[w]=E.real,p[w]=E.imag}return[c,p,o]}}var d7=Ft((e,t)=>e+t),iO=s1((e,t,a,n)=>({real:e+a,imag:t+n})),el=Ht(ur,d7,iO),oO={kernelName:ur,backendName:"cpu",kernelFunc:el};function i1(e,t,a,n,r){let s=v.sizeFromShape(n),i=v.makeZerosTypedArray(r,a);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function p7(e,t,a,n=!1){let r=e.shape[0],s=e.shape[1],i=xe([r,a],t.dtype);for(let o=0;o<r;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=a||(n?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}function ys(e){return(t,a,n)=>{let r=v.getTypedArrayFromDType(a,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],n);return r}}function nt(e,t,a){return({inputs:n,attrs:r,backend:s})=>{let{x:i}=n;if(me(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=v.sizeFromShape(i.shape),d=a||i.dtype,c=v.getArrayFromDType(d,u);for(let p=0;p<u;++p)c[p]=t(l[p],r);return o.makeTensorInfo(i.shape,d,c)}}function Ul(e,t,a){return({inputs:n,attrs:r,backend:s})=>{let{x:i}=n;if(me(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=a||i.dtype,d=t(l,u,r);return o.makeTensorInfo(i.shape,u,d)}}var c7=ys(e=>Math.ceil(e)),lO=Ul(Xr,c7),uO={kernelName:Xr,backendName:"cpu",kernelFunc:lO};function o1(e,t,a,n){let r=v.getArrayFromDType(a,v.sizeFromShape(t));if(n&&a!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=a==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let d=u*t[1]+s;for(let c=0;c<i.shape[1];++c)r[d+c]=o[l++]}s+=i.shape[1]})}return r}var h7=Ft((e,t)=>e===t?1:0),f7=Ht(Zr,h7,null,"bool"),dO={kernelName:Zr,backendName:"cpu",kernelFunc:f7},m7=ys(e=>Math.exp(e)),g7=Ul(Yr,m7,"float32"),pO={kernelName:Yr,backendName:"cpu",kernelFunc:g7},A7=ys(e=>Math.expm1(e)),cO=Ul(Ii,A7),hO={kernelName:Ii,backendName:"cpu",kernelFunc:cO},y7=ys(e=>Math.floor(e)),fO=Ul(Jr,y7),mO={kernelName:Jr,backendName:"cpu",kernelFunc:fO};function x7(e,t,a,n,r,s,i,o,l){let u=xe([n,s],a);for(let d=0;d<n;d++){let c=[],p=0;for(let h=0;h<r;h++){let f=e[d*r+h];p+=f*i[h],c.push(f)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${c} does not index into ${o}`);for(let h=0;h<s;h++)u.values[d*s+h]=t.get(...t.indexToLoc(p*s+h))}return u}function b7(e,t,a){let n=xe(a,e.dtype);for(let r=0;r<n.size;++r){let s=n.indexToLoc(r).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(n.values[r]=e.values[u])}return n}var v7=Ft((e,t)=>e>t?1:0),gO=Ht(Qr,v7,null,"bool"),AO={kernelName:Qr,backendName:"cpu",kernelFunc:gO},w7=Ft((e,t)=>e>=t?1:0),yO=Ht(es,w7,null,"bool"),xO={kernelName:es,backendName:"cpu",kernelFunc:yO},k7=Ft((e,t)=>e<t?1:0),bO=Ht(ts,k7,null,"bool"),vO={kernelName:ts,backendName:"cpu",kernelFunc:bO},I7=Ft((e,t)=>e<=t?1:0),wO=Ht(as,I7,null,"bool"),kO={kernelName:as,backendName:"cpu",kernelFunc:wO};function S7(e,t,a){let n=(t-e)/(a-1),r=v.makeZerosTypedArray(a,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}var T7=ys(e=>Math.log(e)),IO=Ul(ns,T7),SO={kernelName:ns,backendName:"cpu",kernelFunc:IO};function N7(e,t,a,n){let r=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}r[s]=o}return r}var C7=Ft((e,t)=>Math.max(e,t)),TO=Ht(rs,C7),NO={kernelName:rs,backendName:"cpu",kernelFunc:TO},E7=Ft((e,t)=>Math.min(e,t)),CO=Ht(ss,E7),EO={kernelName:ss,backendName:"cpu",kernelFunc:CO},l1=Ft((e,t)=>e*t),RO=s1((e,t,a,n)=>({real:e*a-t*n,imag:e*n+t*a})),Lh=Ht(is,l1,RO),_O={kernelName:is,backendName:"cpu",kernelFunc:Lh};function R7(e,t,a){let n=v.createScalarValue(-1,a);return l1([],t,n,e,a)}function $O(e){let{inputs:t,backend:a}=e,{x:n}=t;me(n,"neg");let r=a.data.get(n.dataId).values,[s,i]=R7(r,n.shape,n.dtype);return a.makeTensorInfo(i,n.dtype,s)}var MO={kernelName:bl,backendName:"cpu",kernelFunc:$O},_7=Ft((e,t)=>e!==t?1:0),FO=Ht(os,_7,null,"bool"),OO={kernelName:os,backendName:"cpu",kernelFunc:FO};function u1(e,t,a,n,r){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),l=v.computeStrides(r),u=v.getTypedArrayFromDType(a,v.sizeFromShape(r));for(let d=0;d<i;++d){let c=v.indexToLoc(d,s,o),p=new Array(c.length);for(let f=0;f<p.length;f++)p[f]=c[n[f]];let h=v.locToIndex(p,s,l);u[h]=e[d]}return u}function Ra(e){let{inputs:t,attrs:a,backend:n}=e,{x:r}=t,{perm:s}=a;me(r,"transpose");let i=r.shape.length,o=new Array(i);for(let d=0;d<o.length;d++)o[d]=r.shape[s[d]];let l=n.data.get(r.dataId).values,u=u1(l,r.shape,r.dtype,s,o);return{dataId:n.write(u,o,r.dtype),shape:o,dtype:r.dtype}}var PO={kernelName:nr,backendName:"cpu",kernelFunc:Ra};function $7(e,t,a,n){let[r,s]=T.computeOutAndReduceShapes(e,n),i=Yt(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(r),i),l=v.sizeFromShape(s);for(let u=0;u<o.length;++u){let d=u*l,c=1;for(let p=0;p<l;++p)c*=a[d+p];o[u]=c}return{outVals:o,outShape:r,outDtype:i}}function DO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;me(r,"prod");let o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=T.getAxesPermutation(l,o),d=l,c=r,p=[];u!=null&&(c=Ra({inputs:{x:r},backend:a,attrs:{perm:u}}),p.push(c),d=T.getInnerMostAxes(d.length,o));let h=a.data.get(c.dataId).values,{outVals:f,outShape:m,outDtype:g}=$7(c.shape,c.dtype,h,d),A=m;return i&&(A=T.expandShapeToKeepDim(m,l)),p.forEach(y=>a.disposeIntermediateTensorInfo(y)),a.makeTensorInfo(A,g,f)}var zO={kernelName:Ui,backendName:"cpu",kernelFunc:DO};function LO(e,t,a){e.forEach((n,r)=>{if(n<0||n>=a){let s=v.indexToLoc(r,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${a})`)}})}function WO(e,t){for(let a=0;a<e.length;++a){let n=e[a],r=a===e.length-1?t:e[a+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>r)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function BO(e,t,a,n){let r=[],s=0,i=t.length-1+a.length,o=new Array(i).fill(null).map(()=>[0]);WO(a,n);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let d=t[u+1];for(let c=1;c<l+1;++c)o[u].push(c*d)}for(let u=0;u<e.length;++u){let d=e[u],c=e[u]+1;for(let p=0;p<a.length;++p){let h=a[p],f=p+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-h[d];for(let A=d;A<c;++A)o[f].push(h[A+1]+g)}d=h[d],c=h[c]}c!==d&&(r.push([d,c]),s+=c-d)}return{outSplits:o,valueSlices:r,numValues:s}}function VO(e){let t=[];for(let a=0;a<e.length;++a){let n=e[a].length,r=v.getArrayFromDType("int32",n);t.push(r),e[a].forEach((s,i)=>r[i]=s)}return t}function XA(e,t){let a=e.slice(0,t);for(;a.length<t;)a.push(1);for(let n=t;n<e.length;n++)a[t-1]*=e[n];return a}function UO(e,t,a,n,r,s){let i=XA(t,2)[1],o=XA(s,2)[1],l=0;for(let u of a)for(let d=u[0];d<u[1];++d){for(let c=0;c<n;++c)r[l*o+c]=e[d*i+c];++l}}function GO(e,t,a,n,r){let s=t.slice();s[0]=r;let i=v.getArrayFromDType(a,v.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return UO(e,t,n,l,i,s),[i,s]}function M7(e,t,a,n,r,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(LO(s,i,l),n.length===0)throw new Error("params.rank must be nonzero");let u=n[0],{outSplits:d,valueSlices:c,numValues:p}=BO(s,i,e,u),h=VO(d),f=GO(a,n,r,c,p);return[h,f[0],f[1]]}var KA=2147483647;function F7(e,t,a,n,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,l=r.length===0,u=i.length===0,d=[];o||d.push(t[0]),l||d.push(r[0]),u||d.push(i[0]);for(let g=1;g<d.length;++g)if(d[g]!==d[g-1])throw new Error("starts, limits, and deltas must have the same shape");let c=d.length===0?1:d[0],p=v.getArrayFromDType("int32",c+1);p[0]=0;for(let g=0;g<c;++g){let A=o?e[0]:e[g],y=l?n[0]:n[g],x=u?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let b;if(x>0&&y<A||x<0&&y>A)b=0;else if(b=Math.ceil(Math.abs((y-A)/x)),b>KA)throw new Error(`Requires ((limit - start) / delta) <= ${KA}`);p[g+1]=p[g]+b}let h=p[c],f=v.getArrayFromDType(a,h),m=0;for(let g=0;g<c;++g){let A=p[g+1]-p[g],y=o?e[0]:e[g],x=u?s[0]:s[g];for(let b=0;b<A;++b)f[m++]=y,y+=x}return[p,f]}var rn=T.RowPartitionType,s2=class{constructor(e,t,a,n,r,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=a,this.valuesShape=n,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=T.getRowPartitionTypesHelper(u),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===rn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===rn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case rn.VALUE_ROWIDS:return s2.getMaxWidthValueRowID(t);case rn.ROW_SPLITS:return s2.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${rn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let a=0;for(let n=0;n<t-1;++n){let r=e[n+1]-e[n];r>a&&(a=r)}return a}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let a=0,n=e[0],r=0;for(let s=1;s<t;++s){let i=e[s];i!==n&&(n=i,r=Math.max(s-a,r),a=s)}return Math.max(t-a,r)}tensorShapeFromTensor(e,t,a=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return YA(e,a)}calculateOutputSize(e){let t=this.valuesShape,a=this.defaultValueShape;T.validateDefaultValueShape(a,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=T.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,a){let n=Math.min(e,a),r=[],s=0;for(let i=0;i<n;++i,s+=t)r.push(s);for(let i=n;i<e;++i)r.push(-1);return v.assert(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,a,n){let r=e.length,s=[];for(let i=0;i<r-1;++i){let o=e[i+1]-e[i],l=Math.min(n,o),u=t[i];u===-1&&(l=0);for(let d=0;d<l;++d)s.push(u),u+=a;for(let d=0;d<o-l;++d)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,a,n){let r=e.length,s=[];if(r===0)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<r;++u){let d=e[u];if(d===o)l>=0&&(++i,i<n?l+=a:l=-1);else{if(i=0,o=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);l=t[d]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,a,n){let r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case rn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,a,n);case rn.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,a,n);default:throw new Error(`Unsupported partition type: ${rn[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case rn.FIRST_DIM_SIZE:return e[0];case rn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case rn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${rn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let s=a.length-2;s>=0;--s)a[s]=a[s+1]*t[s+1];let n=YA(t,!1),r=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(n));if(a[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,a[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,a[i],t[i]);this.setOutput(this.raggedRank,s,r,n)}return[n,r]}setOutput(e,t,a,n){if(a.length===0)return;let r=this.values,s=a,i=n.slice();i=i.slice(e+1);let o=v.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&u.length!==1){let h=this.defaultValueShape;De(()=>{let f=te(u,h);u=Gs(f,i).dataSync()})}let d=0,c=0,p=0;for(let h=0;h<=l;++h){let f=h<l?t[h]:-1;if(f===p){++p;continue}if(c<p){let m=r.subarray(d*o),g=s.subarray(c*o),A=(p-c)*o;ZA(g,m,A)}if(h>=l){let m=a.length;f=Math.floor(m/o)}if(f>p)if(this.defaultValue.length===1)s.subarray(p*o,f*o).fill(this.defaultValue[0]),p=f;else for(;f>p;){let m=s.slice(p*o);ZA(m,u,o),++p}f<0?(d=h+1,c=p):(d=h,c=p,p=c+1)}}};function ZA(e,t,a){for(let n=0;n<a;n++)e[n]=t[n]}function YA(e,t){let a=[];for(let n of e){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}a.push(n)}return a}function O7(e,t,a,n,r,s,i,o,l,u){return new s2(e,t,a,n,r,s,i,o,l,u).compute()}function d1(e,t,a,n){let r=e===t,s=e<t&&a<0,i=t<e&&a>1;if(r||s||i)return v.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/a)),l=v.makeZerosTypedArray(o,n);t<e&&a===1&&(a=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+a;return l}var P7=ys(e=>1/Math.sqrt(e)),HO=Ul(ls,P7),jO={kernelName:ls,backendName:"cpu",kernelFunc:HO};function Po(e,t,a,n,r,s,i,o,l,u){let d=[n/r,r],c=e.values,p=t.values;if(n===0)return xe(a,t.dtype);let h=xe(d,t.dtype);typeof l=="string"||typeof l=="number"?h.values.fill(l):typeof l=="boolean"&&h.values.fill(+l);for(let f=0;f<s;f++){let m=[],g=0;for(let A=0;A<i;A++){let y=c[f*i+A];m.push(y),g+=y*o[A]}if(g<0||g>=n/r)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let A=0;A<r;A++)u?h.values[g*r+A]+=p[f*r+A]:h.values[g*r+A]=t.rank===0?p[0]:p[f*r+A]}return h}var qO=ys(e=>1/(1+Math.exp(-e))),D7=nt(us,e=>1/(1+Math.exp(-e))),XO={kernelName:us,backendName:"cpu",kernelFunc:D7};function Rc(e,t,a,n,r){let s=gt.isSliceContinous(n,t,a),i=v.sizeFromShape(a),o=v.computeStrides(n);if(s){let c=gt.computeFlatOffset(t,o);return r==="string"?e.slice(c,c+i):e.subarray(c,c+i)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=xe(n,r,l),d=xe(a,r);for(let c=0;c<d.size;++c){let p=d.indexToLoc(c),h=p.map((f,m)=>f+t[m]);d.set(u.get(...h),...p)}return r==="string"?T.fromStringArrayToUint8(d.values):d.values}function ei(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n;me(r,"slice");let[o,l]=gt.parseSliceParams(r,s,i);gt.assertParamsValid(r,o,l);let u=a.data.get(r.dataId).values,d=Rc(u,o,l,r.shape,r.dtype);return a.makeTensorInfo(l,r.dtype,d)}var KO={kernelName:_l,backendName:"cpu",kernelFunc:ei};function z7(e,t,a,n,r,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),c=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(a,0),A=v.getArrayFromDType(r,0);return[g,[0,c],A,u,d]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let A=e[g*c];if(A<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,A));if(A>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,A,l));++f[A],p=p&&A>=h,h=A}let m=!0;for(let g=0;g<l;++g){let A=f[g]===0;u[g]=A,m=m&&!A,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,A=n;for(let y=0;y<o;++y)d[y]=y;return[g,[o,c],A,u,d]}else{let g=f[l-1],A=v.getArrayFromDType(a,g*c),y=v.getArrayFromDType(r,g),x=new Array(l).fill(0);for(let b=0;b<o;++b){let w=e[b*c],S=x[w],N=(w===0?0:f[w-1])+S;x[w]++;for(let C=0;C<c;++C)A[N*c+C]=e[b*c+C];y[N]=n[b],d[b]=N}for(let b=0;b<l;++b)if(x[b]===0){let w=b===0?0:f[b-1];A[w*c+0]=b;for(let S=1;S<c;++S)A[w*c+S]=0;y[w]=i}return[A,[g,c],y,u,d]}}function L7(e,t,a,n,r){let s=v.sizeFromShape(n),i=t[0],o=r.length,l=[],u=1,d=-1;for(let m=0;m<o;++m){let g=r[m];if(g===-1){if(d!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(m,g));u*=g,l.push(g)}}if(d!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/u);if(u*m!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(n,l));l[d]=m}if(v.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(n,l));let c=n.length,p=[];if(c>0){p[c-1]=1;for(let m=c-2;m>=0;--m)p[m]=p[m+1]*n[m+1]}let h=[];if(o>0){h[o-1]=1;for(let m=o-2;m>=0;--m)h[m]=h[m+1]*l[m+1]}let f=v.getArrayFromDType(a,i*o);for(let m=0;m<i;++m){let g=0;for(let A=0;A<c;++A)g+=e[m*c+A]*p[A];for(let A=0;A<o;++A)f[m*o+A]=Math.trunc(g/h[A]),g%=h[A]}return[f,[i,o],l]}function p1(e,t,a,n,r,s=!1,i=0){let o=n.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=d;let p=c.reduce((y,x)=>y*x,1),h=v.getArrayFromDType(a,p);if(o===0)return d>0&&h.fill(i),[h,c];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,A=r[f];for(;;){let y=0;if(m<o){if(y=r[m],A===y){++m;continue}if(A>=y)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(A<0||A>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A,d));A>g&&h.fill(i,g*u,A*u);for(let x=f;x<m;++x){let b=n[x];if(b<0||b>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,n[x],l[0]));for(let w=0;w<u;w++)h[A*u+w]+=e[b*u+w]}if(s)for(let x=0;x<u;x++)h[A*u+x]/=m-f;if(f=m,++m,g=A+1,A=y,m>o)break}return g<d&&h.fill(i,g*u,d*u),[h,c]}var ZO=ys(e=>Math.sqrt(e)),YO=nt(ds,e=>Math.sqrt(e)),JO={kernelName:ds,backendName:"cpu",kernelFunc:YO},W7=Ft((e,t)=>{let a=e-t;return a*a}),QO=Ht(ps,W7),eP={kernelName:ps,backendName:"cpu",kernelFunc:QO};function B7(e,t,a,n){let r=xe(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*a[l]+n[l];r.set(t.get(...o),...i)}return r}var tP=class{constructor(e,t,a,n,r,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(a),this.rightPad=v.encodeString(n),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(e,t,a,n,r,s){for(let i=0;i<r;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),d=s-(l+u),c=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let g=0;g<d;++g)p+=e[c+g].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,a[n+i]=new Uint8Array(p);let h=a[n+i],f=0,m=g=>g.forEach(A=>h[f++]=A);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<d-1;++g)m(e[c+g]),m(this.separator);if(d>0){m(e[c+d-1]);for(let g=0;g<u;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<u-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let a=e.length,n=t.length;if(n>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<n;++l){let u=t[l]>=o;if(u=u&&t[l]<=a,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${a}]`);o=t[l]}if(o!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${o}`)}let r=n-1,s=v.getArrayFromDType("int32",n);if(a===0||n===0){let o=new Array(a);for(let l=0;l<=r;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=r;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[r]);for(let o=0;o<r;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(d=>{let c=t[o+1]-t[o],p=this.getNumNGrams(c,d);this.createNGrams(e,l,i,u,p,d),u+=p}),this.preserveShort&&u===s[o]){let d=t[o+1]-t[o];if(d===0)continue;let c=d+2*this.padWidth,p=1;this.createNGrams(e,l,i,u,p,c)}}return[i,s]}};function c1(e,t,a,n,r,s,i,o){return new tP(a,n,r,s,i,o).compute(e,t)}function aP(e,t,a,n){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)n.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!a||o.length!==0)&&n.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!a||e.length!==0)&&n.push(e);return}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(r,s);(!a||i.length!==0)&&n.push(i),r=s+1}}function h1(e,t,a){let n=e.length,r=[],s=0,i=0,o=new Array(n);for(let p=0;p<n;++p){let h=r.length;aP(e[p],t,a,r);let f=r.length-h;o[p]=f,s+=f,i=Math.max(i,f)}let l=v.getArrayFromDType("int32",s*2),u=new Array(s),d=[n,i],c=0;for(let p=0;p<n;++p)for(let h=0;h<o[p];++h)l[c*2]=p,l[c*2+1]=h,u[c]=r[c],++c;return[l,u,d]}function f1(e,t){let a=v.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)a[n]=v.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return a}var V7=Ft((e,t)=>e-t),nP=s1((e,t,a,n)=>({real:e-a,imag:t-n})),m1=Ht(cs,V7,nP),rP={kernelName:cs,backendName:"cpu",kernelFunc:m1};function U7(e,t){let a=new Array(e.rank);for(let r=0;r<a.length;r++)a[r]=e.shape[r]*t[r];let n=xe(a,e.dtype);for(let r=0;r<n.values.length;++r){let s=n.indexToLoc(r),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);n.values[r]=e.values[o]}return n}var bu=(e,t)=>{let a=t.value-e.value;return a===0?e.index-t.index:a};function G7(e,t,a=0,n=e.length-1){for(;n>a;){if(n-a>600){let o=n-a+1,l=t-a+1,u=Math.log(o),d=.5*Math.exp(2*u/3),c=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),p=Math.max(a,Math.floor(t-l*d/o+c)),h=Math.min(n,Math.floor(t+(o-l)*d/o+c));G7(e,t,p,h)}let r=e[t],s=a,i=n;for(v.swap(e,a,t),bu(e[n],r)>0&&v.swap(e,a,n);s<i;){for(v.swap(e,s,i),s++,i--;bu(e[s],r)<0;)s=s+1;for(;bu(e[i],r)>0;)i=i-1}bu(e[a],r)===0?v.swap(e,a,i):(i=i+1,v.swap(e,i,n)),i<=t&&(a=i+1),t<=i&&(n=i-1)}}function H7(e,t,a,n,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=v.getTypedArrayFromDType(a,i*n),u=v.getTypedArrayFromDType("int32",i*n);for(let c=0;c<i;c++){let p=c*o,h=e.subarray(p,p+o),f=new Array(h.length);h.forEach((y,x)=>f[x]={value:y,index:x}),n<f.length&&(G7(f,n),f=f.slice(0,n)),r&&f.sort(bu);let m=c*n,g=l.subarray(m,m+n),A=u.subarray(m,m+n);for(let y=0;y<n;y++)g[y]=f[y].value,A[y]=f[y].index}let d=t.slice();return d[d.length-1]=n,[xe(d,a,l),xe(d,"int32",u)]}function j7(e,t,a,n){let r=v.parseAxisParam(t,a)[0],s=[1,a[0],1];for(let f=0;f<r;f++)s[0]*=a[f];s[1]=a[r];for(let f=r+1;f<a.length;f++)s[2]*=a[f];let i={},o=new Int32Array(a[r]),l=new Ct(s,n,e),u=[],d=s[0]===1&&s[2]===1;for(let f=0;f<a[r];f++){let m;if(d)m=e[f].toString();else{let g=[];for(let A=0;A<s[0];A++)for(let y=0;y<s[2];y++)g.push(l.get(A,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,u.push(f)}}let c=s.slice();c[1]=Object.keys(i).length;let p=new Ct(c,n);u.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let A=0;A<s[2];A++)p.set(l.get(g,f,A),g,m,A)});let h=a.slice();return h[r]=c[1],{outputValues:p.values,outputShape:h,indices:o}}var sP="4.0.0";Wl("cpu",()=>new zh,1);var q7=nt(ki,e=>e>=0?e:Math.exp(e)-1),iP={kernelName:ki,backendName:"cpu",kernelFunc:q7};function X7(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n;me([r],"leakyRelu");let i=v.sizeFromShape(r.shape),o=a.data.get(r.dataId).values,l=v.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return a.makeTensorInfo(r.shape,"float32",l)}var oP={kernelName:Ri,backendName:"cpu",kernelFunc:X7},lP=Ft((e,t)=>e<0?t*e:e);function K7(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t;me([n,r],"prelu");let s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,[o,l]=lP(n.shape,r.shape,s,i,"float32");return a.makeTensorInfo(l,"float32",o)}var uP={kernelName:Vi,backendName:"cpu",kernelFunc:K7},Z7=nt(Gi,e=>Math.max(0,e)),dP={kernelName:Gi,backendName:"cpu",kernelFunc:Z7},Y7=nt(qi,e=>Math.min(Math.max(0,e),6)),pP={kernelName:qi,backendName:"cpu",kernelFunc:Y7};function _c(e,t,a,n,r){if(a==="linear")return Hn({inputs:{x:t},backend:e});if(a==="relu")return Z7({inputs:{x:t},backend:e});if(a==="elu")return q7({inputs:{x:t},backend:e});if(a==="relu6")return Y7({inputs:{x:t},backend:e});if(a==="prelu")return K7({inputs:{x:t,alpha:n},backend:e});if(a==="leakyrelu")return X7({inputs:{x:t},backend:e,attrs:{alpha:r}});if(a==="sigmoid")return D7({inputs:{x:t},backend:e});throw new Error(`Activation ${a} has not been implemented for the CPU backend.`)}function dt(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:s}=n,i=v.sizeFromShape(r.shape),o=v.inferFromImplicitShape(s,i),l=v.sizeFromShape(o);v.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),a.incRef(r.dataId);let u=a.data.get(r.dataId);if(u.complexTensorInfos!=null){let d=u.complexTensorInfos.real,c=u.complexTensorInfos.imag;d.shape=o,c.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var cP={kernelName:Nl,backendName:"cpu",kernelFunc:dt};function J7(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;me([r,s],"matMul");let l=r.shape.length,u=s.shape.length,d=i?r.shape[l-2]:r.shape[l-1],c=o?s.shape[u-1]:s.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);v.assert(d===c,()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],b=o?[A,h,c]:[A,c,h],w=dt({inputs:{x:r},backend:a,attrs:{shape:x}}),S=dt({inputs:{x:s},backend:a,attrs:{shape:b}}),N=i?w.shape[1]:w.shape[2],C=i?w.shape[2]:w.shape[1],M=o?S.shape[1]:S.shape[2],$=Math.max(g,A),E=a.data.get(w.dataId).values,I=a.data.get(S.dataId).values,R=v.computeStrides(w.shape),P=v.computeStrides(S.shape),[D,W,V]=i?[R[0],1,R[1]]:[R[0],R[1],1],[G,U,H]=o?[1,P[1],P[0]]:[P[1],1,P[0]],Z=C*M,Q=xe([$,C,M],w.dtype),Y=Q.values,ee=a.blockSize;for(let ne=0;ne<$;ne++)for(let J=0;J<C;J+=ee)for(let X=0;X<M;X+=ee)for(let fe=0;fe<N;fe+=ee){let Ae=Math.min(J+ee,C),Te=Math.min(X+ee,M),Ie=Math.min(fe+ee,N);for(let Pe=J;Pe<Ae;Pe++)for(let Ye=X;Ye<Te;Ye++){let rt=0;for(let Ze=fe;Ze<Ie;Ze++){let Je=Math.min(ne,g-1)*D,ze=Math.min(ne,A-1)*H,ot=E[Je+Pe*W+Ze*V],_a=I[Ze*G+Ye*U+ze];rt+=ot*_a}Y[ne*Z+(Pe*M+Ye)]+=rt}}return a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(S),a.makeTensorInfo(y,Q.dtype,Q.values)}var hP={kernelName:pi,backendName:"cpu",kernelFunc:J7};function fP(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=n,p,h,f,m=[];p=J7({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:u},backend:a}),i&&(h=el({inputs:{a:p,b:i},backend:a}),m.push(p),p=h),d&&(f=_c(a,p,d,o,c),m.push(p),p=f);for(let g of m)a.disposeIntermediateTensorInfo(g);return p}var mP={kernelName:Lr,backendName:"cpu",kernelFunc:fP},gP=nt(ud,e=>Math.acos(e)),AP={kernelName:ud,backendName:"cpu",kernelFunc:gP},yP=nt(dd,e=>Math.acosh(e)),xP={kernelName:dd,backendName:"cpu",kernelFunc:yP};function bP(e){let{inputs:t,backend:a}=e,n=t;me(t,"addN");let r=n.map(o=>a.data.get(o.dataId).values),s=xe(n[0].shape,n[0].dtype),i=s.values;for(let o=0;o<n.length;o++){let l=r[o];for(let u=0;u<i.length;u++)i[u]+=l[u]}return a.makeTensorInfo(s.shape,s.dtype,s.values)}var vP={kernelName:li,backendName:"cpu",kernelFunc:bP};function wP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;me(r,"all");let o=v.parseAxisParam(s,r.shape),l=o,u=T.getAxesPermutation(l,r.shape.length),d=r;u!=null&&(d=Ra({inputs:{x:r},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("all",l,d.shape.length);let[c,p]=T.computeOutAndReduceShapes(d.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(c),d.dtype),m=a.data.get(d.dataId).values;for(let A=0;A<f.length;++A){let y=A*h,x=m[y];for(let b=0;b<h;++b){let w=m[y+b];x=x&&w}f[A]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(c,d.dtype,f);if(i){let A=T.expandShapeToKeepDim(c,o),y=dt({inputs:{x:g},backend:a,attrs:{shape:A}});return a.disposeIntermediateTensorInfo(g),y}return g}var kP={kernelName:dl,backendName:"cpu",kernelFunc:wP};function IP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;me(r,"any");let o=v.parseAxisParam(s,r.shape),l=o,u=T.getAxesPermutation(l,r.shape.length),d=r;u!=null&&(d=Ra({inputs:{x:r},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("any",l,d.shape.length);let[c,p]=T.computeOutAndReduceShapes(d.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(c),d.dtype),m=a.data.get(d.dataId).values;for(let A=0;A<f.length;++A){let y=A*h,x=m[y];for(let b=0;b<h;++b){let w=m[y+b];x=x||w}f[A]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(c,d.dtype,f);if(i){let A=T.expandShapeToKeepDim(c,o),y=dt({inputs:{x:g},backend:a,attrs:{shape:A}});return a.disposeIntermediateTensorInfo(g),y}return g}var SP={kernelName:pl,backendName:"cpu",kernelFunc:IP};function TP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n;me(r,"argMax");let i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=Ra({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,c]=T.computeOutAndReduceShapes(l.shape,i),p=v.sizeFromShape(d),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(c),m=a.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,y=m[A],x=0;for(let b=0;b<f;++b){let w=m[A+b];w>y&&(y=w,x=b)}h[g]=x}return u.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(d,"int32",h)}var NP={kernelName:ui,backendName:"cpu",kernelFunc:TP};function CP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n;me(r,"argMin");let i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=Ra({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],T.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,c]=T.computeOutAndReduceShapes(l.shape,i),p=v.sizeFromShape(d),h=v.makeZerosTypedArray(p,"int32"),f=v.sizeFromShape(c),m=a.data.get(l.dataId).values;for(let g=0;g<h.length;++g){let A=g*f,y=m[A],x=0;for(let b=0;b<f;++b){let w=m[A+b];w<y&&(y=w,x=b)}h[g]=x}return u.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(d,"int32",h)}var EP={kernelName:pd,backendName:"cpu",kernelFunc:CP},RP=nt(cd,e=>Math.asin(e)),_P={kernelName:cd,backendName:"cpu",kernelFunc:RP},$P=nt(hd,e=>Math.asinh(e)),MP={kernelName:hd,backendName:"cpu",kernelFunc:$P},FP=nt(fd,e=>Math.atan(e)),OP={kernelName:fd,backendName:"cpu",kernelFunc:FP},PP=Ft((e,t)=>Math.atan2(e,t)),DP=Ht(cl,PP),zP={kernelName:cl,backendName:"cpu",kernelFunc:DP},LP=nt(md,e=>Math.atanh(e)),WP={kernelName:md,backendName:"cpu",kernelFunc:LP};function g1(e,t,a,n,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,c=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=xe(r.outShape,a),g=m.values,A=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*A,S=b*n[0];for(let N=0;N<r.inChannels;++N)for(let C=0;C<r.outHeight;++C){let M=C*i-p,$=Math.max(0,M),E=Math.min(r.inHeight,d+M),I=w+C*y;for(let R=0;R<r.outWidth;++R){let P=R*o-h,D=Math.max(0,P),W=Math.min(r.inWidth,c+P),V=f,G=0,U=0;for(let Z=$;Z<E;Z+=l){let Q=S+Z*n[1];for(let Y=D;Y<W;Y+=u){let ee=Q+Y*n[2],ne=e[ee+N];s==="max"&&ne>V?V=ne:s==="avg"&&(G+=ne,U++)}if(isNaN(V))break}let H=I+R*x+N;g[H]=s==="avg"?G/U:V}}}return m}function Q7(e,t,a,n,r=!1,s=!1){let i=xe(n.outShape,"int32"),o=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,d=n.dilationWidth,c=n.effectiveFilterHeight,p=n.effectiveFilterWidth,h=n.padInfo.top,f=n.padInfo.left,m=xe(t,a,e);for(let g=0;g<n.batchSize;++g)for(let A=0;A<n.inChannels;++A)for(let y=0;y<n.outHeight;++y){let x=y*o-h,b=x;for(;b<0;)b+=u;let w=Math.min(n.inHeight,c+x);for(let S=0;S<n.outWidth;++S){let N=S*l-f,C=N;for(;C<0;)C+=d;let M=Math.min(n.inWidth,p+N),$=Number.NEGATIVE_INFINITY,E=-1;for(let I=b;I<w;I+=u){let R=I-x;for(let P=C;P<M;P+=d){let D=P-N,W=m.get(g,I,P,A);W>$&&($=W,r?E=s?((g*n.inHeight+I)*n.inWidth+P)*n.inChannels+A:(I*n.inWidth+P)*n.inChannels+A:E=R*p+D)}}i.set(E,g,y,S,A)}}return i}function ew(e,t,a,n,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,c=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,A=r.padInfo.left,y=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xe(r.outShape,a),b=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let M=0;M<r.batchSize;++M){let $=M*w,E=M*n[0];for(let I=0;I<r.inChannels;++I)for(let R=0;R<r.outDepth;++R){let P=R*i-m,D=P;for(;D<0;)D+=u;let W=Math.min(r.inDepth,p+P),V=$+R*S;for(let G=0;G<r.outHeight;++G){let U=G*o-g,H=U;for(;H<0;)H+=d;let Z=Math.min(r.inHeight,h+U),Q=V+G*N;for(let Y=0;Y<r.outWidth;++Y){let ee=Y*l-A,ne=ee;for(;ne<0;)ne+=c;let J=Math.min(r.inWidth,f+ee),X=Q+Y*C,fe=y,Ae=0,Te=0;for(let Pe=D;Pe<W;Pe+=u){let Ye=E+Pe*n[1];for(let rt=H;rt<Z;rt+=d){let Ze=Ye+rt*n[2];for(let Je=ne;Je<J;Je+=c){let ze=Ze+Je*n[3],ot=e[ze+I];if(s==="max"&&ot>fe?fe=ot:s==="avg"&&(Ae+=ot,Te++),isNaN(fe))break}if(isNaN(fe))break}if(isNaN(fe))break}let Ie=X+I;b[Ie]=s==="avg"?Ae/Te:fe}}}}return x}function BP(e,t){let a=xe(t.outShape,"int32"),n=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let A=0;A<t.outDepth;++A){let y=A*n-p,x=y;for(;x<0;)x+=i;let b=Math.min(t.inDepth,u+y);for(let w=0;w<t.outHeight;++w){let S=w*r-h,N=S;for(;N<0;)N+=o;let C=Math.min(t.inHeight,d+S);for(let M=0;M<t.outWidth;++M){let $=M*s-f,E=$;for(;E<0;)E+=l;let I=Math.min(t.inWidth,c+$),R=Number.NEGATIVE_INFINITY,P=-1;for(let D=x;D<b;D+=i){let W=D-y;for(let V=N;V<C;V+=o){let G=V-S;for(let U=E;U<I;U+=l){let H=U-$,Z=e.get(m,D,V,U,g);Z>=R&&(R=Z,P=W*d*c+G*d+H)}}}a.set(P,m,A,w,M,g)}}}return a}function VP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;me(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,s,i,u,o,l),c;if(d.filterWidth===1&&d.filterHeight===1&&v.arraysEqual(d.inShape,d.outShape))c=Hn({inputs:{x:r},backend:a});else{let p=a.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=g1(p,r.shape,r.dtype,h,d,"avg");c=a.makeTensorInfo(d.outShape,r.dtype,f.values)}return c}var UP={kernelName:di,backendName:"cpu",kernelFunc:VP};function GP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;me(r,"avgPool3d");let d=T.computePool3DInfo(r.shape,s,i,1,o,l,u),c=a.data.get(r.dataId).values,p=ew(c,r.shape,r.dtype,v.computeStrides(r.shape),d,"avg");return a.makeTensorInfo(p.shape,"float32",p.values)}var HP={kernelName:Hc,backendName:"cpu",kernelFunc:GP};function jP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;me([r,s],"avgPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),c=d.strideDepth,p=d.strideHeight,h=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,A=d.dilationDepth,y=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterDepth,w=d.effectiveFilterHeight,S=d.effectiveFilterWidth,N=b-1-d.padInfo.front,C=S-1-d.padInfo.left,M=w-1-d.padInfo.top,$=xe(s.shape,"float32"),E=1/(f*m*g),I=a.bufferSync(r);for(let R=0;R<d.batchSize;++R)for(let P=0;P<d.inChannels;++P)for(let D=0;D<d.inDepth;++D)for(let W=0;W<d.inHeight;++W)for(let V=0;V<d.inWidth;++V){let G=D-N,U=W-M,H=V-C,Z=0;for(let Q=0;Q<b;Q+=A){let Y=(G+Q)/c;if(!(Y<0||Y>=d.outDepth||Math.floor(Y)!==Y))for(let ee=0;ee<w;ee+=y){let ne=(U+ee)/p;if(!(ne<0||ne>=d.outHeight||Math.floor(ne)!==ne))for(let J=0;J<S;J+=x){let X=(H+J)/h;X<0||X>=d.outWidth||Math.floor(X)!==X||(Z+=I.get(R,Y,ne,X,P))}}}$.set(Z*E,R,D,W,V,P)}return a.makeTensorInfo($.shape,$.dtype,$.values)}var qP={kernelName:U2,backendName:"cpu",kernelFunc:jP};function XP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s;me([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=n,d=T.computePool2DInfo(i.shape,o,l,1,u),c=d.strideHeight,p=d.strideWidth,h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,A=d.effectiveFilterHeight,y=d.effectiveFilterWidth,x=y-1-d.padInfo.left,b=A-1-d.padInfo.top,w=xe(i.shape,"float32"),S=1/(h*f),N=a.data.get(r.dataId).values,C=xe(r.shape,"float32",N);for(let M=0;M<d.batchSize;++M)for(let $=0;$<d.inChannels;++$)for(let E=0;E<d.inHeight;++E)for(let I=0;I<d.inWidth;++I){let R=E-b,P=I-x,D=0;for(let W=0;W<A;W+=m){let V=(R+W)/c;if(!(V<0||V>=d.outHeight||Math.floor(V)!==V))for(let G=0;G<y;G+=g){let U=(P+G)/p;U<0||U>=d.outWidth||Math.floor(U)!==U||(D+=C.get(M,V,U,$))}}w.set(D*S,M,E,I,$)}return a.makeTensorInfo(w.shape,w.dtype,w.values)}var KP={kernelName:V2,backendName:"cpu",kernelFunc:XP};function ZP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;v.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),me([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let d=a.data.get(r.dataId).values,c=a.data.get(o.dataId).values,p=a.data.get(l.dataId).values,h=s?a.data.get(s.dataId).values:new Float32Array([1]),f=i?a.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,A=h.length,y=p.length,x=c.length,b=0,w=0,S=0,N=0;for(let C=0;C<d.length;++C)m[C]=f[b++]+(d[C]-c[w++])*h[S++]/Math.sqrt(p[N++]+u),b>=g&&(b=0),w>=x&&(w=0),S>=A&&(S=0),N>=y&&(N=0);return a.makeTensorInfo(r.shape,r.dtype,m)}var YP={kernelName:Ni,backendName:"cpu",kernelFunc:ZP};function JP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;me([r],"batchToSpaceND");let o=s.reduce((A,y)=>A*y),l=T.getReshaped(r.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(r.shape,s,o),c=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),h=dt({inputs:{x:r},backend:a,attrs:{shape:l}}),f=Ra({inputs:{x:h},backend:a,attrs:{perm:u}}),m=dt({inputs:{x:f},backend:a,attrs:{shape:d}}),g=ei({inputs:{x:m},backend:a,attrs:{begin:c,size:p}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var QP={kernelName:hl,backendName:"cpu",kernelFunc:JP};function eD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i}=n,o=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,u=i1(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var tD={kernelName:jc,backendName:"cpu",kernelFunc:eD};function aD(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var nD={kernelName:qc,backendName:"cpu",kernelFunc:aD},rD=nt(Kr,(e,t)=>{let a=t;return e>a.clipValueMax?a.clipValueMax:e<a.clipValueMin?a.clipValueMin:e}),sD={kernelName:Kr,backendName:"cpu",kernelFunc:rD},iD=e=>{let{x:t}=e.inputs,a=e.backend,n=new Float32Array(v.sizeFromShape(t.shape)),r=a.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values;for(let u=0;u<o.length;u++){let d=o[u],c=l[u];n[u]=Math.hypot(d,c)}return a.makeOutput(n,t.shape,"float32")},oD={kernelName:Xc,backendName:"cpu",kernelFunc:iD};function tl(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.imag,s=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,s)}var lD={kernelName:xd,backendName:"cpu",kernelFunc:tl};function al(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(m=>m.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(m=>m.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(m=>v.sizeFromShape(m.shape)>0);if(l.length===1)return Hn({inputs:{x:l[0]},backend:a});if(l[0].dtype==="complex64"){let m=l.map(b=>Qs({inputs:{input:b},backend:a})),g=l.map(b=>tl({inputs:{input:b},backend:a})),A=al({inputs:m,backend:a,attrs:{axis:s}}),y=al({inputs:g,backend:a,attrs:{axis:s}}),x=za({inputs:{real:A,imag:y},backend:a});return m.forEach(b=>a.disposeIntermediateTensorInfo(b)),g.forEach(b=>a.disposeIntermediateTensorInfo(b)),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(y),x}let u=l.map(m=>{let g=v.sizeFromShape(m.shape.slice(s));return dt({inputs:{x:m},backend:a,attrs:{shape:[-1,g]}})}),d=u.map(m=>({vals:a.data.get(m.dataId).values,shape:m.shape}));o=T.computeOutShape(u.map(m=>m.shape),1);let c=u[0].shape[0]===1,p=o1(d,o,t[0].dtype,c),h=T.computeOutShape(l.map(m=>m.shape),s),f=a.makeTensorInfo(h,t[0].dtype,p);return u.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var uD={kernelName:fl,backendName:"cpu",kernelFunc:al};function tw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n;me([r,s],"conv2d");let c=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(r.shape,s.shape,i,u,o,d,!1,c),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,A=p.padInfo.left,y=p.padInfo.top,x=p.dataFormat==="channelsLast",b=new Ct(p.outShape,r.dtype),w=v.computeStrides(r.shape),S=v.computeStrides(s.shape),N=w[0],C=x?w[1]:w[2],M=x?w[2]:1,$=x?1:w[1],E=b.strides[0],I=x?b.strides[1]:b.strides[2],R=x?b.strides[2]:1,P=x?1:b.strides[1],D=a.data.get(r.dataId).values,W=a.data.get(s.dataId).values,V=b.values;for(let G=0;G<p.batchSize;++G){let U=G*N,H=G*E;for(let Z=0;Z<p.outHeight;++Z){let Q=H+Z*I,Y=Z*p.strideHeight-y;for(let ee=0;ee<h;++ee){let ne=Y+ee*m;if(ne<0||ne>=p.inHeight)continue;let J=ee*S[0],X=U+ne*C;for(let fe=0;fe<p.outWidth;++fe){let Ae=Q+fe*R,Te=fe*p.strideWidth-A;for(let Ie=0;Ie<f;++Ie){let Pe=Te+Ie*g;if(Pe<0||Pe>=p.inWidth)continue;let Ye=J+Ie*S[1],rt=X+Pe*M,Ze=Ye;for(let Je=0;Je<p.inChannels;++Je){let ze=D[rt+Je*$];for(let ot=0;ot<p.outChannels;++ot)V[Ae+ot*P]+=ze*W[Ze+ot];Ze+=p.outChannels}}}}}}return a.makeTensorInfo(b.shape,b.dtype,V)}var dD={kernelName:hi,backendName:"cpu",kernelFunc:tw};function pD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=n;me([r,s],"conv2dBackpropFilter");let c=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(r.shape,d,i,1,o,u,!1,c),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,A=p.dataFormat==="channelsLast",y=new Ct(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values,N=new Ct(r.shape,r.dtype,w),C=new Ct(s.shape,s.dtype,S);for(let M=0;M<m;++M){let $=Math.max(0,Math.ceil((b-M)/h)),E=Math.min(p.outHeight,(p.inHeight+b-M)/h);for(let I=0;I<g;++I){let R=Math.max(0,Math.ceil((x-I)/f)),P=Math.min(p.outWidth,(p.inWidth+x-I)/f);for(let D=0;D<p.inChannels;++D)for(let W=0;W<p.outChannels;++W){let V=0;for(let G=0;G<p.batchSize;++G)for(let U=$;U<E;++U){let H=M+U*h-b;for(let Z=R;Z<P;++Z){let Q=I+Z*f-x;A?V+=N.get(G,H,Q,D)*C.get(G,U,Z,W):V+=N.get(G,D,H,Q)*C.get(G,W,U,Z)}}y.set(V,M,I,D,W)}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var cD={kernelName:Kc,backendName:"cpu",kernelFunc:pD};function hD(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=n;me([r,s],"conv2dBackpropInput");let c=v.computeStrides(s.shape),p=v.computeStrides(r.shape),h=T.convertConv2DDataFormat(u),f=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h),m=new Ct(f.inShape,"float32"),g=m.values,A=a.data.get(r.dataId).values,y=a.data.get(s.dataId).values,[x,b,w]=c,{batchSize:S,filterHeight:N,filterWidth:C,inChannels:M,inHeight:$,inWidth:E,outChannels:I,outHeight:R,outWidth:P,strideHeight:D,strideWidth:W}=f;h=f.dataFormat;let V=N-1-f.padInfo.top,G=C-1-f.padInfo.left,U=h==="channelsLast",H=m.strides[0],Z=U?m.strides[1]:m.strides[2],Q=U?m.strides[2]:1,Y=U?1:m.strides[1],ee=p[0],ne=U?p[1]:p[2],J=U?p[2]:1,X=U?1:p[1];for(let fe=0;fe<S;++fe)for(let Ae=0;Ae<M;++Ae)for(let Te=0;Te<$;++Te){let Ie=Te-V,Pe=Math.max(0,Math.ceil(Ie/D)),Ye=Math.min(R,(N+Ie)/D);for(let rt=0;rt<E;++rt){let Ze=rt-G,Je=Math.max(0,Math.ceil(Ze/W)),ze=Math.min(P,(C+Ze)/W),ot=0;for(let Et=Pe;Et<Ye;++Et){let Ga=Et*D-Ie;for(let qt=Je;qt<ze;++qt){let ba=qt*W-Ze,Ha=ee*fe+ne*Et+J*qt,va=x*(N-1-Ga)+b*(C-1-ba)+w*Ae;for(let st=0;st<I;++st){let wa=A[Ha+X*st],$a=y[va+st];ot+=wa*$a}}}let _a=H*fe+Z*Te+Q*rt+Y*Ae;g[_a]=ot}}return a.makeTensorInfo(m.shape,m.dtype,m.values)}var fD={kernelName:fi,backendName:"cpu",kernelFunc:hD};function mD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=n;me([r,s],"conv3d");let u=T.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:c,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,A=g.front,y=g.left,x=g.top,b=new Ct(u.outShape,r.dtype),w=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values,N=b.values,C=v.computeStrides(r.shape),M=v.computeStrides(s.shape);for(let $=0;$<u.batchSize;++$){let E=$*C[0],I=$*b.strides[0];for(let R=0;R<u.outDepth;++R){let P=I+R*b.strides[1],D=R*u.strideDepth-A;for(let W=0;W<d;++W){let V=D+W*h;if(V<0||V>=u.inDepth)continue;let G=W*M[0],U=E+V*C[1];for(let H=0;H<u.outHeight;++H){let Z=P+H*b.strides[2],Q=H*u.strideHeight-x;for(let Y=0;Y<c;++Y){let ee=Q+Y*f;if(ee<0||ee>=u.inHeight)continue;let ne=G+Y*M[1],J=U+ee*C[2];for(let X=0;X<u.outWidth;++X){let fe=Z+X*u.outChannels,Ae=X*u.strideWidth-y;for(let Te=0;Te<p;++Te){let Ie=Ae+Te*m;if(Ie<0||Ie>=u.inWidth)continue;let Pe=ne+Te*M[2],Ye=J+Ie*u.inChannels,rt=Pe;for(let Ze=0;Ze<u.inChannels;++Ze){let Je=w[Ye+Ze];for(let ze=0;ze<u.outChannels;++ze)N[fe+ze]+=Je*S[rt+ze];rt+=u.outChannels}}}}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}var gD={kernelName:Zc,backendName:"cpu",kernelFunc:mD};function AD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=n;me([r,s],"conv3dBackpropFilterV2");let u=v.computeStrides(r.shape),d=v.computeStrides(s.shape),c=T.computeConv3DInfo(r.shape,l,i,1,o),p=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,A=c.filterWidth,y=new Ct(c.filterShape,"float32"),x=y.values,[b,w,S,N]=y.strides,C=a.data.get(s.dataId).values,[M,$,E,I]=d,R=a.data.get(r.dataId).values,[P,D,W,V]=u,G=c.padInfo.front,U=c.padInfo.left,H=c.padInfo.top;for(let Z=0;Z<m;++Z){let Q=Math.max(0,Math.ceil((G-Z)/p)),Y=Math.min(c.outDepth,(c.inDepth+G-Z)/p),ee=Z*b;for(let ne=0;ne<g;++ne){let J=Math.max(0,Math.ceil((H-ne)/h)),X=Math.min(c.outHeight,(c.inHeight+H-ne)/h),fe=ne*w+ee;for(let Ae=0;Ae<A;++Ae){let Te=Math.max(0,Math.ceil((U-Ae)/f)),Ie=Math.min(c.outWidth,(c.inWidth+U-Ae)/f),Pe=Ae*S+fe;for(let Ye=0;Ye<c.inChannels;++Ye){let rt=Ye*N+Pe;for(let Ze=0;Ze<c.outChannels;++Ze){let Je=0;for(let ze=0;ze<c.batchSize;++ze){let ot=ze*P,_a=ze*M;for(let Et=Q;Et<Y;++Et){let Ga=(Z+Et*p-G)*D+ot,qt=Et*$+_a;for(let ba=J;ba<X;++ba){let Ha=(ne+ba*h-H)*W+Ga,va=ba*E+qt;for(let st=Te;st<Ie;++st){let wa=(Ae+st*f-U)*V+Ha,$a=st*I+va;Je+=R[wa+Ye]*C[$a+Ze]}}}}x[rt+Ze]=Je}}}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var yD={kernelName:G2,backendName:"cpu",kernelFunc:AD};function xD(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=n;me([r],"conv3dBackpropInputV2");let u=v.computeStrides(r.shape),d=v.computeStrides(s.shape),c=T.computeConv3DInfo(l,s.shape,o,1,i),p=new Ct(c.inShape,"float32"),h=p.values,[f,m,g,A]=p.strides,y=a.data.get(r.dataId).values,[x,b,w,S]=u,N=a.data.get(s.dataId).values,[C,M,$,E]=d,{batchSize:I,filterDepth:R,filterHeight:P,filterWidth:D,inChannels:W,inDepth:V,inHeight:G,inWidth:U,outChannels:H,outDepth:Z,outHeight:Q,outWidth:Y,strideDepth:ee,strideHeight:ne,strideWidth:J}=c,X=R-1-c.padInfo.front,fe=P-1-c.padInfo.top,Ae=D-1-c.padInfo.left;for(let Te=0;Te<I;++Te)for(let Ie=0;Ie<W;++Ie)for(let Pe=0;Pe<V;++Pe){let Ye=Pe-X,rt=Math.max(0,Math.ceil(Ye/ee)),Ze=Math.min(Z,(R+Ye)/ee);for(let Je=0;Je<G;++Je){let ze=Je-fe,ot=Math.max(0,Math.ceil(ze/ne)),_a=Math.min(Q,(P+ze)/ne);for(let Et=0;Et<U;++Et){let Ga=Et-Ae,qt=Math.max(0,Math.ceil(Ga/J)),ba=Math.min(Y,(D+Ga)/J),Ha=0;for(let va=rt;va<Ze;++va){let st=va*ee-Ye;for(let wa=ot;wa<_a;++wa){let $a=wa*ne-ze;for(let jn=qt;jn<ba;++jn){let fo=jn*J-Ga,$n=x*Te+b*va+w*wa+S*jn,su=C*(R-1-st)+M*(P-1-$a)+$*(D-1-fo)+E*Ie;for(let nn=0;nn<H;++nn){let mo=y[$n+nn],Wt=N[su+nn];Ha+=mo*Wt}}}}h[f*Te+m*Pe+g*Je+A*Et+Ie]=Ha}}}return a.makeTensorInfo(p.shape,p.dtype,p.values)}var bD={kernelName:Yc,backendName:"cpu",kernelFunc:xD},vD=nt(mi,e=>Math.cos(e)),wD={kernelName:mi,backendName:"cpu",kernelFunc:vD},kD=nt(gi,e=>Math.cosh(e)),ID={kernelName:gi,backendName:"cpu",kernelFunc:kD};function SD(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,[d,c,p,h]=r.shape,f=s.shape[0],[m,g]=o,A=xe([f,m,g,h],"float32"),y=a.data.get(s.dataId).values,x=a.data.get(i.dataId).values,b=a.data.get(r.dataId).values,w=v.computeStrides(r.shape),S=v.computeStrides(A.shape);for(let N=0;N<f;N++){let C=N*4,M=y[C],$=y[C+1],E=y[C+2],I=y[C+3],R=x[N];if(R>=d)continue;let P=m>1?(E-M)*(c-1)/(m-1):0,D=g>1?(I-$)*(p-1)/(g-1):0;for(let W=0;W<m;W++){let V=m>1?M*(c-1)+W*P:.5*(M+E)*(c-1);if(V<0||V>c-1){for(let G=0;G<g;G++)for(let U=0;U<h;U++){let H=U+G*S[2]+W*S[1]+N*S[0];A.values[H]=u}continue}if(l==="bilinear"){let G=Math.floor(V),U=Math.ceil(V),H=V-G;for(let Z=0;Z<g;Z++){let Q=g>1?$*(p-1)+Z*D:.5*($+I)*(p-1);if(Q<0||Q>p-1){for(let J=0;J<h;J++){let X=J+Z*S[2]+W*S[1]+N*S[0];A.values[X]=u}continue}let Y=Math.floor(Q),ee=Math.ceil(Q),ne=Q-Y;for(let J=0;J<h;J++){let X=J+Y*w[2]+G*w[1]+R*w[0],fe=b[X];X=J+ee*w[2]+G*w[1]+R*w[0];let Ae=b[X];X=J+Y*w[2]+U*w[1]+R*w[0];let Te=b[X];X=J+ee*w[2]+U*w[1]+R*w[0];let Ie=b[X],Pe=fe+(Ae-fe)*ne,Ye=Te+(Ie-Te)*ne;X=J+Z*S[2]+W*S[1]+N*S[0],A.values[X]=Pe+(Ye-Pe)*H}}}else for(let G=0;G<g;++G){let U=g>1?$*(p-1)+G*D:.5*($+I)*(p-1);if(U<0||U>p-1){for(let Q=0;Q<h;Q++){let Y=Q+G*S[2]+W*S[1]+N*S[0];A.values[Y]=u}continue}let H=Math.round(U),Z=Math.round(V);for(let Q=0;Q<h;Q++){let Y=Q+H*w[2]+Z*w[1]+R*w[0],ee=Q+G*S[2]+W*S[1]+N*S[0];A.values[ee]=b[Y]}}}}return a.makeTensorInfo(A.shape,A.dtype,A.values)}var TD={kernelName:xi,backendName:"cpu",kernelFunc:SD};function ND(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;me(r,"cumprod");let l=T.getAxesPermutation([s],r.shape.length),u=r;l!=null&&(u=Ra({inputs:{x:r},backend:a,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let c=Yt(u.dtype,"int32"),p=v.makeOnesTypedArray(v.sizeFromShape(u.shape),c),h=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(A,y)=>A+f-y-1:(A,y)=>A+y;for(let A=0;A<h.length;A+=f)for(let y=0;y<f;y++){let x=m(A,y);if(y===0)p[x]=i?1:h[x];else{let b=m(A,y-1);p[x]=i?h[b]*p[b]:h[x]*p[b]}}let g=a.makeTensorInfo(u.shape,c,p);if(l!=null){let A=T.getUndoAxesPermutation(l),y=Ra({inputs:{x:g},backend:a,attrs:{perm:A}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(u),y}return g}var CD={kernelName:Ai,backendName:"cpu",kernelFunc:ND};function ED(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;me(r,"cumsum");let l=T.getAxesPermutation([s],r.shape.length),u=r;l!=null&&(u=Ra({inputs:{x:r},backend:a,attrs:{perm:l}}));let d=T.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let c=Yt(u.dtype,"int32"),p=v.makeZerosTypedArray(v.sizeFromShape(u.shape),c),h=a.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(A,y)=>A+f-y-1:(A,y)=>A+y;for(let A=0;A<h.length;A+=f)for(let y=0;y<f;y++){let x=m(A,y);if(y===0)p[x]=i?0:h[x];else{let b=m(A,y-1);p[x]=i?h[b]+p[b]:h[x]+p[b]}}let g=a.makeTensorInfo(u.shape,c,p);if(l!=null){let A=T.getUndoAxesPermutation(l),y=Ra({inputs:{x:g},backend:a,attrs:{perm:A}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(u),y}return g}var RD={kernelName:yi,backendName:"cpu",kernelFunc:ED};function _D(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=n;if(r.shape.length===1){let l=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,d=i1(l,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}else if(r.shape.length===2){let l=a.bufferSync(r),u=a.bufferSync(s),d=p7(l,u,i,o);return a.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var $D={kernelName:Jc,backendName:"cpu",kernelFunc:_D};function MD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],c=l*s,p=u*s,h=d/(s*s),f=a.data.get(r.dataId).values,m=new Float32Array(o*c*p*h),g=0;for(let A=0;A<o;++A)for(let y=0;y<c;++y){let x=Math.floor(y/s),b=y%s;for(let w=0;w<p;++w){let S=Math.floor(w/s),N=w%s,C=(b*s+N)*h;for(let M=0;M<h;++M){let $=M+C+d*(S+u*(x+l*A));m[g++]=f[$]}}}return a.makeTensorInfo([o,c,p,h],r.dtype,m)}var FD={kernelName:bi,backendName:"cpu",kernelFunc:MD};function aw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n;me([r,s],"depthwiseConv2DNative");let d=v.computeStrides(r.shape),c=v.computeStrides(s.shape),p=l;p==null&&(p=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h=T.computeConv2DInfo(r.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:A,padInfo:y}=h,x=y.left,b=y.top,w=h.outChannels/h.inChannels,S=new Ct(h.outShape,r.dtype),N=a.data.get(r.dataId).values,C=a.data.get(s.dataId).values,M=S.values;for(let $=0;$<h.batchSize;++$){let E=$*d[0],I=$*S.strides[0];for(let R=0;R<h.outHeight;++R){let P=I+R*S.strides[1],D=R*h.strideHeight-b;for(let W=0;W<f;++W){let V=D+W*g;if(V<0||V>=h.inHeight)continue;let G=W*c[0],U=E+V*d[1];for(let H=0;H<h.outWidth;++H){let Z=P+H*S.strides[2],Q=H*h.strideWidth-x;for(let Y=0;Y<m;++Y){let ee=Q+Y*A;if(ee<0||ee>=h.inWidth)continue;let ne=G+Y*c[1],J=U+ee*h.inChannels,X=Z,fe=ne;for(let Ae=0;Ae<h.inChannels;++Ae){let Te=N[J+Ae];for(let Ie=0;Ie<w;++Ie)M[X+Ie]+=Te*C[fe+Ie];X+=w,fe+=w}}}}}}return a.makeTensorInfo(S.shape,S.dtype,S.values)}var OD={kernelName:vi,backendName:"cpu",kernelFunc:aw};function PD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=n;me([r,s],"depthwiseConv2dNativeBackpropFilter");let c=T.computeConv2DInfo(r.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=c,g=new Ct(c.filterShape,"float32"),A=c.padInfo.left,y=c.padInfo.top,x=c.outChannels/c.inChannels,b=a.data.get(r.dataId).values,w=new Ct(r.shape,r.dtype,b),S=a.data.get(s.dataId).values,N=new Ct(s.shape,s.dtype,S);for(let C=0;C<f;++C){let M=Math.max(0,Math.ceil((y-C)/p)),$=Math.min(c.outHeight,(c.inHeight+y-C)/p);for(let E=0;E<m;++E){let I=Math.max(0,Math.ceil((A-E)/h)),R=Math.min(c.outWidth,(c.inWidth+A-E)/h);for(let P=0;P<c.outChannels;++P){let D=Math.trunc(P/x),W=P%x,V=0;for(let G=0;G<c.batchSize;++G)for(let U=M;U<$;++U){let H=C+U*p-y;for(let Z=I;Z<R;++Z){let Q=E+Z*h-A;V+=w.get(G,H,Q,D)*N.get(G,U,Z,P)}}g.set(V,C,E,D,W)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}var DD={kernelName:Qc,backendName:"cpu",kernelFunc:PD};function zD(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=n;me([r,s],"depthwiseConv2DNativeBackpropInput");let c=v.computeStrides(r.shape),p=v.computeStrides(s.shape),h=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Ct(h.inShape,"float32"),m=f.values,[g,A,y]=f.strides,x=a.data.get(r.dataId).values,[b,w,S]=c,N=a.data.get(s.dataId).values,[C,M,$]=p,{batchSize:E,filterHeight:I,filterWidth:R,inChannels:P,inHeight:D,inWidth:W,outChannels:V,outHeight:G,outWidth:U,strideHeight:H,strideWidth:Z}=h,Q=I-1-h.padInfo.top,Y=R-1-h.padInfo.left,ee=V/P;for(let ne=0;ne<E;++ne)for(let J=0;J<P;++J)for(let X=0;X<D;++X){let fe=X-Q,Ae=Math.max(0,Math.ceil(fe/H)),Te=Math.min(G,(I+fe)/H);for(let Ie=0;Ie<W;++Ie){let Pe=Ie-Y,Ye=Math.max(0,Math.ceil(Pe/Z)),rt=Math.min(U,(R+Pe)/Z),Ze=0;for(let Je=Ae;Je<Te;++Je){let ze=Je*H-fe;for(let ot=Ye;ot<rt;++ot){let _a=ot*Z-Pe,Et=b*ne+w*Je+S*ot,Ga=C*(I-1-ze)+M*(R-1-_a)+$*J;for(let qt=0;qt<ee;++qt){let ba=J*ee+qt,Ha=x[Et+ba],va=N[Ga+qt];Ze+=Ha*va}}}m[g*ne+A*X+y*Ie+J]=Ze}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}var LD={kernelName:eh,backendName:"cpu",kernelFunc:zD};function WD(e){let{inputs:t,backend:a}=e,{x:n}=t,r=v.sizeFromShape(n.shape),s=a.data.get(n.dataId).values,i=xe([r,r],n.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*r+u]=s[u];let l=[...n.shape,...n.shape];return a.makeTensorInfo(l,i.dtype,i.values)}var BD={kernelName:th,backendName:"cpu",kernelFunc:WD},VD={kernelName:ah,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r}=e,{strides:s,pad:i,dilations:o}=a,l=t,u=l.data.get(n.dataId).values,d=n.shape.length,c=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:A,outWidth:y,padInfo:x,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:N,dilationHeight:C,dilationWidth:M,outShape:$}=T.computeDilation2DInfo(n.shape,r.shape,s,i,"NHWC",o),E=v.sizeFromShape($),I=$.length,R=v.getArrayFromDType(n.dtype,E);for(let P=0;P<h;++P)for(let D=0;D<A;++D){let W=D*b-x.top;for(let V=0;V<y;++V){let G=V*w-x.left;for(let U=0;U<g;++U){let H=Number.MIN_SAFE_INTEGER;for(let Q=0;Q<S;++Q){let Y=W+Q*C;if(Y>=0&&Y<f)for(let ee=0;ee<N;++ee){let ne=G+ee*M;if(ne>=0&&ne<m){let J=v.locToIndex([P,Y,ne,U],d,v.computeStrides(n.shape)),X=v.locToIndex([Q,ee,U],p,v.computeStrides(r.shape)),fe=u[J]+c[X];fe>H&&(H=fe)}}}let Z=v.locToIndex([P,D,V,U],I,v.computeStrides($));R[Z]=H}}}return{dataId:l.write(v.toTypedArray(R,n.dtype),$,n.dtype),shape:$,dtype:n.dtype}}},UD={kernelName:Rm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=v.toNestedArray(n.shape,u.data.get(n.dataId).values),c=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:y,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:N,dilationWidth:C,outShape:M}=T.computeDilation2DInfo(n.shape,r.shape,i,o,"NHWC",l);v.assert(s.rank===M.length,()=>`Error in ${Rm}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let $=v.toNestedArray(M,u.data.get(s.dataId).values),E=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let I=0;I<p;++I)for(let R=0;R<g;++R){let P=R*x-y.top;for(let D=0;D<A;++D){let W=D*b-y.left;for(let V=0;V<m;++V){let G=Number.MIN_SAFE_INTEGER,U=0,H=0;for(let Z=0;Z<w;++Z){let Q=P+Z*N;if(Q>=0&&Q<h)for(let Y=0;Y<S;++Y){let ee=W+Y*C;if(ee>=0&&ee<f){let ne=d[I][Q][ee][V]+c[Z][Y][V];ne>G&&(G=ne,U=Z,H=Y)}}}E[U][H][V]+=$[I][R][D][V]}}}return{dataId:u.write(v.toTypedArray(E,n.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},GD={kernelName:Em,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=a,u=t,d=v.toNestedArray(n.shape,u.data.get(n.dataId).values),c=v.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:A,padInfo:y,strideHeight:x,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:N,dilationWidth:C,outShape:M}=T.computeDilation2DInfo(n.shape,r.shape,i,o,"NHWC",l);v.assert(s.rank===M.length,()=>`Error in ${Em}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let $=v.toNestedArray(M,u.data.get(s.dataId).values),E=v.makeZerosNestedTypedArray(n.shape,n.dtype);for(let I=0;I<p;++I)for(let R=0;R<g;++R){let P=R*x-y.top;for(let D=0;D<A;++D){let W=D*b-y.left;for(let V=0;V<m;++V){let G=Number.MIN_SAFE_INTEGER,U=P<0?0:P,H=W<0?0:W;for(let Z=0;Z<w;++Z){let Q=P+Z*N;if(Q>=0&&Q<h)for(let Y=0;Y<S;++Y){let ee=W+Y*C;if(ee>=0&&ee<f){let ne=d[I][Q][ee][V]+c[Z][Y][V];ne>G&&(G=ne,U=Q,H=ee)}}}E[I][U][H][V]+=$[I][R][D][V]}}}return{dataId:u.write(v.toTypedArray(E,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Kd(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;me(r,"sum");let o;r.dtype==="bool"?o=Gr({inputs:{x:r},backend:a,attrs:{dtype:"int32"}}):o=Hn({inputs:{x:r},backend:a});let l=o.shape.length,u=v.parseAxisParam(s,o.shape),d=T.getAxesPermutation(u,l),c=u,p=o;d!=null&&(p=Ra({inputs:{x:o},backend:a,attrs:{perm:d}}),c=T.getInnerMostAxes(c.length,l)),T.assertAxesAreInnerMostDims("sum",c,p.shape.length);let[h,f]=T.computeOutAndReduceShapes(p.shape,c),m=T.upcastType(p.dtype,"int32"),g=Ec(a,h,m),A=v.sizeFromShape(f),y=a.data.get(g.dataId).values,x=a.data.get(p.dataId).values;for(let b=0;b<y.length;++b){let w=b*A,S=0;for(let N=0;N<A;++N)S+=x[w+N];y[b]=S}if(i){let b=T.expandShapeToKeepDim(g.shape,u),w=g;g=dt({inputs:{x:g},backend:a,attrs:{shape:b}}),a.disposeIntermediateTensorInfo(w)}return a.disposeIntermediateTensorInfo(o),d!=null&&a.disposeIntermediateTensorInfo(p),g}var HD={kernelName:Zi,backendName:"cpu",kernelFunc:Kd};function jD(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(r,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let m=0;m<c;++m){for(let g of d[m]){let{permutationIndices:A,expandDims:y}=T.getEinsumPermutation(h,l[g]),x;T.isIdentityPermutation(A)?x=s[g]:(x=Ra({inputs:{x:s[g]},backend:a,attrs:{perm:A}}),f.push(x));let b=x.shape.slice();for(let w=0;w<y.length;++w)b.splice(y[w],0,1);v.arraysEqual(x.shape,b)||(x=dt({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=Lh({inputs:{a:x,b:p},backend:a}),f.push(p))}m<c-1&&(u[m]>=0&&(p=Kd({inputs:{x:p},backend:a,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&a.disposeIntermediateTensorInfo(m);return p}var qD={kernelName:Ad,backendName:"cpu",kernelFunc:jD};function XD(e){let{inputs:t,backend:a}=e,{dy:n,y:r}=t;me([n,r],"eluGrad");let s=new Float32Array(v.sizeFromShape(r.shape)),i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=1?s[l]=o[l]:s[l]=o[l]*(u+1)}return a.makeTensorInfo(r.shape,"float32",s)}var KD={kernelName:H2,backendName:"cpu",kernelFunc:XD},ZD=T.ERF_P,YD=T.ERF_A1,JD=T.ERF_A2,QD=T.ERF_A3,ez=T.ERF_A4,tz=T.ERF_A5,az=nt(yd,e=>{let t=Math.sign(e),a=Math.abs(e),n=1/(1+ZD*a);return t*(1-((((tz*n+ez)*n+QD)*n+JD)*n+YD)*n*Math.exp(-a*a))}),nz={kernelName:yd,backendName:"cpu",kernelFunc:az};function $c(e){let{inputs:t,backend:a,attrs:n}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),dt({inputs:{x:r},backend:a,attrs:{shape:o}})}var rz={kernelName:ml,backendName:"cpu",kernelFunc:$c},sz=Ft((e,t)=>e/t),A1=Ht(wi,sz),i2={kernelName:wi,backendName:"cpu",kernelFunc:A1};function nw(e,t,a){let n=e.shape,r=n[0],s=n[1],i=a.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],d=v.sizeFromShape(u),c=v.getTypedArrayFromDType("float32",d),p=v.getTypedArrayFromDType("float32",d);for(let g=0;g<r;g++){let A=ei({inputs:{x:o},backend:a,attrs:{begin:[g,0],size:[1,s]}}),y=ei({inputs:{x:l},backend:a,attrs:{begin:[g,0],size:[1,s]}}),x=za({inputs:{real:A,imag:y},backend:a}),{real:b,imag:w}=iz(x,t,a),S=T.mergeRealAndImagArrays(b,w);for(let N=0;N<s;N++){let C=T.getComplexWithIndex(S,N);c[g*s+N]=C.real,p[g*s+N]=C.imag}a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x)}let h=a.makeTensorInfo(u,"float32",c),f=a.makeTensorInfo(u,"float32",p),m=za({inputs:{real:h,imag:f},backend:a});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),m}function iz(e,t,a){let n=v.sizeFromShape(e.shape),r=a.data.get(e.dataId),s=a.data.get(r.complexTensorInfos.real.dataId).values,i=a.data.get(r.complexTensorInfos.imag.dataId).values;if(oz(n)){let o=o2(s,i,n,t,a),l=[e.shape[0],e.shape[1]];if(t){let u=a.makeTensorInfo(l,"float32",o.real),d=a.makeTensorInfo(l,"float32",o.imag),c=a.makeTensorInfo([],"float32",v.createScalarValue(n,"float32")),p=Hn({inputs:{x:c},backend:a}),h=i2.kernelFunc({inputs:{a:u,b:c},backend:a}),f=i2.kernelFunc({inputs:{a:d,b:p},backend:a}),m=a.data.get(h.dataId).values,g=a.data.get(f.dataId).values;return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=T.mergeRealAndImagArrays(s,i),l=lz(o,n,t);return T.splitRealAndImagArrays(l)}}function oz(e){return(e&e-1)===0}function o2(e,t,a,n,r){if(a===1)return{real:e,imag:t};let s=T.mergeRealAndImagArrays(e,t),i=a/2,o=T.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],c=r.makeTensorInfo(d,"float32",l),p=r.makeTensorInfo(d,"float32",u),h=za({inputs:{real:c,imag:p},backend:r}),f=T.complexWithOddIndex(s),m=f.real,g=f.imag,A=[m.length],y=r.makeTensorInfo(A,"float32",m),x=r.makeTensorInfo(A,"float32",g),b=za({inputs:{real:y,imag:x},backend:r}),w=o2(l,u,i,n,r),S=w.real,N=w.imag,C=[S.length],M=r.makeTensorInfo(C,"float32",S),$=r.makeTensorInfo(C,"float32",N),E=za({inputs:{real:M,imag:$},backend:r}),I=o2(m,g,i,n,r),R=I.real,P=I.imag,D=[R.length],W=r.makeTensorInfo(D,"float32",R),V=r.makeTensorInfo(D,"float32",P),G=za({inputs:{real:W,imag:V},backend:r}),U=T.exponents(a,n),H=[U.real.length],Z=r.makeTensorInfo(H,"float32",U.real),Q=r.makeTensorInfo(H,"float32",U.imag),Y=za({inputs:{real:Z,imag:Q},backend:r}),ee=Lh({inputs:{a:Y,b:G},backend:r}),ne=el({inputs:{a:E,b:ee},backend:r}),J=m1({inputs:{a:E,b:ee},backend:r}),X=Qs({inputs:{input:ne},backend:r}),fe=Qs({inputs:{input:J},backend:r}),Ae=tl({inputs:{input:ne},backend:r}),Te=tl({inputs:{input:J},backend:r}),Ie=al({inputs:[X,fe],backend:r,attrs:{axis:0}}),Pe=al({inputs:[Ae,Te],backend:r,attrs:{axis:0}}),Ye=r.data.get(Ie.dataId).values,rt=r.data.get(Pe.dataId).values;return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(Te),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Pe),{real:Ye,imag:rt}}function lz(e,t,a){let n=new Float32Array(t*2);for(let r=0;r<t;r++){let s=0,i=0;for(let o=0;o<t;o++){let l=T.exponent(r*o,t,a),u=T.getComplexWithIndex(e,o);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}a&&(s/=t,i/=t),T.assignToTypedArray(n,s,i,r)}return n}function uz(e){let{inputs:t,backend:a}=e,{input:n}=t,r=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=r/s,o=dt({inputs:{x:n},backend:a,attrs:{shape:[i,s]}}),l=nw(o,!1,a),u=dt({inputs:{x:l},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var dz={kernelName:nh,backendName:"cpu",kernelFunc:uz};function y1(e){let{backend:t,attrs:a}=e,{shape:n,value:r,dtype:s}=a,i=s||v.inferDtype(r),o=v.getArrayFromDType(i,v.sizeFromShape(n));return cz(o,r,i),t.makeTensorInfo(n,i,o)}var pz={kernelName:gl,backendName:"cpu",kernelFunc:y1};function cz(e,t,a){e.fill(t)}var hz={kernelName:Si,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,r=a,s=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[i,o,l,u]=n.shape,d=r.data.get(n.dataId).values;for(let c=0;c<i;c++){let p=c*l*o*u;for(let h=0;h<o;h++){let f=h*(l*u);for(let m=0;m<l;m++){let g=m*u;for(let A=0;A<u;A++){let y=Math.round(l-m-1),x=p+f+g+A,b=d[x];if(y>=0&&y<l){let w=y*u,S=p+f+w+A;b=d[S]}s[x]=b}}}}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},fz=Ft((e,t)=>Math.floor(e/t)),mz=Ht(Ti,fz,null,"int32"),gz={kernelName:Ti,backendName:"cpu",kernelFunc:mz};function Az(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=tw({inputs:{x:r,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p}});if(i){let g=m;if(d==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let A=dt({inputs:{x:i},backend:a,attrs:{shape:[i.shape[0],1,1]}});m=el({inputs:{a:m,b:A},backend:a}),a.disposeIntermediateTensorInfo(A)}else m=el({inputs:{a:m,b:i},backend:a});a.disposeIntermediateTensorInfo(g)}if(h){let g=m;if(d==="NCHW"&&h==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let A=dt({inputs:{x:o},backend:a,attrs:{shape:[o.shape[0],1,1]}});m=_c(a,m,h,A,f),a.disposeIntermediateTensorInfo(A)}else m=_c(a,m,h,o,f);a.disposeIntermediateTensorInfo(g)}return m}var yz={kernelName:Wr,backendName:"cpu",kernelFunc:Az};function xz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=aw({inputs:{x:r,filter:s},backend:a,attrs:{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p}});if(i){let g=m;m=el({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=_c(a,m,h,o,f),a.disposeIntermediateTensorInfo(g)}return m}var bz={kernelName:Br,backendName:"cpu",kernelFunc:xz};function vz(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=v.sizeFromShape(n.shape),i=r.shape,o=i[i.length-1],[l,u,d,c]=T.prepareAndValidate(n,r);if(u===0)return a.makeTensorInfo(l,n.dtype,[]);let p=a.data.get(r.dataId).values,h=a.bufferSync(n),f=x7(p,h,n.dtype,u,o,d,c,n.shape,s);return a.makeTensorInfo(l,n.dtype,f.values)}var wz={kernelName:Ci,backendName:"cpu",kernelFunc:vz};function kz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n;me([r,s],"gatherV2");let l=v.parseAxisParam(i,r.shape)[0],u=a.data.get(s.dataId).values,d=r.shape[l];for(let b=0;b<u.length;++b){let w=u[b];v.assert(w<=d-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${d-1}]`)}let c=o;o==null&&(c=0);let p=v.sizeFromShape(s.shape),h=T.segment_util.collectGatherOpShapeInfo(r,s,l,c),f=dt({inputs:{x:r},backend:a,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=dt({inputs:{x:s},backend:a,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],A=a.bufferSync(m),y=a.bufferSync(f),x=b7(y,A,g);return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.makeTensorInfo(h.outputShape,x.dtype,x.values)}var Iz={kernelName:Al,backendName:"cpu",kernelFunc:kz};function Sz(e){let{inputs:t,backend:a}=e,{input:n}=t,r=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=r/s,o=dt({inputs:{x:n},backend:a,attrs:{shape:[i,s]}}),l=nw(o,!0,a),u=dt({inputs:{x:l},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(l),u}var Tz={kernelName:rh,backendName:"cpu",kernelFunc:Sz},Nz=nt(bd,e=>Number.isFinite(e)?1:0,"bool"),Cz={kernelName:bd,backendName:"cpu",kernelFunc:Nz},Ez=nt(vd,e=>Math.abs(e)===1/0?1:0,"bool"),Rz={kernelName:vd,backendName:"cpu",kernelFunc:Ez},_z=nt(yl,e=>Number.isNaN(e)?1:0,"bool"),$z={kernelName:yl,backendName:"cpu",kernelFunc:_z};function Mz(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:s}=a,i=S7(n,r,s);return t.makeTensorInfo([i.length],"float32",i)}var Fz={kernelName:sh,backendName:"cpu",kernelFunc:Mz},Oz=nt(wd,e=>Math.log1p(e)),Pz={kernelName:wd,backendName:"cpu",kernelFunc:Oz},Dz=Ft((e,t)=>e&&t),zz=Ht(_i,Dz,null,"bool"),Lz={kernelName:_i,backendName:"cpu",kernelFunc:zz},Wz=nt($i,e=>e?0:1,"bool"),Bz={kernelName:$i,backendName:"cpu",kernelFunc:Wz},Vz=Ft((e,t)=>e||t),Uz=Ht(xl,Vz,null,"bool"),Gz={kernelName:xl,backendName:"cpu",kernelFunc:Uz};function Hz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;me(r,"LRN");let u=r.shape[3],d=u-1,c=a.data.get(r.dataId).values,p=v.sizeFromShape(r.shape),h=new Float32Array(p);function f(m){let g=m%u,A=m-g+Math.max(0,g-s),y=m-g+Math.min(g+s,d),x=0;for(;A<=y;A++){let b=c[A];x+=b*b}return x}for(let m=0;m<p;m++){let g=f(m),A=c[m]*Math.pow(i+o*g,-l);h[m]=A}return a.makeTensorInfo(r.shape,r.dtype,h)}var jz={kernelName:ih,backendName:"cpu",kernelFunc:Hz};function qz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=n;me(i,"LRNGrad");let c=v.sizeFromShape(i.shape),p=i.shape[3],h=a.data.get(i.dataId).values,f=a.data.get(r.dataId).values,m=a.data.get(s.dataId).values,g=new Float32Array(c),A=c;for(let y=0;y<A;y++){let x=y%p,b=y-x+Math.max(0,x-o),w=y-x+Math.min(p,x+o+1),S=0;for(let N=b;N<w;N++)S+=Math.pow(f[N],2);S=u*S+l;for(let N=b;N<w;N++){let C=-2*u*d*f[N]*m[y]/S;y===N&&(C+=Math.pow(S,-d)),C*=h[y],g[N]+=C}}return a.makeTensorInfo(i.shape,r.dtype,g)}var Xz={kernelName:j2,backendName:"cpu",kernelFunc:qz};function rw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n,o=a,l=r.shape,u=l.length,d=v.parseAxisParam(s,l),c=d,p=T.getAxesPermutation(c,u),h=o.data.get(r.dataId).values;if(p!=null){let b=new Array(u);for(let w=0;w<b.length;w++)b[w]=l[p[w]];h=u1(h,l,r.dtype,p,b),c=T.getInnerMostAxes(c.length,u),l=b}me(r,"max"),T.assertAxesAreInnerMostDims("max",c,u);let[f,m]=T.computeOutAndReduceShapes(l,c),g=v.sizeFromShape(m),A=N7(h,g,f,r.dtype),y=o.write(A,f,r.dtype),x=f;return i&&(x=T.expandShapeToKeepDim(f,d)),{dataId:y,shape:x,dtype:r.dtype}}var Kz={kernelName:Mi,backendName:"cpu",kernelFunc:rw};function Zz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;me(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,s,i,u,o,l),c;if(d.filterWidth===1&&d.filterHeight===1&&v.arraysEqual(d.inShape,d.outShape))c=Hn({inputs:{x:r},backend:a});else{let p=a.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=g1(p,r.shape,r.dtype,h,d,"max");c=a.makeTensorInfo(d.outShape,r.dtype,f.values)}return c}var Yz={kernelName:Fi,backendName:"cpu",kernelFunc:Zz};function Jz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;me(r,"maxPool3d");let d=T.computePool3DInfo(r.shape,s,i,1,o,l,u),c=a.data.get(r.dataId).values,p=ew(c,r.shape,r.dtype,v.computeStrides(r.shape),d,"max");return a.makeTensorInfo(p.shape,"float32",p.values)}var Qz={kernelName:oh,backendName:"cpu",kernelFunc:Jz};function eL(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;me([r,s],"maxPool3DGrad");let d=T.computePool3DInfo(s.shape,i,o,1,l,u),c=a.bufferSync(s),p=BP(c,d),h=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,A=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,b=d.effectiveFilterHeight,w=d.effectiveFilterWidth,S=x-1-d.padInfo.front,N=w-1-d.padInfo.left,C=b-1-d.padInfo.top,M=xe(s.shape,"float32"),$=a.bufferSync(r);for(let E=0;E<d.batchSize;++E)for(let I=0;I<d.inChannels;++I)for(let R=0;R<d.inDepth;++R)for(let P=0;P<d.inHeight;++P)for(let D=0;D<d.inWidth;++D){let W=R-S,V=P-C,G=D-N,U=0;for(let H=0;H<x;H+=g){let Z=(W+H)/h;if(!(Z<0||Z>=d.outDepth||Math.floor(Z)!==Z))for(let Q=0;Q<b;Q+=A){let Y=(V+Q)/f;if(!(Y<0||Y>=d.outHeight||Math.floor(Y)!==Y))for(let ee=0;ee<w;ee+=y){let ne=(G+ee)/m;if(ne<0||ne>=d.outWidth||Math.floor(ne)!==ne)continue;let J=x*b*w-1-p.get(E,Z,Y,ne,I),X=H*b*w+Q*w+ee,fe=J===X?1:0;fe!==0&&(U+=$.get(E,Z,Y,ne,I)*fe)}}}M.set(U,E,R,P,D,I)}return a.makeTensorInfo(M.shape,M.dtype,M.values)}var tL={kernelName:X2,backendName:"cpu",kernelFunc:eL};function aL(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s,output:i}=t,o=s;me([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:c}=n,p=T.computePool2DInfo(o.shape,l,u,1,d,c),h=a.data.get(o.dataId).values,f=xe(p.outShape,o.dtype,Q7(h,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,A=p.dilationHeight,y=p.dilationWidth,x=p.effectiveFilterHeight,b=p.effectiveFilterWidth,w=b-1-p.padInfo.left,S=x-1-p.padInfo.top,N=xe(o.shape,"float32"),C=a.data.get(r.dataId).values,M=xe(r.shape,"float32",C);for(let $=0;$<p.batchSize;++$)for(let E=0;E<p.inChannels;++E)for(let I=0;I<p.inHeight;++I)for(let R=0;R<p.inWidth;++R){let P=I-S,D=R-w,W=0;for(let V=0;V<x;V+=A){let G=(P+V)/m;if(!(G<0||G>=p.outHeight||Math.floor(G)!==G))for(let U=0;U<b;U+=y){let H=(D+U)/g;if(H<0||H>=p.outWidth||Math.floor(H)!==H)continue;let Z=x*b-1-f.get($,G,H,E),Q=V*b+U,Y=Z===Q?1:0;Y!==0&&(W+=M.get($,G,H,E)*Y)}}N.set(W,$,I,R,E)}return a.makeTensorInfo(N.shape,N.dtype,N.values)}var nL={kernelName:q2,backendName:"cpu",kernelFunc:aL};function rL(e,t,a,n,r){let s=v.computeStrides(t),i=g1(e,t,a,s,r,"max"),o=Q7(e,t,a,r,!0,n);return[i.values,o.values]}var sL={kernelName:lh,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;me(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,d=T.computePool2DInfo(n.shape,r,s,[1,1],i),[c,p]=rL(u,n.shape,n.dtype,o,d),h=l.write(c,d.outShape,n.dtype),f=l.write(p,d.outShape,n.dtype);return[{dataId:h,shape:d.outShape,dtype:n.dtype},{dataId:f,shape:d.outShape,dtype:"int32"}]}};function iL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=v.parseAxisParam(s,r.shape),l=T.computeOutAndReduceShapes(r.shape,o)[1],u=v.sizeFromShape(l),d=[],c=a.makeTensorInfo([],"float32",new Float32Array([u]));d.push(c);let p=Gr({inputs:{x:r},backend:a,attrs:{dtype:"float32"}});d.push(p);let h=A1({inputs:{a:p,b:c},backend:a});d.push(h);let f=Kd({inputs:{x:h},backend:a,attrs:{axis:s,keepDims:i}});return d.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var oL={kernelName:Oi,backendName:"cpu",kernelFunc:iL};function lL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;me(r,"min");let o=v.parseAxisParam(s,r.shape),l=o,u=T.getAxesPermutation(l,r.shape.length),d=r;u!=null&&(d=Ra({inputs:{x:r},backend:a,attrs:{perm:u}}),l=T.getInnerMostAxes(l.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",l,d.shape.length);let[c,p]=T.computeOutAndReduceShapes(d.shape,l),h=v.sizeFromShape(p),f=v.makeZerosTypedArray(v.sizeFromShape(c),d.dtype),m=a.data.get(d.dataId).values;for(let A=0;A<f.length;++A){let y=A*h,x=m[y];for(let b=0;b<h;++b){let w=m[y+b];(Number.isNaN(w)||w<x)&&(x=w)}f[A]=x}u!=null&&a.disposeIntermediateTensorInfo(d);let g=a.makeTensorInfo(c,d.dtype,f);if(i){let A=T.expandShapeToKeepDim(c,o),y=dt({inputs:{x:g},backend:a,attrs:{shape:A}});return a.disposeIntermediateTensorInfo(g),y}return g}var uL={kernelName:Pi,backendName:"cpu",kernelFunc:lL};function dL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,mode:i}=n;me(r,"mirrorPad");let o=s.map((y,x)=>y[0]+r.shape[x]+y[1]),l=s.map(y=>y[0]),u=s.map((y,x)=>y[0]+r.shape[x]),d=i==="reflect"?0:1,c=a.data.get(r.dataId).values,p=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(o),m=o.length,g=v.computeStrides(o),A=v.getTypedArrayFromDType(r.dtype,f);for(let y=0;y<f;y++){let x=v.indexToLoc(y,m,g);for(let w=0;w<m;w++)x[w]<l[w]?x[w]=l[w]*2-x[w]-d:x[w]>=u[w]&&(x[w]=(u[w]-1)*2-x[w]+d);x=x.map((w,S)=>w-l[S]);let b=v.locToIndex(x,p,h);A[y]=c[b]}return{dataId:a.write(A,o,r.dtype),shape:o,dtype:r.dtype}}var pL={kernelName:Di,backendName:"cpu",kernelFunc:dL},cL=Ft((e,t)=>{let a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}),hL=Ht(kd,cL),fL={kernelName:kd,backendName:"cpu",kernelFunc:hL},mL=il(g5());function sw(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=r.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=v.parseAxisParam([o],r.shape),u=rw({inputs:{x:r},backend:a,attrs:{reductionIndices:l,keepDims:!1}}),d=T.expandShapeToKeepDim(u.shape,l),c=dt({inputs:{x:u},backend:a,attrs:{shape:d}}),p=m1({inputs:{a:r,b:c},backend:a}),h=g7({inputs:{x:p},backend:a}),f=Kd({inputs:{x:h},backend:a,attrs:{axis:l,keepDims:!1}}),m=dt({inputs:{x:f},backend:a,attrs:{shape:d}}),g=A1({inputs:{a:h,b:m},backend:a});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var gL={kernelName:Yi,backendName:"cpu",kernelFunc:sw};function AL(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n;me(r,"multinomial");let l=o?r:sw({inputs:{logits:r},backend:a,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],c=a.data.get(l.dataId).values,p=[u,s],h=v.makeZerosTypedArray(v.sizeFromShape(p),"int32");for(let f=0;f<u;++f){let m=f*d,g=new Float32Array(d-1);g[0]=c[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+c[m+x];let A=mL.alea(i.toString()),y=f*s;for(let x=0;x<s;++x){let b=A();h[y+x]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[y+x]=w;break}}}return o||a.disposeIntermediateTensorInfo(l),a.makeTensorInfo(p,"int32",h)}var yL={kernelName:uh,backendName:"cpu",kernelFunc:AL},xL=An.nonMaxSuppressionV3Impl;function bL(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n;me(r,"NonMaxSuppression");let u=a.data.get(r.dataId).values,d=a.data.get(s.dataId).values,{selectedIndices:c}=xL(u,d,i,o,l);return a.makeTensorInfo([c.length],"int32",new Int32Array(c))}var vL={kernelName:zi,backendName:"cpu",kernelFunc:bL},wL=An.nonMaxSuppressionV4Impl;function kL(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n;me(r,"NonMaxSuppressionPadded");let d=a.data.get(r.dataId).values,c=a.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=wL(d,c,i,o,l,u);return[a.makeTensorInfo([p.length],"int32",new Int32Array(p)),a.makeTensorInfo([],"int32",new Int32Array([h]))]}var IL={kernelName:vl,backendName:"cpu",kernelFunc:kL},SL=An.nonMaxSuppressionV5Impl;function TL(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n;me(r,"NonMaxSuppressionWithScore");let d=a.data.get(r.dataId).values,c=a.data.get(s.dataId).values,p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:A}=SL(d,c,p,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var NL={kernelName:Li,backendName:"cpu",kernelFunc:TL};function CL(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n;me(r,"oneHot");let u=v.sizeFromShape(r.shape),d=new Float32Array(u*i);d.fill(l);let c=a.data.get(r.dataId).values;for(let p=0;p<u;++p)c[p]>=0&&c[p]<i&&(d[p*i+c[p]]=o);return a.makeTensorInfo([...r.shape,i],s,d)}var EL={kernelName:kl,backendName:"cpu",kernelFunc:CL};function Mc(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let r=Qs({inputs:{input:n},backend:a}),s=Mc({inputs:{x:r},backend:a}),i=tl({inputs:{input:n},backend:a}),o=Mc({inputs:{x:i},backend:a}),l=za({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return y1({backend:a,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var RL={kernelName:Ll,backendName:"cpu",kernelFunc:Mc};function iw(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let r=Qs({inputs:{input:n},backend:a}),s=iw({inputs:{x:r},backend:a}),i=tl({inputs:{input:n},backend:a}),o=Mc({inputs:{x:i},backend:a}),l=za({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return y1({backend:a,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var _L={kernelName:wl,backendName:"cpu",kernelFunc:iw};function ow(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return $c({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{v.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let c=$c({inputs:{input:d},backend:a,attrs:{dim:r}});return o.push(c),c}),u=al({inputs:l,backend:a,attrs:{axis:r}});return o.forEach(d=>a.disposeIntermediateTensorInfo(d)),u}var $L={kernelName:Il,backendName:"cpu",kernelFunc:ow};function ML(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;me(r,"pad");let o=s.map((A,y)=>A[0]+r.shape[y]+A[1]),l=s.map(A=>A[0]),u=a.data.get(r.dataId).values,d=v.sizeFromShape(r.shape),c=r.shape.length,p=v.computeStrides(r.shape),h=v.sizeFromShape(o),f=o.length,m=v.computeStrides(o),g=v.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let A=0;A<d;A++){let y=v.indexToLoc(A,c,p).map((b,w)=>b+l[w]),x=v.locToIndex(y,f,m);g[x]=u[A]}return{dataId:a.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var lw={kernelName:Wi,backendName:"cpu",kernelFunc:ML},FL=Ft((e,t)=>Math.pow(e,t)),OL=Ht(Bi,FL),PL={kernelName:Bi,backendName:"cpu",kernelFunc:OL};function DL(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=r.map(A=>a.data.get(A.dataId).values),u=r.map(A=>A.shape),d=a.data.get(s.dataId).values,c=a.data.get(i.dataId).values,[p,h,f]=M7(l,u,d,s.shape,s.dtype,c,i.shape,o),m=p.map(A=>a.makeTensorInfo([A.length],"int32",A)),g=a.makeTensorInfo(f,s.dtype,h);return m.concat([g])}var zL={kernelName:dh,backendName:"cpu",kernelFunc:DL};function LL(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:s}=t,i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,[u,d]=F7(i,n.shape,n.dtype,o,r.shape,l,s.shape),c=a.makeTensorInfo([u.length],"int32",u),p=a.makeTensorInfo([d.length],n.dtype,d);return[c,p]}var WL={kernelName:ph,backendName:"cpu",kernelFunc:LL};function BL(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=a.data.get(r.dataId).values,d=a.data.get(s.dataId).values,c=a.data.get(i.dataId).values,p=o.map(g=>a.data.get(g.dataId).values),h=o.map(g=>g.shape),[f,m]=O7(u,r.shape,d,s.shape,s.dtype,c,i.shape,p,h,l);return a.makeTensorInfo(f,s.dtype,m)}var VL={kernelName:ch,backendName:"cpu",kernelFunc:BL};function UL(e){let{backend:t,attrs:a}=e,{start:n,stop:r,dtype:s,step:i}=a,o=d1(n,r,i,s);return t.makeTensorInfo([o.length],s,o)}var GL={kernelName:Sl,backendName:"cpu",kernelFunc:UL},HL=nt(Tl,e=>1/e),jL={kernelName:Tl,backendName:"cpu",kernelFunc:HL};function qL(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;me(r,"resizeBilinear");let l=v.computeStrides(r.shape),[u,d]=o,[c,p,h,f]=r.shape,m=a.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([c,u,d,f])),A=[s&&u>1?p-1:p,s&&d>1?h-1:h],y=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=0,b=A[0]/y[0],w=A[1]/y[1];for(let S=0;S<c;S++)for(let N=0;N<u;N++){let C;i?C=b*(N+.5)-.5:C=b*N;let M=Math.max(0,Math.floor(C)),$=C-M,E=Math.min(p-1,Math.ceil(C)),I=S*l[0]+M*l[1],R=S*l[0]+E*l[1];for(let P=0;P<d;P++){let D;i?D=w*(P+.5)-.5:D=w*P;let W=Math.max(0,Math.floor(D)),V=D-W,G=Math.min(h-1,Math.ceil(D)),U=I+W*l[2],H=R+W*l[2],Z=I+G*l[2],Q=R+G*l[2];for(let Y=0;Y<f;Y++){let ee=m[U+Y],ne=m[H+Y],J=m[Z+Y],X=m[Q+Y],fe=ee+(J-ee)*V,Ae=ne+(X-ne)*V,Te=fe+(Ae-fe)*$;g[x++]=Te}}}return a.makeTensorInfo([c,u,d,f],"float32",g)}var XL={kernelName:ji,backendName:"cpu",kernelFunc:qL};function KL(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n;me([s,r],"resizeBilinearGrad");let o=v.computeStrides(r.shape),[l,u,d,c]=r.shape,[,p,h]=s.shape,f=new Float32Array(l*u*d*c),m=[i&&p>1?u-1:u,i&&h>1?d-1:d],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],A=m[0]/g[0],y=m[1]/g[1],x=a.data.get(s.dataId).values,b=0;for(let w=0;w<l;w++){let S=w*o[0];for(let N=0;N<p;N++){let C=N*A,M=Math.floor(C),$=Math.min(Math.ceil(C),u-1),E=S+M*o[1],I=S+$*o[1],R=C-M,P=1-R;for(let D=0;D<h;D++){let W=D*y,V=Math.floor(W),G=Math.min(Math.ceil(W),d-1),U=W-V,H=1-U,Z=E+V*o[2],Q=E+G*o[2],Y=I+V*o[2],ee=I+G*o[2],ne=P*H,J=P*U,X=R*H,fe=R*U;for(let Ae=0;Ae<c;Ae++){let Te=x[b++];f[Z+Ae]+=Te*ne,f[Q+Ae]+=Te*J,f[Y+Ae]+=Te*X,f[ee+Ae]+=Te*fe}}}}return a.makeTensorInfo([l,d,u,c],"float32",f)}var ZL={kernelName:Z2,backendName:"cpu",kernelFunc:KL};function YL(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;me(r,"resizeNearestNeighbor");let l=v.computeStrides(r.shape),[u,d]=o,[c,p,h,f]=r.shape,m=a.data.get(r.dataId).values,g=new Float32Array(c*u*d*f),A=[s&&u>1?p-1:p,s&&d>1?h-1:h],y=[s&&u>1?u-1:u,s&&d>1?d-1:d],x=A[0]/y[0],b=A[1]/y[1],w=0;for(let S=0;S<c;S++){let N=S*l[0];for(let C=0;C<u;C++){let M=i?x*(C+.5):x*C,$=Math.min(p-1,s?Math.round(M):Math.floor(M));i&&($=Math.max(0,$));let E=N+$*l[1];for(let I=0;I<d;I++){let R=i?b*(I+.5):b*I,P=Math.min(h-1,s?Math.round(R):Math.floor(R));i&&(P=Math.max(0,P));let D=E+P*l[2];for(let W=0;W<f;W++){let V=m[D+W];g[w++]=V}}}}return a.makeTensorInfo([c,u,d,f],r.dtype,g)}var JL={kernelName:Hi,backendName:"cpu",kernelFunc:YL};function QL(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n;me([s,r],"resizeNearestNeighborGrad");let o=v.computeStrides(r.shape),l=v.computeStrides(s.shape),[u,d,c,p]=r.shape,[,h,f]=s.shape,m=new Float32Array(u*d*c*p),g=a.data.get(s.dataId).values,A=[i&&h>1?d-1:d,i&&f>1?c-1:c],y=[i&&h>1?h-1:h,i&&f>1?f-1:f],x=A[0]/y[0],b=A[1]/y[1],w=1/x,S=1/b,N=Math.ceil(w)*2+2,C=Math.ceil(S)*2+2;for(let M=0;M<u;M++){let $=M*o[0];for(let E=0;E<d;E++){let I=$+E*o[1],R=Math.floor(E*w),P=Math.floor(R-N/2);for(let D=0;D<c;D++){let W=I+D*o[2],V=Math.floor(D*S),G=Math.floor(V-C/2);for(let U=0;U<p;U++){let H=0;for(let Z=0;Z<N;Z++){let Q=Z+P;if(Q<0||Q>=h)continue;let Y=$+Q*l[1],ee=Q*x,ne=Math.min(d-1,i?Math.round(ee):Math.floor(ee));if(E===ne)for(let J=0;J<C;J++){let X=J+G;if(X<0||X>=f)continue;let fe=Y+X*l[2],Ae=X*b,Te=Math.min(c-1,i?Math.round(Ae):Math.floor(Ae));D===Te&&(H+=g[fe+U])}}m[W+U]=H}}}}return a.makeTensorInfo(r.shape,r.dtype,m)}var eW={kernelName:K2,backendName:"cpu",kernelFunc:QL};function tW(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n;me(r,"reverse");let i=r.shape.length,o=v.parseAxisParam(s,r.shape);if(i===0)return Hn({inputs:{x:r},backend:a});let l=new Ct(r.shape,r.dtype),u=a.bufferSync(r);for(let d=0;d<l.size;d++){let c=l.indexToLoc(d),p=c.slice();o.forEach(h=>p[h]=r.shape[h]-1-p[h]),l.set(u.get(...p),...c)}return a.makeTensorInfo(l.shape,l.dtype,l.values)}var aW={kernelName:Cl,backendName:"cpu",kernelFunc:tW},nW={kernelName:no,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,l=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[u,d,c,p]=n.shape,[h,f]=T.getImageCenter(i,d,c),m=255,g=Math.sin(r),A=Math.cos(r),y=o.data.get(n.dataId).values;for(let x=0;x<u;x++){let b=x*c*d*p;for(let w=0;w<d;w++){let S=w*(c*p);for(let N=0;N<c;N++){let C=N*p;for(let M=0;M<p;M++){let $=[u,w,N,M],E=$[2],I=$[1],R=(E-h)*A-(I-f)*g,P=(E-h)*g+(I-f)*A;R=Math.round(R+h),P=Math.round(P+f);let D=s;if(typeof s!="number"&&(M===3?D=m:D=s[M]),R>=0&&R<c&&P>=0&&P<d){let V=P*(c*p),G=R*p,U=b+V+G+M;D=y[U]}let W=b+S+C+M;l[W]=D}}}}return{dataId:o.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rW=nt(El,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),sW={kernelName:El,backendName:"cpu",kernelFunc:rW};function iW(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=T.calculateShapes(s,r,i),p=!0,h=a.bufferSync(r),f=a.bufferSync(s),m=Po(h,f,i,c,u,l,o,d,0,p);return a.makeTensorInfo(i,m.dtype,m.values)}var oW={kernelName:Xi,backendName:"cpu",kernelFunc:iW};function lW(e,t){let a=0,n=e.length,r=0;for(;a<n;)r=Math.floor((a+n)/2),e[r]<t?a=r+1:n=r;return n}function uW(e,t){let a=0,n=e.length,r=0;for(;a<n;)r=Math.floor((a+n)/2),e[r]<=t?a=r+1:n=r;return n}function dW(e,t,a,n,r,s){let i=v.getArrayFromDType("int32",a*r);for(let o=0;o<a;++o){let l=e.slice(o*n,(o+1)*n),u=o*r;for(let d=0;d<r;++d)i[u+d]=s==="left"?lW(l,t[d+u]):uW(l,t[d+u])}return i}function pW(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n,o=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,u=dW(o,l,r.shape[0],r.shape[1],s.shape[1],i);return a.makeTensorInfo(s.shape,"int32",u)}var cW={kernelName:hh,backendName:"cpu",kernelFunc:pW};function hW(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t;me([n,r,s],"select");let i=n.shape.length,o=a.data.get(n.dataId).values,l=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,d=Yt(r.dtype,s.dtype),c=v.makeZerosTypedArray(v.sizeFromShape(r.shape),d),p=0,h=i===0||i>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<h;m++)o[f]===1?c[p++]=l[f]:c[p++]=u[f];return a.makeTensorInfo(r.shape,d,c)}var fW={kernelName:Rl,backendName:"cpu",kernelFunc:hW},mW=T.SELU_SCALEALPHA,gW=T.SELU_SCALE,AW=nt(Sd,e=>e>=0?gW*e:mW*(Math.exp(e)-1)),yW={kernelName:Sd,backendName:"cpu",kernelFunc:AW},xW=nt(Td,e=>e<0?-1:e>0?1:0),bW={kernelName:Td,backendName:"cpu",kernelFunc:xW},vW=nt(Ki,e=>Math.sin(e)),wW={kernelName:Ki,backendName:"cpu",kernelFunc:vW},kW=nt($l,e=>Math.sinh(e)),IW={kernelName:$l,backendName:"cpu",kernelFunc:kW},SW=11920928955078125e-23,JA=Math.log(SW)+2,TW=nt(Nd,e=>{let t=e>-JA,a=e<JA,n=Math.exp(e),r;return a?r=n:t?r=e:r=Math.log(1+n),r}),NW={kernelName:Nd,backendName:"cpu",kernelFunc:TW};function CW(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;me([r],"spaceToBatchND");let o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);let u=lw.kernelFunc({inputs:{x:r},backend:a,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),c=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),h=dt({inputs:{x:u},backend:a,attrs:{shape:d}}),f=Ra({inputs:{x:h},backend:a,attrs:{perm:c}}),m=dt({inputs:{x:f},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),m}var EW={kernelName:Ml,backendName:"cpu",kernelFunc:CW};function RW(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.data.get(n.dataId).values,l=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,d=a.data.get(i.dataId).values[0],[c,p,h,f,m]=z7(o,n.shape,n.dtype,l,r.dtype,u,d);return[a.makeTensorInfo(p,n.dtype,c),a.makeTensorInfo([p[0]],r.dtype,h),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var _W={kernelName:Cd,backendName:"cpu",kernelFunc:RW};function $W(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.data.get(r.dataId).values),o=a.data.get(n.dataId).values,l=Array.from(a.data.get(s.dataId).values),[u,d,c]=L7(o,n.shape,n.dtype,i,l);return[a.makeTensorInfo(d,n.dtype,u),a.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var MW={kernelName:Ol,backendName:"cpu",kernelFunc:$W};function FW(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,[u,d]=p1(i,n.shape,n.dtype,o,l,!0);return a.makeTensorInfo(d,n.dtype,u)}var OW={kernelName:Ed,backendName:"cpu",kernelFunc:FW};function PW(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,[u,d]=p1(i,n.shape,n.dtype,o,l);return a.makeTensorInfo(d,n.dtype,u)}var DW={kernelName:Rd,backendName:"cpu",kernelFunc:PW};function zW(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=T.calculateShapes(s,r,o),h=!1,f=a.bufferSync(r),m;switch(s.dtype){case"bool":{let g=a.bufferSync(s),A=Boolean(a.data.get(i.dataId).values[0]);m=Po(f,g,o,p,d,u,l,c,A,h);break}case"float32":{let g=a.bufferSync(s),A=a.data.get(i.dataId).values[0];m=Po(f,g,o,p,d,u,l,c,A,h);break}case"int32":{let g=a.bufferSync(s),A=a.data.get(i.dataId).values[0];m=Po(f,g,o,p,d,u,l,c,A,h);break}case"string":{let g=a.bufferSync(s),A=v.decodeString(a.data.get(i.dataId).values[0]);m=Po(f,g,o,p,d,u,l,c,A,h);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return a.makeTensorInfo(o,m.dtype,m.values)}var LW={kernelName:_d,backendName:"cpu",kernelFunc:zW};function WW(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],l=T.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(c=>{let p=[...d];p[o]=c;let h=ei({inputs:{x:r},backend:a,attrs:{begin:u,size:p}});return u[o]+=c,h})}var BW={kernelName:Fl,backendName:"cpu",kernelFunc:WW},VW={kernelName:$d,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,n=t;me(a,"square");let r=n.data.get(a.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){let o=r[i];s[i]=o*o}return{dataId:n.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},UW=nt(ao,(e,t)=>{let a=t;return isNaN(e)?NaN:e>0?1:a.alpha}),GW={kernelName:ao,backendName:"cpu",kernelFunc:UW};function HW(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=n;me(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:y,end:x,strides:b}=gt.sliceInfo(r.shape,s,i,o,l,u,d,c,p),w;if(m)w=dt({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=gt.computeOutShape(y,x,b),N=ei({inputs:{x:r},backend:a,attrs:{begin:y,size:S}});w=dt({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(N)}else{let S=a.bufferSync(r),N=B7(h,S,b,y);w=a.makeTensorInfo(f,N.dtype,N.values)}return w}var jW={kernelName:Ji,backendName:"cpu",kernelFunc:HW};function qW(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:d,dataSplits:c}=t,p=a.data.get(d.dataId).values,h=a.data.get(c.dataId).values,[f,m]=c1(p,h,r,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(c.shape,"int32",m)]}var XW={kernelName:Pl,backendName:"cpu",kernelFunc:qW};function KW(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values[0],[u,d,c]=h1(o,l,r),p=d.length;return[a.makeTensorInfo([p,2],"int32",u),a.makeTensorInfo([p],"string",d),a.makeTensorInfo([2],"int32",new Int32Array(c))]}var ZW={kernelName:Md,backendName:"cpu",kernelFunc:KW};function YW(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=a.data.get(s.dataId).values,o=f1(i,r);return a.makeTensorInfo(s.shape,"int32",o)}var JW={kernelName:Fd,backendName:"cpu",kernelFunc:YW},QW=nt(Dl,e=>Math.tan(e)),eB={kernelName:Dl,backendName:"cpu",kernelFunc:QW},tB=nt(Qi,e=>Math.tanh(e)),aB={kernelName:Qi,backendName:"cpu",kernelFunc:tB};function nB(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;me(r,"tile");let i=U7(a.bufferSync(r),s);return a.makeTensorInfo(i.shape,i.dtype,i.values)}var rB={kernelName:hs,backendName:"cpu",kernelFunc:nB};function sB(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n;me(r,"topk");let o=a.data.get(r.dataId).values,[l,u]=H7(o,r.shape,r.dtype,s,i);return[a.makeTensorInfo(l.shape,l.dtype,l.values),a.makeTensorInfo(u.shape,u.dtype,u.values)]}var iB={kernelName:eo,backendName:"cpu",kernelFunc:sB};function oB(e){let{inputs:t,attrs:a,backend:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[d,c,p,h]=r.shape,[f,m]=u??[c,p],g=[d,f,m,h],A=v.computeStrides(r.shape),y=A[0],x=A[1],b=A[2],w=v.computeStrides(g),S=w[0],N=w[1],C=w[2],M=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));M.fill(l);let $=n.data.get(r.dataId).values,E=n.data.get(s.dataId).values;for(let I=0;I<d;++I){let R=s.shape[0]===1?E:E.subarray(I*8,I*8+8);for(let P=0;P<f;++P)for(let D=0;D<m;++D)for(let W=0;W<h;++W){let V,G=R[6]*D+R[7]*P+1;if(G===0)continue;let U=(R[0]*D+R[1]*P+R[2])/G,H=(R[3]*D+R[4]*P+R[5])/G,Z=QA(U,p,o),Q=QA(H,c,o);switch(i){case"nearest":V=hB($,c,p,y,x,b,I,Q,Z,W,l);break;case"bilinear":V=fB($,c,p,y,x,b,I,Q,Z,W,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let Y=I*S+P*N+D*C+W;M[Y]=V}return n.makeTensorInfo(g,r.dtype,M)}return{dataId:n.write(M,g,r.dtype),shape:r.shape,dtype:r.dtype}}var lB={kernelName:to,backendName:"cpu",kernelFunc:oB};function QA(e,t,a){switch(a){case"reflect":return uB(e,t);case"wrap":return dB(e,t);case"nearest":return cB(e,t);case"constant":default:return pB(e,t)}}function uB(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let n=2*t;a<n&&(a=n*Math.trunc(-a/n)+a),a=a<-t?a+n:-a-1}else if(a>t-1)if(t<=1)a=0;else{let n=2*t;a-=n*Math.trunc(a/n),a>=t&&(a=n-a-1)}return v.clamp(0,a,t-1)}function dB(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let n=t-1;a+=t*(Math.trunc(-a/n)+1)}else if(a>t-1)if(t<=1)a=0;else{let n=t-1;a-=t*Math.trunc(a/n)}return v.clamp(0,a,t-1)}function pB(e,t){return e}function cB(e,t){return v.clamp(0,e,t-1)}function vu(e,t,a,n,r,s,i,o,l,u,d){let c=i*n+o*r+l*s+u;return 0<=o&&o<t&&0<=l&&l<a?e[c]:d}function hB(e,t,a,n,r,s,i,o,l,u,d){let c=Math.round(o),p=Math.round(l);return vu(e,t,a,n,r,s,i,c,p,u,d)}function fB(e,t,a,n,r,s,i,o,l,u,d){let c=Math.floor(o),p=Math.floor(l),h=c+1,f=p+1,m=(f-l)*vu(e,t,a,n,r,s,i,c,p,u,d)+(l-p)*vu(e,t,a,n,r,s,i,c,f,u,d),g=(f-l)*vu(e,t,a,n,r,s,i,h,p,u,d)+(l-p)*vu(e,t,a,n,r,s,i,h,f,u,d);return(h-o)*m+(o-c)*g}function mB(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:s}=t;me(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=j7(i,r,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}var gB={kernelName:fh,backendName:"cpu",kernelFunc:mB};function AB(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),u=0;for(let h=0;h<i;h++)h!==s&&(l[u++]=r.shape[h]);let d=new Array(i).fill(0),c=r.shape.slice();c[s]=1;let p=new Array(o);for(let h=0;h<p.length;h++){d[s]=h;let f=ei({inputs:{x:r},backend:a,attrs:{begin:d,size:c}});p[h]=dt({inputs:{x:f},backend:a,attrs:{shape:l}}),a.disposeIntermediateTensorInfo(f)}return p}var yB={kernelName:zl,backendName:"cpu",kernelFunc:AB};function xB(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:s}=t,{numSegments:i}=n;me(r,"unsortedSegmentSum");let o=r.shape.length,l=s.shape.length,u=[],d=[],c=o-l,p=s;for(let f=0;f<c;++f){let m=$c({inputs:{input:p},backend:a,attrs:{dim:f+1}});p=m,d.push(m)}for(let f=0;f<i;++f){let m=v.createScalarValue(f,"int32"),g=a.makeTensorInfo([],"int32",m),A=f7({inputs:{a:g,b:p},backend:a}),y=Gr({inputs:{x:A},backend:a,attrs:{dtype:"float32"}}),x=Lh({inputs:{a:y,b:r},backend:a}),b=Kd({inputs:{x},backend:a,attrs:{axis:0,keepDims:!1}});u.push(b),d.push(g),d.push(A),d.push(y),d.push(x),d.push(b)}let h=ow({inputs:u,backend:a,attrs:{axis:0}});return d.forEach(f=>a.disposeIntermediateTensorInfo(f)),h}var bB={kernelName:mh,backendName:"cpu",kernelFunc:xB},vB=[mP,tO,AP,xP,oO,vP,kP,SP,NP,EP,_P,MP,OP,zP,WP,UP,HP,qP,KP,hP,YP,QP,tD,nD,sO,uO,sD,aO,oD,uD,dD,cD,fD,gD,yD,bD,wD,ID,TD,CD,RD,$D,FD,OD,DD,LD,BD,VD,UD,GD,qD,iP,KD,dO,nz,pO,rz,hO,dz,pz,hz,mO,gz,yz,bz,wz,Iz,AO,xO,nO,Tz,lD,Cz,Rz,$z,oP,vO,kO,Fz,SO,Pz,Lz,Bz,Gz,jz,Xz,Kz,NO,Yz,Qz,tL,nL,sL,oL,uL,EO,pL,fL,yL,_O,MO,vL,IL,NL,OO,EL,_L,$L,lw,PL,uP,zO,zL,WL,VL,GL,rO,i2,jL,dP,pP,cP,XL,ZL,JL,eW,aW,nW,sW,jO,oW,cW,fW,yW,XO,bW,wW,IW,KO,gL,NW,EW,_W,MW,OW,DW,LW,BW,JO,VW,eP,GW,jW,XW,ZW,JW,rP,HD,eB,aB,rB,iB,lB,PO,gB,yB,bB,RL];for(let e of vB)Tn(e);var uw={};Le(uw,{assertNotComplex:()=>Hl,bindCanvasToFramebuffer:()=>$B,bindColorTextureToFramebuffer:()=>lc,bindTextureToProgramUniformSampler:()=>Iw,bindTextureUnit:()=>vw,bindVertexBufferToProgramAttribute:()=>l2,callAndCheck:()=>ce,canBeRepresented:()=>dw,createFragmentShader:()=>hw,createFramebuffer:()=>bw,createProgram:()=>fw,createStaticIndexBuffer:()=>Aw,createStaticVertexBuffer:()=>gw,createTexture:()=>yw,createVertexShader:()=>cw,getBatchDim:()=>ti,getExtensionOrThrow:()=>wu,getFramebufferErrorMessage:()=>Sw,getMaxTexturesInShader:()=>Ew,getNumChannels:()=>RB,getProgramUniformLocation:()=>kw,getProgramUniformLocationOrThrow:()=>ww,getRowsCols:()=>ai,getShapeAs3D:()=>Iu,getTextureShapeFromLogicalShape:()=>Nw,getWebGLDisjointQueryTimerVersion:()=>Rw,getWebGLErrorMessage:()=>pw,getWebGLMaxTextureSize:()=>Cw,hasExtension:()=>Qa,isCapableOfRenderingToFloatTexture:()=>_w,isDownloadFloatTextureEnabled:()=>$w,isReshapeFree:()=>Qu,isWebGLFenceEnabled:()=>Mw,isWebGLVersionEnabled:()=>d2,linkProgram:()=>mw,logShaderSourceAndInfoLog:()=>v1,resetMaxTextureSize:()=>MB,resetMaxTexturesInShader:()=>FB,unbindColorTextureFromFramebuffer:()=>u2,unbindTextureUnit:()=>_B,validateFramebuffer:()=>ku,validateProgram:()=>oc,validateTextureSize:()=>xw});var zs={},Lp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function x1(e,t){zs[e]=t}function Cn(e,t){if(!(e in zs)||t!=null){let n=kB(e,t);if(n!==null)zs[e]=n;else return console.log("Could not get context for WebGL version",e),null}let a=zs[e];return a==null||a.isContextLost()?(delete zs[e],Cn(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),zs[e])}function wB(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function kB(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=t??wB(e);return a.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete zs[e]},!1),B().getBool("SOFTWARE_WEBGL_ENABLED")&&(Lp.failIfMajorPerformanceCaveat=!1),e===1?a.getContext("webgl",Lp)||a.getContext("experimental-webgl",Lp):a.getContext("webgl2",Lp)}var Ju;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Ju||(Ju={}));var Ja;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Ja||(Ja={}));var Kt;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Kt||(Kt={}));function Zd(e,t){return[t,e]}function IB(e,t){return e*t}function Wp(e){let t=v.sizeFromShape(e),a=Math.ceil(t/4);return v.sizeToSquarishShape(a)}function Gl(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function SB(e,t){let[a,n]=Gl(e,t);return a*n*4}function b1(e,t){let a=e,n,r,s,i,o,l,u,d,c,p;return B().getNumber("WEBGL_VERSION")===2?(n=a.R32F,r=a.R16F,s=a.RGBA16F,i=a.RGBA32F,o=a.RED,u=4,d=1,c=a.HALF_FLOAT,p=a.FLOAT,l=a.RGBA8):(n=e.RGBA,r=e.RGBA,s=e.RGBA,i=a.RGBA,o=e.RGBA,u=4,d=4,c=t!=null?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:c,textureTypeFloat:p}}function ce(e,t){let a=t();return B().getBool("DEBUG")&&TB(e),a}function TB(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+pw(e,t))}var NB=596e-10,CB=65504;function dw(e){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||NB<Math.abs(e)&&Math.abs(e)<CB)}function pw(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function wu(e,t){return cr(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function cw(e,t){let a=cr(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ce(e,()=>e.shaderSource(a,t)),ce(e,()=>e.compileShader(a)),e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}function hw(e,t){let a=cr(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ce(e,()=>e.shaderSource(a,t)),ce(e,()=>e.compileShader(a)),B().get("ENGINE_COMPILE_ONLY"))return a;if(e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw v1(t,e.getShaderInfoLog(a)),new Error("Failed to compile fragment shader.");return a}var EB=/ERROR: [0-9]+:([0-9]+):/g;function v1(e,t){let a=EB.exec(t);if(a==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+a[1],r=e.split(`
`),s=r.length.toString().length+2,i=r.map((c,p)=>v.rightPad((p+1).toString(),s)+c),o=0;for(let c=0;c<i.length;c++)o=Math.max(i[c].length,o);let l=i.slice(0,n-1),u=i.slice(n-1,n),d=i.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function fw(e){return cr(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function mw(e,t){if(ce(e,()=>e.linkProgram(t)),!B().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function oc(e,t){if(ce(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function gw(e,t){let a=cr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),ce(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function Aw(e,t){let a=cr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),ce(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function RB(){return B().getNumber("WEBGL_VERSION")===2?1:4}function yw(e){return cr(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function xw(e,t){let a=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>a||t>a){let n=`[${e}x${t}]`,r=`[${a}x${a}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+r+".")}}function bw(e){return cr(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function l2(e,t,a,n,r,s,i){let o=e.getAttribLocation(t,a);return o===-1?!1:(ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ce(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i)),ce(e,()=>e.enableVertexAttribArray(o)),!0)}function vw(e,t,a){Tw(e,a),ce(e,()=>e.activeTexture(e.TEXTURE0+a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function _B(e,t){Tw(e,t),ce(e,()=>e.activeTexture(e.TEXTURE0+t)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function ww(e,t,a){return cr(e,()=>e.getUniformLocation(t,a),'uniform "'+a+'" not present in program.')}function kw(e,t,a){return e.getUniformLocation(t,a)}function Iw(e,t,a,n){ce(e,()=>vw(e,t,n)),ce(e,()=>e.uniform1i(a,n))}function $B(e){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ce(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function lc(e,t,a){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function u2(e,t){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ku(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+Sw(e,t))}function Sw(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function cr(e,t,a){let n=ce(e,()=>t());if(n==null)throw new Error(a);return n}function Tw(e,t){let a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>a){let r=`[gl.TEXTURE0, gl.TEXTURE${a}]`;throw new Error(`textureUnit must be in ${r}.`)}}function ti(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function ai(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Iu(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[ti(e),...ai(e)]),t}function Nw(e,t=!1){let a=B().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=B().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&B().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=a/2),t&&(a=a*2,n=n*2,e=e.map((o,l)=>l>=e.length-2?v.nearestLargerEven(e[l]):e[l]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let r=v.sizeFromShape(e),s=null;e.length<=1&&r<=a?s=[1,r]:e.length===2&&e[0]<=a&&e[1]<=a?s=e:e.length===3&&e[0]*e[1]<=a&&e[2]<=a?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=a&&e[1]*e[2]<=a?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=a&&e[3]<=a?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=a&&e[1]*e[2]*e[3]<=a&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=ti(e),l=2,u=2;e.length&&([l,u]=ai(e)),r=o*(l/2)*(u/2),s=v.sizeToSquarishShape(r).map(d=>d*2)}else s=v.sizeToSquarishShape(r);return s}function Bp(e){return e%2===0}function Qu(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let a=e.slice(-1)[0],n=t.slice(-1)[0];if(a===n||Bp(a)&&Bp(n)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Bp(e[0])&&Bp(t[0])}var uc,dc;function Cw(e){if(uc==null){let t=Cn(e);uc=t.getParameter(t.MAX_TEXTURE_SIZE)}return uc}function MB(){uc=null}function FB(){dc=null}function Ew(e){if(dc==null){let t=Cn(e);dc=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,dc)}function Rw(e){if(e===0)return 0;let t,a=Cn(e);return Qa(a,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Qa(a,"EXT_disjoint_timer_query")?t=1:t=0,t}function Qa(e,t){return e.getExtension(t)!=null}function d2(e){try{if(Cn(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _w(e){if(e===0)return!1;let t=Cn(e);if(e===1){if(!Qa(t,"OES_texture_float"))return!1}else if(!Qa(t,"EXT_color_buffer_float"))return!1;return p2(t)}function $w(e){if(e===0)return!1;let t=Cn(e);if(e===1){if(!Qa(t,"OES_texture_float")||!Qa(t,"WEBGL_color_buffer_float"))return!1}else{if(Qa(t,"EXT_color_buffer_float"))return p2(t);let a="EXT_color_buffer_half_float";if(Qa(t,a)){let n=t.getExtension(a);return OB(t,n)}return!1}return p2(t)}function p2(e){let t=b1(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);let n=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,n,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}function OB(e,t){let a=b1(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,a.internalFormatHalfFloat,r,s,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),o}function Mw(e){return e!==2?!1:Cn(e).fenceSync!=null}function Hl(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var ye=B();ye.registerFlag("HAS_WEBGL",()=>ye.getNumber("WEBGL_VERSION")>0);ye.registerFlag("WEBGL_VERSION",()=>d2(2)?2:d2(1)?1:0);ye.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ye.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ye.get("WEBGL_VERSION")===2);ye.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ye.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ye.registerFlag("WEBGL_PACK",()=>ye.getBool("HAS_WEBGL"));ye.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_CLIP",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_PACK_REDUCE",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_LAZILY_UNPACK",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_CONV_IM2COL",()=>ye.getBool("WEBGL_PACK"));ye.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Cw(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Ew(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=ye.getNumber("WEBGL_VERSION");return e===0?0:Rw(e)});ye.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ye.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!zd.isMobile());ye.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_w(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ye.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ye.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ye.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>$w(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Mw(ye.getNumber("WEBGL_VERSION")));ye.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ye.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ye.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});ye.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>zd.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});ye.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ye.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ye.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ye.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ye.registerFlag("WEBGL_EXP_CONV",()=>!1);ye.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ye.getBool("IS_TEST"));ye.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ye.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ye.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);function ya(){let e,t,a,n,r,s,i,o,l,u;return B().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",a="out",n="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=B().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",n="varying",r="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:n,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function so(e,t,a="index"){let n=v.computeStrides(t);return n.map((r,s)=>{let i=`int ${e[s]} = ${a} / ${r}`,o=s===n.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * ${r}`:`index -= ${e[s]} * ${r}`;return`${i}; ${o};`}).join("")}function Wh(e,t,a="index"){let n=v.computeStrides(t);return n.map((r,s)=>{let i=`int ${e[s]} = ${a} / outShapeStrides[${s}]`,o=s===n.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function PB(e,t){let a=e.length,n=e.map(s=>`${t}[${s}]`),r=new Array(a-1);r[a-2]=n[a-1];for(let s=a-3;s>=0;--s)r[s]=`(${r[s+1]} * ${n[s+1]})`;return r}function DB(e,t,a="index"){let n=e.map((s,i)=>i),r=PB(n,t);return r.map((s,i)=>{let o=`int ${e[i]} = ${a} / ${r[i]}`,l=i===r.length-1?`int ${e[i+1]} = ${a} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${l};`}).join("")}function w1(e){let t=v.computeStrides(e).map(a=>a.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function k1(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Fw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:Ow}=T;function zB(e,t,a){let n=[];if(e.forEach(p=>{let h=v.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?n.push(`uniform float ${p.name}${h>1?`[${h}]`:""};`):(n.push(`uniform sampler2D ${p.name};`),n.push(`uniform int offset${p.name};`)),a.enableShapeUniforms){let{uniformShape:f}=I1(a.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(f.length){case 1:n.push(`uniform int ${p.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${p.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(p=>{n.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let r=n.join(`
`),s=e.map(p=>LB(p,t,a.packedInputs,a.enableShapeUniforms)).join(`
`),i=t.texShape,o=ya(),l=VB(o),u,d,c=HB(o);return t.isPacked?(u=WB(t.logicalShape,i,a.enableShapeUniforms),d=GB(o)):(u=BB(t.logicalShape,i,a.enableShapeUniforms),d=UB(o)),a.packedInputs&&(c+=KB),[c,l,d,r,u,s,a.userCode].join(`
`)}function jl(e,t=!1){let a=e.shapeInfo.logicalShape;switch(a.length){case 0:return oV(e,t);case 1:return uV(e,t);case 2:return pV(e,t);case 3:return hV(e,t);case 4:return mV(e,t);case 5:return gV(e);case 6:return AV(e);default:throw new Error(`${a.length}-D input sampling is not yet supported`)}}function Pw(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return iV(e);case 1:return lV(e,t);case 2:return dV(e,t);case 3:return cV(e,t);default:return fV(e,t)}}function LB(e,t,a=!1,n){let r="";a?r+=Pw(e,n):r+=jl(e,n);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a?r+=yV(e,t):r+=xV(e,t)),r}function WB(e,t,a){switch(e.length){case 0:return Dw();case 1:return ZB(e,t,a);case 2:return rV(e,t,a);case 3:return JB(e,t,a);default:return eV(e,t,a)}}function BB(e,t,a){switch(e.length){case 0:return Dw();case 1:return YB(e,t,a);case 2:return sV(e,t,a);case 3:return QB(e,t,a);case 4:return tV(e,t,a);case 5:return aV(e,t);case 6:return nV(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function VB(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function UB(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function GB(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function HB(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${jB}
    ${qB}
    ${XB}
  `}var jB=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,qB=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,XB=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,KB=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Dw(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function ZB(e,t,a){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function YB(e,t,a){return t[0]===1?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function JB(e,t,a){if(a)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function QB(e,t,a){if(a)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Wh(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let n=so(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function eV(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+o,l=`b${u}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${l});
    }
  `}function tV(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Wh(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let n=so(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function aV(e,t){let a=so(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function nV(e,t){let a=so(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function rV(e,t,a){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return a?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return a?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function sV(e,t,a){return v.arraysEqual(e,t)?a?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:a?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function io(e){return`offset${e}`}function iV(e){let t=e.name,a="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ya();return`
    vec4 ${a}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function oV(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${a};}`;let[r,s]=e.shapeInfo.texShape;if(r===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let i=io(a);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${i});
      return sampleTexture(${a}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${a}, uv);
    }
  `}function lV(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,s=ya();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${a}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${a}, uv);
    }
  `}function uV(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${ql(e)}
      }
    `;let r=e.shapeInfo.texShape,s=r[0],i=r[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let o=io(a);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${a}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${o});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${a}, uv);
    }
  `}function dV(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=ya();if(s!=null&&v.arraysEqual(a,s))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(a[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function pV(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(a,s)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let p=s[0],h=s[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(a),l=i;if(l.length<a.length){let p=Xl(e,l),h=["row","col"];return`
      ${jl(p,t)}
      float ${r}(int row, int col) {
        return ${r}(${Kl(h,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${ql(e)}
      }
    `;let u=s[0],d=s[1],c=io(n);return d===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${c}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${c};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${c};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${n}, uv);
  }
`}function cV(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(a[0]===1){let p=a.slice(1),h=[1,2],f=Xl(e,p),m=["b","row","col"];return`
        ${Pw(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Kl(m,h)});
        }
      `}let o=ya();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `;let l=i[0],u=i[1],d=Math.ceil(a[2]/2),c=d*Math.ceil(a[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${c}, ${d}, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function hV(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=a[1]*a[2],i=a[2],{newShape:o,keptDims:l}=v.squeezeShape(a),u=o;if(u.length<a.length){let m=Xl(e,u),g=["row","col","depth"];return`
        ${jl(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Kl(g,l)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${ql(e)}
      }
    `;let d=e.shapeInfo.texShape,c=d[0],p=d[1],h=e.shapeInfo.flatOffset;if(p===s&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(p===i&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=io(n);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${n}, uv);
      }
  `}function fV(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=ya();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${a}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],c=Math.ceil(s[i-1]/2),p=c*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${c} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,p*=s[i-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${n}(${h}) {
      int index = ${f};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${r.texture2D}(${a}, uv);
    }
  `}function mV(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=a[3],i=a[2]*s,o=a[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(a);if(l.length<a.length){let y=Xl(e,l),x=["row","col","depth","depth2"];return`
      ${jl(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Kl(x,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${ql(e)}
      }
    `;let d=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],h=c[1],f=`int stride2 = ${n}Shape[3];`,m=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(h===o&&d==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&d==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let A=io(n);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${A});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${A});
      return sampleTexture(${n}, uv);
    }
  `}function gV(e){let t=e.shapeInfo.logicalShape,a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=v.squeezeShape(t);if(l.length<t.length){let m=Xl(e,l),g=["row","col","depth","depth2","depth3"];return`
      ${jl(m)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Kl(g,u)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${r})) +
          depth3;
        ${ql(e)}
      }
    `;let d=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],h=c[1];if(h===o&&d==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(h===r&&d==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${a}, uv);
      }
    `;let f=io(a);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${a}, uv);
    }
  `}function AV(e){let t=e.shapeInfo.logicalShape,a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:r,keptDims:s}=v.squeezeShape(t);if(r.length<t.length){let g=Xl(e,r),A=["row","col","depth","depth2","depth3","depth4"];return`
      ${jl(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Kl(A,s)});
      }
    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ql(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===d&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&c==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;let m=io(a);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${a}, uv);
    }
  `}function ql(e){let t=e.name,a=v.sizeFromShape(e.shapeInfo.logicalShape);return a<2?`return ${t};`:`
    for (int i = 0; i < ${a}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function yV(e,t){let a=e.name,n=a.charAt(0).toUpperCase()+a.slice(1),r="get"+n+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Ow(e.shapeInfo.logicalShape,t.logicalShape),l=pt(i),u=i-s,d,c=["x","y","z","w","u","v"];s===0?d="":i<2&&o.length>=1?d="coords = 0;":d=o.map(g=>`coords.${c[g+u]} = 0;`).join(`
`);let p="";i<2&&s>0?p="coords":p=e.shapeInfo.logicalShape.map((g,A)=>`coords.${c[A+u]}`).join(", ");let h="return outputValue;",f=v.sizeFromShape(e.shapeInfo.logicalShape)===1,m=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,A=s-1;o.indexOf(g)>-1&&o.indexOf(A)>-1?h="return vec4(outputValue.x);":o.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(A)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${n}(${p});
      ${h}
    }
  `}function xV(e,t){let a=e.name,n=a.charAt(0).toUpperCase()+a.slice(1),r="get"+n+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${r}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let u=pt(l),d=Ow(e.shapeInfo.logicalShape,t.logicalShape),c=l-o,p,h=["x","y","z","w","u","v"];o===0?p="":l<2&&d.length>=1?p="coords = 0;":p=d.map(m=>`coords.${h[m+c]} = 0;`).join(`
`);let f="";return l<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+c]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${p}
      return get${n}(${f});
    }
  `}function pt(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function I1(e,t,a){let{newShape:n,keptDims:r}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):n,l=!e&&s>1&&!v.arraysEqual(t,a)&&n.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function Xl(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function Kl(e,t){return t.map(a=>e[a]).join(", ")}function bV(e,t,a,n){let r=a.map((d,c)=>{let p={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(p.flatOffset=d.texData.slice.flatOffset),{name:t.variableNames[c],shapeInfo:p}}),s=r.map(d=>d.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=zB(r,i,t),l=hw(e.gl,o),u=e.createProgram(l);return B().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},zw(e,t,u))}function zw(e,t,a){let n={},r={},s={},i=[],o,l,u,d=null,c=null;c=e.getUniformLocation(a,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(d=e.getUniformLocation(a,"INFINITY",!1));let p=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];n[f]=e.getUniformLocation(a,f,p),n[`offset${f}`]=e.getUniformLocation(a,`offset${f}`,p),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(a,`${f}Shape`,p),s[`${f}TexShape`]=e.getUniformLocation(a,`${f}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(a,"outShape",p),u=e.getUniformLocation(a,"outShapeStrides",p),l=e.getUniformLocation(a,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{i[f]=e.getUniformLocation(a,h.name,p)}),{uniformLocations:n,customUniformLocations:i,infLoc:d,nanLoc:c,inShapesLocations:r,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function ey(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((a,n)=>{let r=a.logicalShape,s=t[n],i=s.shape;if(!v.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(a.isUniform&&s.isUniform)return;let o=a.texShape,l=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function vV(e,t,a,n,r){t.program.enableShapeUniforms||(ey(t.inShapeInfos,a),ey([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),a.forEach((l,u)=>{let d=t.program.variableNames[u],c=t.uniformLocations[d],p=t.uniformLocations[`offset${d}`],h=t.inShapesLocations[`${d}Shape`],f=t.inTexShapesLocations[`${d}TexShape`];if(h){let{uniformShape:m}=I1(t.program.packedInputs,l.shape,l.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,l.texData.texShape[0],l.texData.texShape[1]),c!=null){if(l.isUniform){if(v.sizeFromShape(l.shape)<2)e.gl.uniform1f(c,l.uniformValues[0]);else{let m=l.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(c,m)}return}l.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,l.texData.slice.flatOffset),e.setInputMatrixTexture(l.texData.texture.texture,c,u)}});let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let l=v.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((l,u)=>{let d=t.customUniformLocations[u],c=r[u];if(l.type==="float")e.gl.uniform1fv(d,c);else if(l.type==="vec2")e.gl.uniform2fv(d,c);else if(l.type==="vec3")e.gl.uniform3fv(d,c);else if(l.type==="vec4")e.gl.uniform4fv(d,c);else if(l.type==="int")e.gl.uniform1iv(d,c);else if(l.type==="ivec2")e.gl.uniform2iv(d,c);else if(l.type==="ivec3")e.gl.uniform3iv(d,c);else if(l.type==="ivec4")e.gl.uniform4iv(d,c);else throw Error(`uniform type ${l.type} is not supported yet.`)}),e.executeProgram()}function wV(e,t,a){let n="";t.concat(a).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:c}=I1(e.packedInputs,i.shape,l),p="",h="",f="";if(d.length===1&&e.packedInputs){let w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];p=`${w[0]>1}_${w[1]>1}`}else if(d.length===2&&!e.packedInputs)h=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!e.packedInputs){let w=v.computeStrides(d);f=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}let m=i.shape.length,g=d.length===2&&v.arraysEqual(i.shape,l),A=v.sizeFromShape(i.shape)===1,y=T.getBroadcastDims(i.shape,a.shape),x=!e.packedInputs&&m===a.shape.length&&v.arraysEqual(l,a.texData.texShape),b=e.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${m}_${x}_${u?c:""}_${d.length}_${A}_${y}_${g}_${p}_${h}_${f}_${b}_${o}`}else{let l=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${l}_${o}`}});let r=e.userCode,s=e.constructor.name;return s+="_"+n+"_"+r+`${B().getNumber("WEBGL_VERSION")}`,s}function xa(e){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var kV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ju.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ya();this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Wh(["r","c","d"],e):so(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},IV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ju.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ya();this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Wh(["r","c","d"],e):so(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},SV=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Ja.DOWNLOAD;let t=ya();this.outputShape=e,this.userCode=`
      ${Fw}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},TV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ja.DOWNLOAD;let t=ya();this.outputShape=e,this.userCode=`
      ${Fw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},NV={R:0,G:1,B:2,A:3},ty=class{constructor(e,t=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ya();this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let i=0;i<a.length;i++){let o=a[i];s+=`
          if(offset == ${i}) {
            result = values[${NV[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?k1():w1(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${a.length});

        flatIndex = idiv(flatIndex, ${a.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},CV=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=ya();this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length);let n="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;n+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?k1():w1(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${a.output} = ${r};
        }
    `}},Lw={};Le(Lw,{bindVertexProgramAttributeStreams:()=>Xw,createBufferFromOutputTexture:()=>Yw,createFloat16MatrixTexture:()=>Gw,createFloat16PackedMatrixTexture:()=>qw,createFloat32MatrixTexture:()=>Uw,createIndexBuffer:()=>Vw,createPackedMatrixTexture:()=>jw,createUnsignedBytesMatrixTexture:()=>Hw,createVertexBuffer:()=>Bw,createVertexShader:()=>Ww,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Qw,downloadFloat32MatrixFromBuffer:()=>Jw,downloadMatrixFromPackedOutputTexture:()=>tk,downloadPackedMatrixFromBuffer:()=>ek,getInternalFormatForFloat16MatrixTexture:()=>T1,getInternalFormatForFloat16PackedMatrixTexture:()=>E1,getInternalFormatForFloat32MatrixTexture:()=>S1,getInternalFormatForPackedMatrixTexture:()=>C1,getInternalFormatForUnsignedBytesMatrixTexture:()=>N1,uploadDenseMatrixToTexture:()=>Kw,uploadPixelDataToTexture:()=>Zw});function Ww(e){let t=ya(),a=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return cw(e,a)}function Bw(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return gw(e,t)}function Vw(e){let t=new Uint16Array([0,1,2,2,1,3]);return Aw(e,t)}function Yd(e,t,a,n,r,s){xw(t,a);let i=yw(e),o=e.TEXTURE_2D;return ce(e,()=>e.bindTexture(o,i)),ce(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),ce(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),B().getNumber("WEBGL_VERSION")===1?ce(e,()=>e.texImage2D(o,0,n,t,a,0,r,s,null)):ce(e,()=>e.texStorage2D(o,1,n,t,a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[a,t]}}function S1(e){return e.internalFormatFloat}function Uw(e,t,a,n){let[r,s]=Zd(t,a);return Yd(e,r,s,S1(n),n.textureFormatFloat,e.FLOAT)}function T1(e){return e.internalFormatHalfFloat}function Gw(e,t,a,n){let[r,s]=Zd(t,a);return Yd(e,r,s,T1(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function N1(e){return e.downloadTextureFormat}function Hw(e,t,a,n){let[r,s]=Zd(t,a);return Yd(e,r,s,N1(n),e.RGBA,e.UNSIGNED_BYTE)}function C1(e){return e.internalFormatPackedFloat}function jw(e,t,a,n){let[r,s]=Gl(t,a);return Yd(e,r,s,C1(n),e.RGBA,e.FLOAT)}function E1(e){return e.internalFormatPackedHalfFloat}function qw(e,t,a,n){let[r,s]=Gl(t,a);return Yd(e,r,s,E1(n),e.RGBA,n.textureTypeHalfFloat)}function Xw(e,t,a){return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),l2(e,t,"clipSpacePos",a,3,20,0)&&l2(e,t,"uv",a,2,20,12)}function Kw(e,t,a,n,r,s){ce(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,l;r instanceof Uint8Array?(i=new Uint8Array(a*n*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(a*n*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),B().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a,n,e.RGBA,o,i)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,a,n,0,e.RGBA,o,i)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Zw(e,t,a){ce(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a.width,a.height,e.RGBA,e.UNSIGNED_BYTE,a.data)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a.width,a.height,0,e.RGBA,e.UNSIGNED_BYTE,a.data)):B().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,a)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Yw(e,t,a,n){let r=e.createBuffer();ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let s=4*4*t*a;return ce(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),ce(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function Jw(e,t,a){let n=e,r=new Float32Array(a);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,r),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),r}function Qw(e,t,a,n){let[r,s]=Zd(t,a),i=4,o=new Uint8Array(IB(t*a,i));return ce(e,()=>e.readPixels(0,0,r,s,n.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function ek(e,t,a,n,r,s,i,o){let l=e,u=new Float32Array(SB(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function tk(e,t,a){let n=new Float32Array(t*a*4);return ce(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,n)),n}var Pu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=B().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,x1(t,e)):this.gl=Cn(t);let a="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=wu(this.gl,r),Qa(this.gl,s))this.textureHalfFloatExtension=wu(this.gl,s);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),Qa(this.gl,n))this.colorBufferHalfFloatExtension=wu(this.gl,n);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",Qa(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(Qa(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Bw(this.gl),this.indexBuffer=Vw(this.gl),this.framebuffer=bw(this.gl),this.textureConfig=b1(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ce(e,()=>e.finish()),ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.deleteFramebuffer(this.framebuffer)),ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Uw(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Gw(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Hw(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Zw(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,a,n){this.throwIfDisposed(),Kw(this.gl,e,t,a,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),qw(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),jw(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(u2(this.gl,this.framebuffer),this.outputTexture=null),ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>Qw(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,n,r,s){return ek(this.gl,e,t,a,n,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Jw(this.gl,e,t)}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);let n=Yw(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,a;if(B().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,r=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),a=()=>{let s=n.clientWaitSync(r,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},t=r}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:t,isFencePassed:a}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>tk(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=Ww(t));let a=fw(t);return ce(t,()=>t.attachShader(a,this.vertexShader)),ce(t,()=>t.attachShader(a,e)),mw(t,a),this.debug&&oc(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Xw(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&ce(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&oc(this.gl,this.program),ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){return this.throwIfDisposed(),a?ww(this.gl,e,t):kw(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ce(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){this.throwIfDisposed(),this.throwIfNoProgram(),Iw(this.gl,e,t,a)}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();let[n,r]=Gl(t,a);this.setOutputMatrixTextureDriver(e,n,r)}setOutputMatrixWriteRegion(e,t,a,n){this.setOutputMatrixWriteRegionDriver(a,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,a,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&oc(this.gl,this.program),ku(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=wu(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let a=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=a.createQuery();return a.beginQuery(n.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,a=this.getQueryTimerExtensionWebGL2();t.endQuery(a.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let a=this.gl;return a.getQueryParameter(e,a.QUERY_RESULT)/1e6}else{let a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(e,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let a=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=a.getQueryParameter(e,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let a=this.getQueryTimerExtensionWebGL1(),n=a.getQueryObjectEXT(e,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=EV(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:a}=this.itemsToPoll[t];a()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let a;"setTimeoutCustom"in B().platform&&(a=B().platform.setTimeoutCustom.bind(B().platform)),v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,a)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),lc(this.gl,e,this.framebuffer),this.debug&&ku(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(lc(this.gl,this.outputTexture,this.framebuffer),this.debug&&ku(this.gl)):u2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let a=t();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let n=this.gl;lc(n,e,this.framebuffer),this.debug&&ku(n),this.outputTexture=e,ce(n,()=>n.viewport(0,0,t,a)),ce(n,()=>n.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,n){this.throwIfDisposed(),ce(this.gl,()=>this.gl.scissor(e,t,a,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function EV(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:RV,bincountImpl:ak,bincountReduceImpl:_V,castImpl:$V,ceilImpl:MV,concatImpl:FV,equalImpl:OV,expImpl:PV,expm1Impl:DV,floorImpl:zV,gatherNdImpl:LV,gatherV2Impl:WV,greaterImpl:BV,greaterEqualImpl:VV,lessImpl:UV,lessEqualImpl:GV,linSpaceImpl:HV,logImpl:jV,maxImpl:qV,maximumImpl:XV,minimumImpl:KV,multiplyImpl:ZV,negImpl:YV,notEqualImpl:JV,prodImpl:QV,raggedGatherImpl:eU,raggedRangeImpl:tU,raggedTensorToTensorImpl:aU,rangeImpl:nU,rsqrtImpl:rU,scatterImpl:sU,sigmoidImpl:iU,simpleAbsImpl:nk,sliceImpl:oU,sparseFillEmptyRowsImpl:lU,sparseReshapeImpl:uU,sparseSegmentReductionImpl:rk,sqrtImpl:dU,stridedSliceImpl:pU,stringNGramsImpl:cU,stringSplitImpl:hU,stringToHashBucketFastImpl:fU,subImpl:mU,tileImpl:gU,topKImpl:AU,transposeImpl:R1,uniqueImpl:yU}=r1;function sk(e,t){return["x","y","z","w","u","v"].slice(0,t).map(a=>`${e}.${a}`)}function ma(e,t){return t===1?[e]:sk(e,t)}function xU(e,t){if(e===1)return"rc";let a="";for(let n=0;n<e;n++)a+=t[n],n<e-1&&(a+=",");return a}var bU=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=xa(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=ma("rc",this.rank),a=pt(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let a=0;a<=1;a++)for(let n=0;n<=1;n++){let r=`${a===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)r=`${e[e.length-1-s]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let a=this.rank-2;a<this.rank;a++)t+=`${e[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},ik=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length);let a="";for(let n=0;n<4;n++){let r="thisRC = rc;";n%2===1&&(r+="thisRC.z += 1;"),n>1&&(r+="thisRC.y += 1;"),a+=`
        ${r}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${vU(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?k1():w1(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}};function vU(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?DB(["r","c","d"],"inputShape"):so(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var wU=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,a){let n=ny(t,a),r=ry(e,n,a);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s=ay(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return n===Kt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===Kt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===Kt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===Kt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===Kt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,a,n){if(this.freeTextures==null)return;let r=ny(a,n),s=ry(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]);let i=ay(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function kU(e,t){let a=e;if(t===a.R32F)return 4;if(t===a.R16F)return 2;if(t===a.RGBA32F||t===e.RGBA)return 16;if(t===a.RGBA16F)return 8;if(t===a.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function ay(e,t,a,n,r){let s=IU(t,n),i;if(r){let[l,u]=Gl(e[0],e[1]);i=l*u}else{let[l,u]=Zd(e[0],e[1]);i=l*u}let o=kU(a,s);return i*o}function IU(e,t){switch(e){case Kt.PACKED_2X2_FLOAT32:return C1(t);case Kt.PACKED_2X2_FLOAT16:return E1(t);case Kt.UNPACKED_FLOAT32:return S1(t);case Kt.UNPACKED_FLOAT16:return T1(t);case Kt.PACKED_4X1_UNSIGNED_BYTE:return N1(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function SU(e){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Kt.PACKED_2X2_FLOAT32:Kt.UNPACKED_FLOAT32:e?Kt.PACKED_2X2_FLOAT16:Kt.UNPACKED_FLOAT16}function ny(e,t){if(e===Ja.UPLOAD)return Kt.PACKED_2X2_FLOAT32;if(e===Ja.RENDER||e==null)return SU(t);if(e===Ja.DOWNLOAD||e===Ja.PIXELS)return Kt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function ry(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}var tr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},yn="if (isnan(x)) return x;",TU="return x;",sy="return abs(x);",NU="return (x >= 0.0) ? x : (exp(x) - 1.0);",CU=yn+`
  return (x < 0.0) ? 0.0 : x;
`,EU=yn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,So="return x;",RU="return 1.0 / (1.0 + exp(-1.0 * x));",_U="return x;",$U=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,MU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,OU="return 1.0 / (1.0 + exp(-1.0 * x));",Bs=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},PU=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length);let t=e.length,a=ma("rc",t),n=pt(t),r=xU(t,a),s=a.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},DU=An.whereImpl,zU=1e-7,LU=1e-4,jf={};function WU(e){return e in jf||(jf[e]={}),jf[e]}var BU=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),VU=600;function UU(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*VU/1024/1024}var Jd=class extends ol{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Pu)t=e;else{let a=Cn(B().getNumber("WEBGL_VERSION"),e);t=new Pu(a)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let a=Cn(B().getNumber("WEBGL_VERSION"));t=new Pu(a),this.binaryCache=WU(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new wU(this.gpgpu),this.numMBBeforeWarning=UU(),this.texData=new od(this,Dt())}nextDataId(){return Jd.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,a,n,r,s){let i=this.makeTensorInfo(t,a),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[n,r]},o.texShape=[n,r];let l=Iu(t),u=new ty(l,!1,s),d=this.runWebGLProgram(u,[i],a,[[n,r]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,a){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:a,values:e,usage:Ja.UPLOAD,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,a,n,r){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:a,dtype:n,values:t,usage:Ja.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:a,dtype:n,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(s!=null){let c;o?c=new Bs(i,So):c=new tr(i,So);let p=this.runWebGLProgram(c,[{dataId:e,shape:i,dtype:n}],n),h=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),h}if(a!=null)return this.convertAndCacheOnCPU(e);if(n==="string")return a;let l=this.activeTimers!=null,u;l&&(u=v.now());let d;if(n==="complex64"){let c=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);d=T.mergeRealAndImagArrays(c,p)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=v.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:a,shape:n,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new Bs(n,So):h=new tr(n,So);let f=this.runWebGLProgram(h,[{dataId:e,shape:n,dtype:s}],s),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(a!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(s!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);let h=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Wp(n))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(s==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=h[0],m=h[1];d=T.mergeRealAndImagArrays(f,m)}else if(l==null)d=this.getValuesFromTexture(e);else{let h=v.sizeFromShape(n);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){let h=this.gpgpu.gl;ce(h,()=>h.deleteBuffer(l))}let c=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(h=>h(c)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dt().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let a=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,isPacked:o,texture:l}=a;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let p;o?p=new Bs(r,So):p=new tr(r,So);let h=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:i}],i),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(l==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=Dt().makeTensorFromTensorInfo(u),c=this.texData.get(u.dataId);return Object.assign({tensorRef:d},c.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let a=t.map(n=>v.decodeString(n));return xe(e.shape,e.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let a=e[t];if(!dw(a))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${a} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${a} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:a,isPacked:n}=this.texData.get(e),r=v.sizeFromShape(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(e),p=this.texData.get(c.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Wp(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(c),h}let s=B().getBool("WEBGL_PACK")&&n===!0,i=s?Iu(t):t,o=s?new TV(i):new SV(i),l=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,a=[],n=!1;this.programTimersStack==null?(this.programTimersStack=a,n=!0):this.activeTimers.push(a),this.activeTimers=a,e();let r=v.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=v.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:a}=this.texData.get(e);return a!=null&&(this.disposeData(a.real.dataId,t),this.disposeData(a.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:a,texShape:n,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(n,a),this.textureManager.releaseTexture(t,n,r,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=BU){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(a=>this.texData.get(a.dataId).texture==null&&v.sizeFromShape(a.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return DU(e.shape,t)}packedUnaryOp(e,t,a){let n=new Bs(e.shape,t),r=this.compileAndRun(n,[e],a);return Dt().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=nk(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,sy,e.dtype);let t=new tr(e.shape,sy),a=this.compileAndRun(t,[e]);return Dt().makeTensorFromTensorInfo(a)}makeTensorInfo(e,t,a){let n;if(t==="string"&&a!=null&&a.length>0&&v.isString(a[0])){let r=a.map(s=>v.encodeString(s));n=this.write(r,e,t)}else n=this.write(a,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,a){return Dt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,a),this)}unpackTensor(e){let t=new PU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new bU(e.shape),a=!0;return this.runWebGLProgram(t,[e],e.dtype,null,a)}packedReshape(e,t){let a=[ti(e.shape),...ai(e.shape)],n={dtype:e.dtype,shape:a,dataId:e.dataId},r=[ti(t),...ai(t)],s=new ik(r,a),i=!0,o=[a],l=this.runWebGLProgram(s,[n],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){let a=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=a;if(t!=null){let c=v.sizeFromShape(r),p=t[0]*t[1]*4;v.assert(c<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Iu(r),o;n?o=new IV(i):o=new kV(i);let l=!0,u=[t??Wp(i)],d=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,u,l,t);return{dtype:s,shape:r,dataId:d.dataId}}runWebGLProgram(e,t,a,n,r=!1,s){let i=this.makeTensorInfo(e.outputShape,a),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Ju.DENSE){let g=s??Wp(e.outputShape);o.texShape=g.map(A=>A*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(i.shape)===0)return o.values=v.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let A=this.texData.get(g.dataId);if(A.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:A.values};e.packedInputs&&(A.isPacked=!0,A.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!A.isPacked!=!!e.packedInputs)g=A.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),A=this.texData.get(g.dataId);else if(A.isPacked&&!Qu(A.shape,g.shape)){let y=g,x=g.shape;g.shape=A.shape,g=this.packedReshape(g,x),l.push(g),A=this.texData.get(g.dataId),y.shape=x}return{shape:g.shape,texData:A,isUniform:!1}});this.uploadToGPU(i.dataId);let d={shape:i.shape,texData:o,isUniform:!1},c=wV(e,u,d),p=this.getAndSaveBinary(c,()=>bV(this.gpgpu,e,u,d)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||vV(this.gpgpu,p,u,d,n),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=B().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=v.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,a,n,r=!1){return a=a||t[0].dtype,this.runWebGLProgram(e,t,a,n,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=De(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=B().getBool("DEBUG");B().set("DEBUG",!1);let t=this.abs($e(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?zU:LU}uploadToGPU(e){let t=this.texData.get(e),{shape:a,dtype:n,values:r,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let l=this.activeTimers!=null,u;l&&(u=v.now());let d=t.texShape;if(d==null&&(d=Nw(a,o),t.texShape=d),r!=null){let c=Iu(a),p,h=d[1],f=d[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!m)&&([h,f]=Gl(d[0],d[1])),o?p=new CV(c,m):p=new ty(c,m);let g=m?[f,h]:d,A=this.makeTensorInfo(g,n),y=this.texData.get(A.dataId);m?y.usage=Ja.PIXELS:y.usage=Ja.UPLOAD,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(A.dataId),h,f,r);let x=[[f,h]],b=!0,w=this.runWebGLProgram(p,[A],n,x,b),S=this.texData.get(w.dataId);t.texShape=S.texShape,t.isPacked=S.isPacked,t.usage=S.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=S.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(A),l&&(this.uploadWaitMs+=v.now()-u)}else{let c=this.acquireTexture(d,i,n,o);t.texture=c}}convertAndCacheOnCPU(e,t){let a=this.texData.get(e),{dtype:n}=a;return this.releaseGPUData(e),t!=null&&(a.values=GU(t,n)),a.values}acquireTexture(e,t,a,n){if(this.numBytesInGPU+=this.computeBytes(e,a),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let a=new Promise(n=>{try{this.checkCompletion_(t),n(!0)}catch(r){throw r}});e.push(a)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Pv(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(v1(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:a,infLoc:n,nanLoc:r,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=zw(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=a,e.infLoc=n,e.nanLoc=r,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromTexture(e,t,a){let{texture:n,height:r,width:s,channels:i}=e,o=Dt().backend;if(!o.gpgpu.gl.isTexture(n))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(n,t,a,r,s,i);return Dt().makeTensorFromDataId(l,t,a,o)}};Jd.nextDataId=0;function GU(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let a=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let n=0;n<a.length;++n)a[n]=Math.round(e[n]);return a}else throw new Error(`Unknown dtype ${t}`)}var HU="4.0.0";function ok(){B().set("WEBGL_FORCE_F16_TEXTURES",!0)}zd.isBrowser()&&Wl("webgl",()=>new Jd,2);var jU={forceHalfFloat:ok},_1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,nl=class{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.enableShapeUniforms=xa(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Qd=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,ep=class{constructor(e,t,a,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=T.assertAndGetBroadcastShape(t,a);let r=this.outputShape.length;this.enableShapeUniforms=xa(r);let s="";if(n)if(r===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${pt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=ma("coords",r);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Ua(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var qU={kernelName:Ei,backendName:"webgl",kernelFunc:Ua};function xs(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.makeTensorInfo(n.shape,"complex64"),i=a.texData.get(s.dataId),o=Ua({inputs:{x:n},backend:a}),l=Ua({inputs:{x:r},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var XU={kernelName:gd,backendName:"webgl",kernelFunc:xs},lk="return (a < 0.) ? b * a : a;",uk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function KU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n,i=a.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ep(uk,r.shape,i.shape):new nl(lk,r.shape,i.shape),l=a.runWebGLProgram(o,[r,i],"float32");return a.disposeIntermediateTensorInfo(i),l}var ZU={kernelName:Ri,backendName:"webgl",kernelFunc:KU},dk="return (a < 0.) ? b * a : a;",pk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function YU(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ep(pk,n.shape,r.shape):new nl(dk,n.shape,r.shape);return a.runWebGLProgram(s,[n,r],"float32")}var JU={kernelName:Vi,backendName:"webgl",kernelFunc:YU},Zl="if (isnan(x)) return x;";function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:a,dtype:n}){return({inputs:r,backend:s})=>{let{x:i}=r,o=s,l=n||i.dtype;if(o.shouldExecuteOnCPU([i])&&a!=null){let c=o.texData.get(i.dataId),p=a(c.values,l);return o.makeTensorInfo(i.shape,l,p)}let u=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,d;return u?d=new Bs(i.shape,t):d=new tr(i.shape,e),o.runWebGLProgram(d,[i],l)}}function Qt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:a=!1,supportsComplex:n=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(n&&l.dtype==="complex64"){let f=d.texData.get(l.dataId),m=d.texData.get(u.dataId),[g,A]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(x=>{let[b,w]=x,S={dataId:b.dataId,dtype:b.dtype,shape:l.shape},N={dataId:w.dataId,dtype:w.dtype,shape:u.shape},C=new nl(e,l.shape,u.shape);return d.runWebGLProgram(C,[S,N],Yt(b.dtype,w.dtype))}),y=xs({inputs:{real:g,imag:A},backend:d});return d.disposeIntermediateTensorInfo(g),d.disposeIntermediateTensorInfo(A),y}let c=s||Yt(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([l,u]))&&r!=null){let f=d.texData.get(l.dataId).values,m=d.texData.get(u.dataId).values,g=l.dtype==="string"?T.fromUint8ToStringArray(f):f,A=l.dtype==="string"?T.fromUint8ToStringArray(m):m,[y,x]=r(l.shape,u.shape,g,A,c),b=d.makeTensorInfo(x,c),w=d.texData.get(b.dataId);return w.values=y,b}let p=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return p?h=new ep(t,l.shape,u.shape,a):h=new nl(e,l.shape,u.shape),d.runWebGLProgram(h,[l,u],c)}}function ed(e,t=!1){if(e==="linear")return t?_U:TU;if(e==="relu")return t?MU:CU;if(e==="elu")return t?$U:NU;if(e==="relu6")return t?FU:EU;if(e==="prelu")return t?pk:dk;if(e==="leakyrelu")return t?uk:lk;if(e==="sigmoid")return t?OU:RU;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var ck=class{constructor(e,t,a,n=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=xa(this.outputShape.length);let u=n?e[1]:e[2],d=Math.ceil(u/2),c=n?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let A=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${y};
          int batchB = ${x};
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${A}

        ${g}

        setOutput(result);
      }
    `}},iy={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},oy=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},ly="return a * b;";function $1(e){let{inputs:t,backend:a}=e,{a:n,b:r}=t,s=T.upcastType(n.dtype,r.dtype);if(n.dtype==="complex64"){let o=a.texData.get(n.dataId),l=a.texData.get(r.dataId),u=new oy(iy.REAL,n.shape,r.shape),d=new oy(iy.IMAG,n.shape,r.shape),c=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:n.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],p=a.runWebGLProgram(u,c,"float32"),h=a.runWebGLProgram(d,c,"float32"),f=xs({inputs:{real:p,imag:h},backend:a});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),f}if(a.shouldExecuteOnCPU([n,r])){let o=a.texData.get(n.dataId),l=a.texData.get(r.dataId),[u,d]=ZV(n.shape,r.shape,o.values,l.values,s),c=a.makeTensorInfo(d,s),p=a.texData.get(c.dataId);return p.values=u,c}let i;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new ep(ly,n.shape,r.shape):i=new nl(ly,n.shape,r.shape),a.runWebGLProgram(i,[n,r],s)}var QU={kernelName:is,backendName:"webgl",kernelFunc:$1};function eG(e,t,a){let n=[ti(e.shape),...ai(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[ti(t),...ai(t)],i=new ik(s,n),o=!0,l=[n],u=a.runWebGLProgram(i,[r],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function pe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:s}=n,i=a,o=v.sizeFromShape(r.shape),l=v.inferFromImplicitShape(s,o),u=v.sizeFromShape(l);v.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let d=i.texData.get(r.dataId);return d.isPacked&&!Qu(r.shape,l)&&!(d.texture!==null&&Qu(d.shape,l))?eG(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}var tG={kernelName:Nl,backendName:"webgl",kernelFunc:pe},uy=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:s}=e;this.outputShape=[n,s];let i=Math.floor(a/4)*4,o=a%4,l="sumValue += dot(values, ones);";if(t!=null){let d=1/t;l=`sumValue += dot(values * ${v.isInt(d)?d.toPrecision(2):d}, ones);`}let u="";r%a>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}},aG=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");let u=Math.floor(a/4)*4,d=a%4,c=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";r%a>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function nG(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let a=t.length?t[t.length-1].outSize:e[1],n=T.computeOptimalWindowSize(a);t.push({inSize:a,windowSize:n,outSize:Math.ceil(a/n)})}return t}function oo(e,t,a,n){let r=nG(e.shape),s=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:l,outSize:u}=r[i],d,c;a==="mean"?d=i===0?new uy({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new uy({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):d=new aG({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},a),c=s,s=n.runWebGLProgram(d,[s],t),c.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(c)}return s}var rG=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[t[s]];this.outputShape=a,this.rank=a.length;let n=pt(this.rank),r=sG(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function sG(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let r=0;r<e.length;r++)n[e[r]]=a[r];return n.join()}var iG=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let a=new Array(e.length);for(let u=0;u<a.length;u++)a[u]=e[t[u]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=pt(this.rank),r=sk("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=r[u];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${a[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Bh(e,t,a){let n=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iG(e.shape,t):new rG(e.shape,t);return a.runWebGLProgram(n,[e],e.dtype)}function oG(e,t,a,n){let r=t,s=e.shape.length,i=v.parseAxisParam(r,e.shape),o=i,l=T.getAxesPermutation(o,s),u=l!=null,d=e;u&&(d=Bh(e,l,n),o=T.getInnerMostAxes(o.length,s)),T.assertAxesAreInnerMostDims("sum",o,s);let[c,p]=T.computeOutAndReduceShapes(d.shape,o),h=c;a&&(h=T.expandShapeToKeepDim(c,i));let f=v.sizeFromShape(p),m=v.sizeFromShape(e.shape)/f,g=pe({inputs:{x:d},attrs:{shape:[m,f]},backend:n}),A=Dd(e.dtype),y=oo(g,A,"sum",n),x=pe({inputs:{x:y},attrs:{shape:h},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),u&&n.disposeIntermediateTensorInfo(d),x}function Vh(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return oG(r,s,i,a)}var lG={kernelName:Zi,backendName:"webgl",kernelFunc:Vh};function ga(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{perm:s}=n,i=a,o=r.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=r.shape[s[d]];let u;if(i.shouldExecuteOnCPU([r])){let d=i.texData.get(r.dataId).values,c=R1(d,r.shape,r.dtype,s,l);u=i.makeTensorInfo(l,r.dtype);let p=i.texData.get(u.dataId);p.values=c}else u=Bh(r,s,i);return u}var uG={kernelName:nr,backendName:"webgl",kernelFunc:ga},hk=1e3;function Fc({a:e,b:t,transposeA:a,transposeB:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,c=a?e.shape[u-2]:e.shape[u-1],p=n?t.shape[d-1]:t.shape[d-2],h=a?e.shape[u-1]:e.shape[u-2],f=n?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),y=v.sizeFromShape(g),x=ro.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${n} must match.`);let b=a?[A,c,h]:[A,h,c],w=n?[y,f,p]:[y,p,f],S=pe({inputs:{x:e},backend:r,attrs:{shape:b}}),N=pe({inputs:{x:t},backend:r,attrs:{shape:w}}),C=[S,N],M=Math.max(A,y),$=a?S.shape[1]:S.shape[2],E=s!=null,I=i!=null,R=l==="leakyrelu",P=l!=null?ed(l,!0):null,D=E||I||R||P!=null,W;if((h===1||f===1)&&$>hk&&D===!1){let G=S,U=N;a&&(G=ga({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),C.push(G)),n&&(U=ga({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),C.push(U));let H=f!==1,Z=f===1,Q=G;H&&(Q=pe({inputs:{x:G},backend:r,attrs:{shape:[M,$,1]}}),C.push(Q));let Y=f===1?2:1,ee=U;Z&&(ee=pe({inputs:{x:U},backend:r,attrs:{shape:[M,1,$]}}),C.push(ee));let ne=$1({inputs:{a:Q,b:ee},backend:r});W=Vh({inputs:{x:ne},backend:r,attrs:{axis:Y,keepDims:!0}}),C.push(ne)}else{let G=Yt(e.dtype,t.dtype),U=new ck(b,w,[M,h,f],a,n,E,P,I,R),H=[S,N];if(s!=null&&H.push(s),I&&H.push(i),R){let Z=r.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));H.push(Z),C.push(Z)}W=r.runWebGLProgram(U,H,G)}let V=pe({inputs:{x:W},backend:r,attrs:{shape:x}});C.push(W);for(let G of C)r.disposeIntermediateTensorInfo(G);return V}function dG(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=n;return Fc({a:r,b:s,transposeA:l,transposeB:u,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:c,activation:d})}var pG={kernelName:Lr,backendName:"webgl",kernelFunc:dG},dy="return abs(x);";function cG(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=a.texData.get(n.dataId),i=nk(s.values);return a.makeTensorInfo(n.shape,n.dtype,i)}let r;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Bs(n.shape,dy):r=new tr(n.shape,dy),a.runWebGLProgram(r,[n],n.dtype)}var hG={kernelName:ul,backendName:"webgl",kernelFunc:cG},fG=yn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,mG=Ke({opSnippet:fG}),gG={kernelName:ud,backendName:"webgl",kernelFunc:mG},AG=yn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,yG=Ke({opSnippet:AG}),xG={kernelName:dd,backendName:"webgl",kernelFunc:yG},py="return a + b;",bG=Qt({opSnippet:py,packedOpSnippet:py,supportsComplex:!0,cpuKernelImpl:RV}),vG={kernelName:ur,backendName:"webgl",kernelFunc:bG},wG=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let a=[];this.variableNames.forEach(r=>{a.push(`float v${r} = get${r}AtOutCoords();`)});let n=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}},kG=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let a=[];this.variableNames.forEach(r=>{a.push(`vec4 v${r} = get${r}AtOutCoords();`)});let n=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function pc(e){let{inputs:t,backend:a}=e,n=t;if(n.length===1)return Ua({inputs:{x:n[0]},backend:a});if(n.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(n.length/2),l=pc({inputs:n.slice(0,o),backend:a}),u=pc({inputs:n.slice(o),backend:a});return pc({inputs:[l,u],backend:a})}let r=n.map(o=>o.dtype).reduce((o,l)=>Yt(o,l)),s=n.map(o=>o.shape),i=B().getBool("WEBGL_PACK")?new kG(n[0].shape,s):new wG(n[0].shape,s);return a.runWebGLProgram(i,n,r)}var IG={kernelName:li,backendName:"webgl",kernelFunc:pc};function SG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),c=r;d!=null&&(c=ga({inputs:{x:r},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("all",u,o);let[p,h]=T.computeOutAndReduceShapes(c.shape,u),f=v.sizeFromShape(h),m=pe({inputs:{x:c},backend:a,attrs:{shape:[-1,f]}}),g=oo(m,m.dtype,"all",a),A;if(i){let y=T.expandShapeToKeepDim(p,l);A=pe({inputs:{x:g},backend:a,attrs:{shape:y}})}else A=pe({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(c),A}var TG={kernelName:dl,backendName:"webgl",kernelFunc:SG};function NG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),c=r;d!=null&&(c=ga({inputs:{x:r},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,o)),T.assertAxesAreInnerMostDims("any",u,o);let[p,h]=T.computeOutAndReduceShapes(c.shape,u),f=v.sizeFromShape(h),m=pe({inputs:{x:c},backend:a,attrs:{shape:[-1,f]}}),g=oo(m,m.dtype,"any",a),A;if(i){let y=T.expandShapeToKeepDim(p,l);A=pe({inputs:{x:g},backend:a,attrs:{shape:y}})}else A=pe({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(c),A}var CG={kernelName:pl,backendName:"webgl",kernelFunc:NG},EG=class{constructor(e,t,a){this.variableNames=["A"];let{windowSize:n,batchSize:r,outSize:s}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i=t==="max"?">":"<",o=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},RG=class{constructor(e,t,a,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,l=pt(o),u=ma("coords",o),d,c;if(s===1){c=o+1;let N=pt(c);d=`
        ${N} sourceLocR = ${N}(${u.join()}, 0);
        ++${u[o-1]};
        ${N} sourceLocG = ${N}(${u.join()}, 0);
        ++${u[o-2]};
        ${N} sourceLocA = ${N}(${u.join()}, 0);
        --${u[o-1]};
        ${N} sourceLocB = ${N}(${u.join()}, 0);
        --${u[o-2]};`}else c=o,d=`
        ${l} sourceLocR = coords;
        ++${u[o-1]};
        ${l} sourceLocG = coords;
        ++${u[o-2]};
        ${l} sourceLocA = coords;
        --${u[o-1]};
        ${l} sourceLocB = coords;
        --${u[o-2]};`;let p=["x","y","z","w","u","v"].slice(0,c),h="."+p[c-1],f=p.map(N=>"int "+N),m=ma("sourceLocR",c-1).concat("inIdx.r"),g=ma("sourceLocG",c-1).concat("inIdx.g"),A=ma("sourceLocB",c-1).concat("inIdx.b"),y=ma("sourceLocA",c-1).concat("inIdx.a"),x=a==="max"?"greaterThan":"lessThan",b=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${A.join()}),
                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${A.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,S=n?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function fk(e,t,a,n=null){let r=t.shape[0],s=t.shape[1];n!=null&&(r=n.shape[0],s=n.shape[1]);let i=T.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new EG(o,a,n==null),u=[t];n!=null&&u.push(n);let d=e.runWebGLProgram(l,u,"int32");if(d.shape[1]===1)return d;let c=fk(e,t,a,d);return e.disposeIntermediateTensorInfo(d),c}function mk(e,t,a,n=null){let r=n!=null?n.shape:t.shape,s=r[r.length-1],i=T.computeOptimalWindowSize(s),o=new RG(r,i,a,n==null),l=n==null?[t]:[t,n],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let d=mk(e,t,a,u);return e.disposeIntermediateTensorInfo(u),d}return u}function gk(e,t,a,n){let r=[a];if(T.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,l=t;o&&(l=e.unpackTensor(t),s.push(l));let[u,d]=T.computeOutAndReduceShapes(l.shape,r),c=v.sizeFromShape(d),p=pe({inputs:{x:l},backend:e,attrs:{shape:[-1,c]}});s.push(p);let h=fk(e,p,n);s.push(h);let f=pe({inputs:{x:h},backend:e,attrs:{shape:u}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return mk(e,t,n)}function _G(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=ga({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=gk(a,l,i[0],"max");return u.forEach(c=>a.disposeIntermediateTensorInfo(c)),d}var $G={kernelName:ui,backendName:"webgl",kernelFunc:_G};function MG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=ga({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=gk(a,l,i[0],"min");return u.forEach(c=>a.disposeIntermediateTensorInfo(c)),d}var FG={kernelName:pd,backendName:"webgl",kernelFunc:MG},OG=yn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,PG=Ke({opSnippet:OG}),DG={kernelName:cd,backendName:"webgl",kernelFunc:PG},zG=yn+"return log(x + sqrt(x * x + 1.0));",LG=Ke({opSnippet:zG}),WG={kernelName:hd,backendName:"webgl",kernelFunc:LG},BG=yn+`
  return atan(x);
`,VG=Ke({opSnippet:BG}),UG={kernelName:fd,backendName:"webgl",kernelFunc:VG},GG=_1+`
  return atan(a, b);
`,HG=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qd+`
  return result;
`,jG=Qt({opSnippet:GG,packedOpSnippet:HG}),qG={kernelName:cl,backendName:"webgl",kernelFunc:jG},XG=yn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,KG=Ke({opSnippet:XG}),ZG={kernelName:md,backendName:"webgl",kernelFunc:KG},td=class{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,A="0.0";if(f||(A="-1.0 / 1e-20"),a){let N=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?r?m:g:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / count");let b=Math.floor(s/4)*4,w=s%4,S=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${x});
      }
    `}},M1=class{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",x="0.0";if(y||(x="-1.0 / 1e-20"),a){let M=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${A});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${M} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");let S=Math.floor(s/4)*4,N=s%4,C=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${A});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${C}
            }

            int xC = xCCorner + ${S};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${C}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${C}
            }
          }
          setOutput(${w});
        }
      }
    `}};function YG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;Hl(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&v.arraysEqual(d.inShape,d.outShape))return Ua({inputs:{x:r},backend:a});let c=new td(d,"avg",!1);return a.runWebGLProgram(c,[r],"float32")}var JG={kernelName:di,backendName:"webgl",kernelFunc:YG};function QG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n,d=[1,1,1],c=T.computePool3DInfo(r.shape,s,i,d,o,l,u),p=new M1(c,"avg",!1);return a.runWebGLProgram(p,[r],"float32")}var eH={kernelName:Hc,backendName:"webgl",kernelFunc:QG},tH=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,c=1/(t*a);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},aH=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=d-1-e.padInfo.front,f=c-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*a*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nH(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=n,c=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,c,u,d),h=new aH(p);return a.runWebGLProgram(h,[r],i.dtype)}var rH={kernelName:U2,backendName:"webgl",kernelFunc:nH};function sH(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s;Hl([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=n,d=T.computePool2DInfo(i.shape,o,l,1,u),c=new tH(d);return a.runWebGLProgram(c,[r],i.dtype)}var iH={kernelName:V2,backendName:"webgl",kernelFunc:sH};function oH(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;return Fc({a:r,b:s,transposeA:i,transposeB:o,backend:a})}var lH={kernelName:pi,backendName:"webgl",kernelFunc:oH},uH=class{constructor(e,t,a,n,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a);let i="0.0";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},dH=class{constructor(e,t,a,n,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a);let i="vec4(0.0)";n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},pH=({inputs:e,backend:t,attrs:a})=>{let{x:n,mean:r,variance:s,offset:i,scale:o}=e;v.assert(r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=a;l==null&&(l=.001);let u=[n,r,s],d=null;i!=null&&(d=i.shape,u.push(i));let c=null;o!=null&&(c=o.shape,u.push(o));let p=B().getBool("WEBGL_PACK_NORMALIZATION")?new dH(n.shape,r.shape,s.shape,d,c,l):new uH(n.shape,r.shape,s.shape,d,c,l);return t.runWebGLProgram(p,u,u[0].dtype)},cH={kernelName:Ni,backendName:"webgl",kernelFunc:pH},hH=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=pt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=fH(this.rank),n,r=e.map((s,i)=>`sourceLoc.${c2[i]} = start[${i}] + coords.${c2[i]};`);n=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${a}));
      }
    `}},c2=["x","y","z","w","u","v"];function fH(e){if(e===1)return"sourceLoc";if(e<=6)return c2.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var mH=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=pt(this.rank),a=ma("coords",this.rank),n=ma("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${r})`,i=`
      result.x = ${s};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,d)=>`start[${d}]`).join()});`:e.map((u,d)=>`${n[d]} = ${a[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function gH(e,t,a,n){let r=n.texData.get(e.dataId),s=n.makeTensorInfo(a,e.dtype),i=n.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=a,i.dtype=e.dtype;let o=gt.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,l+1),s}function Yl(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n,[o,l]=gt.parseSliceParams(r,s,i);if(gt.assertParamsValid(r,o,l),v.sizeFromShape(l)===0)return a.makeTensorInfo(l,r.dtype,[]);if(a.shouldExecuteOnCPU([r])||r.dtype==="string"){let c=a.texData.get(r.dataId),p=oU(c.values,o,l,r.shape,r.dtype);return a.makeTensorInfo(l,r.dtype,p)}let{isPacked:u}=a.texData.get(r.dataId),d=gt.isSliceContinous(r.shape,o,l);if(u||!d){let c=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mH(l):new hH(l),p=[o];return a.runWebGLProgram(c,[r],r.dtype,p)}return a.uploadToGPU(r.dataId),gH(r,o,l,a)}var AH={kernelName:_l,backendName:"webgl",kernelFunc:Yl},yH=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(r.shape,s,o),c=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),h=[],f=pe({inputs:{x:r},backend:a,attrs:{shape:l}}),m=ga({inputs:{x:f},backend:a,attrs:{perm:u}}),g=pe({inputs:{x:m},backend:a,attrs:{shape:d}}),A=Yl({inputs:{x:g},backend:a,attrs:{begin:c,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>a.disposeIntermediateTensorInfo(y)),A},xH={kernelName:hl,backendName:"webgl",kernelFunc:yH};function bH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i}=n,o=a.readSync(r.dataId),l=a.readSync(s.dataId),u=ak(o,l,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,u)}var vH={kernelName:jc,backendName:"webgl",kernelFunc:bH};function wH(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,s=a.readSync(n.dataId),i=a.readSync(r.dataId),o=T.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var kH={kernelName:qc,backendName:"webgl",kernelFunc:wH},IH="return float(a != b);",Ak=Qt({opSnippet:IH,cpuKernelImpl:JV,dtype:"bool"}),SH={kernelName:os,backendName:"webgl",kernelFunc:Ak};function tp(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.texData.get(n.dataId);return Ua({inputs:{x:r.complexTensorInfos.real},backend:a})}var TH={kernelName:Id,backendName:"webgl",kernelFunc:tp},NH="return float(int(x));";function CH(e,t){let a=new tr(e.shape,NH),n=t.runWebGLProgram(a,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function h2(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Ua({inputs:{x:r},backend:a});let i=Nn(r.shape),o=h2({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),l=xs({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeIntermediateTensorInfo(o),l}if(r.dtype==="complex64"){let i=tp({inputs:{input:r},backend:a}),o=h2({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(r.dtype,s)){let i=Ua({inputs:{x:r},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(a.shouldExecuteOnCPU([r])){let i=a.texData.get(r.dataId).values,[o,l,u]=$V(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,l,u)}if(s==="int32")return CH(r,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=Ak({inputs:{a:r,b:i},backend:a});return a.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var EH={kernelName:ci,backendName:"webgl",kernelFunc:h2},cy="return ceil(x);",RH=Ke({opSnippet:cy,packedOpSnippet:cy,cpuKernelImpl:MV}),_H={kernelName:Xr,backendName:"webgl",kernelFunc:RH},$H=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},MH=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function FH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o;B().getBool("WEBGL_PACK_CLIP")?o=new MH(r.shape):o=new $H(r.shape);let l=[[s],[i]];return a.runWebGLProgram(o,[r],r.dtype,l)}var OH={kernelName:Kr,backendName:"webgl",kernelFunc:FH},PH=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function hy(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function DH(e){let{inputs:t,backend:a}=e,{x:n}=t,r=a.texData.get(n.dataId),s=new PH(n.shape),i=[hy(n,r.complexTensorInfos.real),hy(n,r.complexTensorInfos.imag)];return a.runWebGLProgram(s,i,i[0].dtype)}var zH={kernelName:Xc,backendName:"webgl",kernelFunc:DH},LH=class{constructor(e){this.outputShape=[],this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let a=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];a.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let n=t.length,r=t[t.length-1];a.push(`else setOutput(getT${n}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}},WH=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=T.computeOutShape(e,t);let a=this.outputShape,n=a.length,r=pt(n),s=ma("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=i[t],u=i.slice(-2),d=i.join(),c=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];c+=`
        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${Vp(i,l,m)}),
            vec2(${Vp(u,l,m)}));
        }`}let p=o.length,h=o[o.length-1];c+=`
        return getChannel(
          getT${p}(${Vp(i,l,h)}),
          vec2(${Vp(u,l,h)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${c}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${a[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${a[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${a[n-2]} &&
            ${s[n-1]} < ${a[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Vp(e,t,a){let n=e.indexOf(t);return e.map((r,s)=>s===n?`${r} - ${a}`:r).join()}function Uh(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.texData.get(n.dataId);return Ua({inputs:{x:r.complexTensorInfos.imag},backend:a})}var BH={kernelName:xd,backendName:"webgl",kernelFunc:Uh};function Su(e,t,a){let n=e[0].dtype;if(n==="complex64"){let c=e.map(g=>tp({inputs:{input:g},backend:a})),p=e.map(g=>Uh({inputs:{input:g},backend:a})),h=Su(c,t,a),f=Su(p,t,a),m=xs({inputs:{real:h,imag:f},backend:a});return c.forEach(g=>a.disposeIntermediateTensorInfo(g)),p.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),m}let r=a.shouldExecuteOnCPU(e);if(n==="string"&&(r=!0),r){let c=e.map(y=>{let x=v.sizeFromShape(y.shape.slice(t));return pe({inputs:{x:y},backend:a,attrs:{shape:[-1,x]}})}),p=c.map(y=>({vals:a.readSync(y.dataId),shape:y.shape})),h=T.computeOutShape(c.map(y=>y.shape),1),f=c[0].shape[0]===1,m=FV(p,h,n,f),g=T.computeOutShape(e.map(y=>y.shape),t),A=a.makeTensorInfo(g,n,m);return c.forEach(y=>a.disposeIntermediateTensorInfo(y)),A}let s=B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>s){let c=[];for(let h=0;h<e.length;h+=s){let f=e.slice(h,h+s);c.push(Su(f,t,a))}let p=Su(c,t,a);for(let h of c)a.disposeIntermediateTensorInfo(h);return p}if(B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let c=new WH(e.map(p=>p.shape),t);return a.runWebGLProgram(c,e,n)}let{tensors2D:i,outShape:o}=VH(e,t,a),l=new LH(i.map(c=>c.shape)),u=a.runWebGLProgram(l,i,n);i.forEach(c=>a.disposeIntermediateTensorInfo(c));let d=pe({inputs:{x:u},attrs:{shape:o},backend:a});return a.disposeIntermediateTensorInfo(u),d}function VH(e,t,a){let n=T.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>pe({inputs:{x:r},attrs:{shape:[-1,v.sizeFromShape(r.shape.slice(t))]},backend:a})),outShape:n}}function yk(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(u=>u.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(u=>u.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>v.sizeFromShape(u.shape)>0);return l.length===1?Ua({inputs:{x:l[0]},backend:a}):Su(l,s,a)}var UH={kernelName:fl,backendName:"webgl",kernelFunc:yk},xk=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,A=m?2:3,y=m?3:1,x="",b="";a&&(n?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`
          float activation(float x) {
            ${a}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${A}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},GH=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,a=e.padInfo.top,n=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,c=e.filterHeight,p=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${a}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},bk=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xa(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)c+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;c+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)c+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(d+1)/2;m++){let g=m*2;if(c+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<u&&(s%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?c+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){let A=s%2===0?v.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${A};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:c+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):A===1?c+=`
                     xC${g+1} = xTexelC${g};
                     `:c+=`
                     xCOffset = xC + ${A};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(s%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(c+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(c+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(c+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let p="",h="";a&&(n?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${a}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${a}
         }`:p=`vec4 activation(vec4 x) {
           ${a}
         }`,h="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${h}
         setOutput(result);
       }
     `}},HH=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=xa(this.outputShape.length);let{dataFormat:a}=t,n=ya(),r=a==="channelsLast",s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${n.output} = result;
      }
    `}};function Oc(e,t){let a=e.length;return a>=3?t?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!t&&a===1&&e[0]>1?[e[0],1]:null}function vk({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=e.shape,u=n.texData.get(e.dataId),d=a.inChannels,c=l[0]*l[1]*l[2],p=a.outChannels,h=a.dataFormat==="channelsLast",f=!1,m=!1,g,A=[];if(s!=null){let y=Oc(s.shape,h);y!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:y}}),A.push(s))}if(r!=null){let y=Oc(r.shape,h);y!=null&&(r=pe({inputs:{x:r},backend:n,attrs:{shape:y}}),A.push(r))}if(!((c===1||p===1)&&d>hk)&&u.isPacked&&h&&u.texture!=null&&l[2]%2!==0&&v.arraysEqual(u.shape.slice(-3),l.slice(-3))){let y=l[0]*l[1]*(l[2]+1),x={dataId:e.dataId,shape:[1,y,a.inChannels],dtype:e.dtype},b=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v.assert(Qu(u.shape,x.shape),()=>`packed reshape ${u.shape} to ${x.shape} isn't free`);let w=pe({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}});A.push(w);let S=Fc({a:x,b:w,backend:n,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),N=n.texData.get(S.dataId);v.assert(N.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=b,N.shape=a.outShape,g=Ua({inputs:{x:S},backend:n}),g.shape=a.outShape,A.push(S)}else{let y=a.outHeight*a.outWidth,x=pe({inputs:{x:e},backend:n,attrs:{shape:h?[a.batchSize,y,a.inChannels]:[a.batchSize,a.inChannels,y]}}),b=pe({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}}),w=Fc({a:h?x:b,b:h?b:x,transposeA:!h,transposeB:m,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=pe({inputs:{x:w},backend:n,attrs:{shape:a.outShape}}),A.push(x),A.push(b),A.push(w)}for(let y of A)n.disposeIntermediateTensorInfo(y);return g}function wk({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:c,outHeight:p,dataFormat:h}=a,f=h==="channelsLast",m=l*u*d,g=p*c,A=[a.batchSize,m,g],y=!0,x=!1,b=[];if(s!=null){let G=Oc(s.shape,f);G!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:G}}),b.push(s))}if(r!=null){let G=Oc(r.shape,f);G!=null&&(r=pe({inputs:{x:r},backend:n,attrs:{shape:G}}),b.push(r))}let w=pe({inputs:{x:t},backend:n,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w);let S=new HH(A,a),N=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],C=n.runWebGLProgram(S,[e],"float32",N),M=pe({inputs:{x:C},backend:n,attrs:{shape:A}});b.push(C),b.push(M);let $=r!=null,E=s!=null,I=o==="leakyrelu",R=o?ed(o,!0):null,P=new ck(f?M.shape:w.shape,f?w.shape:M.shape,f?[a.batchSize,g,a.outChannels]:[a.batchSize,a.outChannels,g],y,x,$,R,E,I),D=f?[M,w]:[w,M];if(r&&D.push(r),E&&D.push(s),I){let G=n.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));D.push(G),b.push(G)}let W=n.runWebGLProgram(P,D,"float32"),V=pe({inputs:{x:W},backend:n,attrs:{shape:a.outShape}});b.push(W);for(let G of b)n.disposeIntermediateTensorInfo(G);return V}function jH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,c=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(r.shape,s.shape,i,u,o,d,!1,c),h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=vk({x:r,filter:s,convInfo:p,backend:a});else if(p.strideWidth<=2&&c==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){let m=new bk(p),g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];h=a.runWebGLProgram(m,[r,s],"float32",g)}else if(B().getBool("WEBGL_CONV_IM2COL"))h=wk({x:r,filter:s,convInfo:p,backend:a});else{let m=new xk(p);h=a.runWebGLProgram(m,[r,s],"float32")}let f=pe({inputs:{x:h},backend:a,attrs:{shape:p.outShape}});return a.disposeIntermediateTensorInfo(h),f}var qH={kernelName:hi,backendName:"webgl",kernelFunc:jH},XH=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},KH=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},ZH=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},YH=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=a-1-e.padInfo.top,u=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function JH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=n,c=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(r.shape,d,i,1,o,u,!1,c),h=new XH(p);return a.runWebGLProgram(h,[r,s],"float32")}var QH={kernelName:Kc,backendName:"webgl",kernelFunc:JH};function ej(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=n,c=T.convertConv2DDataFormat(u),p=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),h=new KH(p);return a.runWebGLProgram(h,[r,s],"float32")}var tj={kernelName:fi,backendName:"webgl",kernelFunc:ej};function aj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=T.computeConv3DInfo(r.shape,s.shape,i,l,o),d=new GH(u);return a.runWebGLProgram(d,[r,s],"float32")}var nj={kernelName:Zc,backendName:"webgl",kernelFunc:aj};function rj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=n,u=T.computeConv3DInfo(r.shape,l,i,1,o),d=new ZH(u);return a.runWebGLProgram(d,[r,s],"float32")}var sj={kernelName:G2,backendName:"webgl",kernelFunc:rj};function ij(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=n,u=T.computeConv3DInfo(l,s.shape,o,1,i),d=new YH(u);return a.runWebGLProgram(d,[r,s],"float32")}var oj={kernelName:Yc,backendName:"webgl",kernelFunc:ij},lj=Zl+`
  return cos(x);
`,uj=Ke({opSnippet:lj}),dj={kernelName:mi,backendName:"webgl",kernelFunc:uj},pj=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cj=Ke({opSnippet:pj}),hj={kernelName:gi,backendName:"webgl",kernelFunc:cj},fj=class{constructor(e,t,a,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,c]=a;this.outputShape=[u,d,c,l];let p=n==="bilinear"?1:0,[h,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,A]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,x,b]=c>1?[`${(o-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${A};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},mj=e=>{let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,d=new fj(r.shape,s.shape,o,l,u);return a.runWebGLProgram(d,[r,s,i],"float32")},gj={kernelName:xi,backendName:"webgl",kernelFunc:mj},ad;(function(e){e.Prod="*",e.Sum="+"})(ad||(ad={}));var fy=class{constructor(e,t,a,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,s=this.op===ad.Prod?"1.0":"0.0",i=a?s:`getX(${my(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";a?(l=n?`end != ${o-1}`:"end != 0",u=n?"end + 1":"end - 1"):(l=n?`end + pow2 < ${o}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${pt(r)} coords = getOutputCoords();
        int end = ${gy(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${gy(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${my(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function my(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function gy(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function kk(e,t,a,n,r,s){let i=t.shape.length,o=T.getAxesPermutation([n],i),l=t;o!=null&&(l=ga({inputs:{x:t},backend:a,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let d=l.shape[u],c=Ua({inputs:{x:l},backend:a});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){let h=new fy(e,l.shape,!1,s),f=[[p]],m=c;c=a.runWebGLProgram(h,[c],c.dtype,f),a.disposeIntermediateTensorInfo(m)}if(r){let p=new fy(e,l.shape,r,s),h=c;c=a.runWebGLProgram(p,[c],c.dtype),a.disposeIntermediateTensorInfo(h)}if(o!=null){let p=T.getUndoAxesPermutation(o),h=ga({inputs:{x:c},backend:a,attrs:{perm:p}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(l),h}return c}function Aj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return kk(ad.Prod,r,a,s,i,o)}var yj={kernelName:Ai,backendName:"webgl",kernelFunc:Aj};function xj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return kk(ad.Sum,r,a,s,i,o)}var bj={kernelName:yi,backendName:"webgl",kernelFunc:xj};function vj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=n;if(r.shape.length===1){let l=a.readSync(r.dataId),u=a.readSync(s.dataId),d=ak(l,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}else if(r.shape.length===2){let l=a.bufferSync(r),u=a.bufferSync(s),d=_V(l,u,i,o);return a.makeTensorInfo(d.shape,s.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var wj={kernelName:Jc,backendName:"webgl",kernelFunc:vj},kj=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Ij(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n,o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],c=l*s,p=u*s,h=d/(s*s),f=i==="NHWC"?[o,c,p,h]:[o,h,c,p],m=new kj(f,s,i);return a.runWebGLProgram(m,[r],r.dtype)}var Sj={kernelName:bi,backendName:"webgl",kernelFunc:Ij},Ik=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xa(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";a&&(n?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:l=`
          float activation(float x) {
            ${a}
          }
        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}},Sk=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=xa(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,c=d,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<d;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(c+1)/2;g++){let A=g*2;if(p+=`
          xC = xCCorner + ${A*l};
          `,o===1){if(A<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }
              `,l===1&&A>0?p+=`
                xC${A} = vec4(xTexelC${A-2}.zw, xTexelC${A}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${A} = vec4(previous.zw, xTexelC${A}.xy);
                  } else {
                    xC${A} = vec4(0.0, 0.0, xTexelC${A}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xC${A} = xTexelC${A};
                `,A+1<d)){let y=i%2===0?v.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                    xTexelC${A+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${A+1}.zw = vec2(0.0);
                    }
                    xTexelC${A+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${A+1} = vec4(previous.zw, xTexelC${A+1}.xy);
                    } else {
                     xC${A+1} = vec4(0.0, 0.0, xTexelC${A+1}.xy);
                    }
                    `:p+=`
                    xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.xy);
                    `):y===1?p+=`
                    xC${A+1} = xTexelC${A};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                      xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${A+1}.zw = vec2(0.0);
                      }
                      xTexelC${A+1}Ready = 1;
                    }

                    xC${A+1} = xTexelC${A+1};
                    `}}else A<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.0);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
              `,A+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${A+1} = vec4(xTexelC${A+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${A}Ready == 0) {
                  xTexelC${A} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${A}.zw = vec2(0.0);
                  }
                  xTexelC${A}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${A+1}Ready == 0) {
                  xTexelC${A+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${A+1}.zw = vec2(0.);
                  }
                  xTexelC${A+1}Ready = 1;
                }

                xC${A} = vec4(
                  xTexelC${A}.xy, xTexelC${A+1}.xy);
              `,A+1<d&&(p+=`
                  xC${A+1} = vec4(xTexelC${A}.zw, xTexelC${A+1}.zw);
                `)));A<d&&(p+=`
            wTexel = getW(r, ${A}, d1, q);
            dotProd += xC${A} * vec4(wTexel.xz, wTexel.xz);
          `,A+1<d&&(p+=`
              wTexel = getW(r, ${A+1}, d1, q);
              dotProd += xC${A+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let h="",f="";a&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:h=`vec4 activation(vec4 x) {
          ${a}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function Tj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n,d=l;d==null&&(d=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=T.computeConv2DInfo(r.shape,s.shape,i,d,o,u,!0),p;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels===1?p=new Sk(c):p=new Ik(c);let h=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return a.runWebGLProgram(p,[r,s],"float32",h)}var Nj={kernelName:vi,backendName:"webgl",kernelFunc:Tj},Cj=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ej=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=a-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Rj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=n,c=T.computeConv2DInfo(r.shape,d,i,o,l,u,!0),p=new Cj(c);return a.runWebGLProgram(p,[r,s],"float32")}var _j={kernelName:Qc,backendName:"webgl",kernelFunc:Rj};function $j(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=n,c=T.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new Ej(c);return a.runWebGLProgram(p,[r,s],"float32")}var Mj={kernelName:eh,backendName:"webgl",kernelFunc:$j},Fj=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Oj(e){let{inputs:t,backend:a}=e,{x:n}=t,r=[...n.shape,...n.shape],s=v.sizeFromShape(n.shape),i=pe({inputs:{x:n},backend:a,attrs:{shape:[s]}}),o=new Fj(s),l=a.runWebGLProgram(o,[i],i.dtype),u=pe({inputs:{x:l},backend:a,attrs:{shape:r}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(l),u}var Pj={kernelName:th,backendName:"webgl",kernelFunc:Oj},Dj=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:a,padInfo:n,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:c}=n;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${s});
      const ivec2 pads = ivec2(${d}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function zj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=T.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l),d,c=new Dj(u);d=a.runWebGLProgram(c,[r,s],"float32");let p=pe({inputs:{x:d},backend:a,attrs:{shape:u.outShape}});return a.disposeIntermediateTensorInfo(d),p}var Lj={kernelName:ah,backendName:"webgl",kernelFunc:zj};function Wj(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(r,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let m=0;m<c;++m){for(let g of d[m]){let{permutationIndices:A,expandDims:y}=T.getEinsumPermutation(h,l[g]),x;T.isIdentityPermutation(A)?x=s[g]:(x=ga({inputs:{x:s[g]},backend:a,attrs:{perm:A}}),f.push(x));let b=x.shape.slice();for(let w=0;w<y.length;++w)b.splice(y[w],0,1);v.arraysEqual(x.shape,b)||(x=pe({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=$1({inputs:{a:x,b:p},backend:a}),f.push(p))}m<c-1&&(u[m]>=0&&(p=Vh({inputs:{x:p},backend:a,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&a.disposeIntermediateTensorInfo(m);return p}var Bj={kernelName:Ad,backendName:"webgl",kernelFunc:Wj},Vj="return (x >= 0.0) ? x : (exp(x) - 1.0);",Uj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Gj=Ke({opSnippet:Vj,packedOpSnippet:Uj}),Hj={kernelName:ki,backendName:"webgl",kernelFunc:Gj},jj="return (b >= 1.0) ? a : a * (b + 1.0);",qj=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Xj=e=>{let{inputs:t,backend:a}=e,{dy:n,y:r}=t,s=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ep(qj,n.shape,r.shape):new nl(jj,n.shape,r.shape);return a.runWebGLProgram(s,[n,r],n.dtype)},Kj={kernelName:H2,backendName:"webgl",kernelFunc:Xj},Zj=`
  return vec4(equal(a, b));
`,Yj="return float(a == b);",Jj=Qt({opSnippet:Yj,packedOpSnippet:Zj,dtype:"bool",cpuKernelImpl:OV}),Qj={kernelName:Zr,backendName:"webgl",kernelFunc:Jj},eq=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${T.ERF_P};
  float a1 = ${T.ERF_A1};
  float a2 = ${T.ERF_A2};
  float a3 = ${T.ERF_A3};
  float a4 = ${T.ERF_A4};
  float a5 = ${T.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,tq=Ke({opSnippet:eq}),aq={kernelName:yd,backendName:"webgl",kernelFunc:tq},nq=Zl+`
  return exp(x);
`,rq=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tk=Ke({opSnippet:nq,packedOpSnippet:rq,cpuKernelImpl:PV,dtype:"float32"}),sq={kernelName:Yr,backendName:"webgl",kernelFunc:Tk};function f2(e){let{inputs:t,attrs:a,backend:n}=e,{dim:r}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(v.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),pe({inputs:{x:s},backend:n,attrs:{shape:o}})}var iq={kernelName:ml,backendName:"webgl",kernelFunc:f2},Ay="return exp(x) - 1.0;",oq=Ke({opSnippet:Ay,packedOpSnippet:Ay,cpuKernelImpl:DV}),lq={kernelName:Ii,backendName:"webgl",kernelFunc:oq},yy=class{constructor(e,t,a){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let r=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${n}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function Nk(e,t,a){let n=a.texData.get(e.dataId),r=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=pe({inputs:{x:e},backend:a,attrs:{shape:[i,s]}}),l=o.shape,u=new yy("real",l,t),d=new yy("imag",l,t),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],p=a.runWebGLProgram(u,c,"float32"),h=a.runWebGLProgram(d,c,"float32"),f=xs({inputs:{real:p,imag:h},backend:a});a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h);let m=pe({inputs:{x:f},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(f),m}function uq(e){let{inputs:t,backend:a}=e,{input:n}=t;return Nk(n,!1,a)}var dq={kernelName:nh,backendName:"webgl",kernelFunc:uq},pq=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function ap(e){let{backend:t,attrs:a}=e,{shape:n,value:r}=a,{dtype:s}=a;if(s=s||v.inferDtype(r),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(r),t.makeTensorInfo(n,s,i)}else{let i=new pq(n,r),o=[[r]];return t.runWebGLProgram(i,[],s,o)}}var cq={kernelName:gl,backendName:"webgl",kernelFunc:ap},hq=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},fq={kernelName:Si,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,n=t,r=new hq(a.shape);return n.runWebGLProgram(r,[a],a.dtype)}},xy="return floor(x);",mq=Ke({opSnippet:xy,packedOpSnippet:xy,cpuKernelImpl:zV}),gq={kernelName:Jr,backendName:"webgl",kernelFunc:mq},Aq=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,yq=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,xq=Qt({opSnippet:Aq,packedOpSnippet:yq,dtype:"int32"}),bq={kernelName:Ti,backendName:"webgl",kernelFunc:xq},vq=class{constructor(e){this.variableNames=["A"];let t=ya(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},wq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=ya(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},kq={kernelName:Vu,backendName:"webgl",kernelFunc:Iq},To,qf=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Iq(e){let{inputs:t,backend:a,attrs:n}=e,{pixels:r}=t,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],c=[u,l,s];if(o||i){let m=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(To==null||m!==qf)&&(qf=m,To=document.createElement("canvas").getContext("2d",{willReadFrequently:qf})),To.canvas.width=l,To.canvas.height=u,To.drawImage(r,0,0,l,u),r=To.canvas}let p=a.makeTensorInfo(d,"int32");a.texData.get(p.dataId).usage=Ja.PIXELS,a.gpgpu.uploadPixelDataToTexture(a.getTexture(p.dataId),r);let h=B().getBool("WEBGL_PACK")?new wq(c):new vq(c),f=a.runWebGLProgram(h,[p],"int32");return a.disposeData(p.dataId),f}function Sq(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(r.shape,s.shape,l,c,u,p,!1,m),A,y=[],x=i!=null,b=o!=null,w=h==="leakyrelu",S=()=>{let C=[r,s],M=($,E)=>{if(E==="NCHW"&&$.shape.length===1&&$.shape[0]!==1){let I=pe({inputs:{x:$},backend:a,attrs:{shape:[$.shape[0],1,1]}});return y.push(I),I}return $};if(x&&C.push(M(i,d)),b&&C.push(M(o,d)),w){let $=a.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));C.push($),y.push($)}return C};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))A=vk({x:r,filter:s,convInfo:g,backend:a,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){let C=h?ed(h,!0):null,M=new bk(g,x,C,b,w),$=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=S();A=a.runWebGLProgram(M,E,"float32",$)}else if(B().getBool("WEBGL_CONV_IM2COL"))A=wk({x:r,filter:s,convInfo:g,backend:a,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{let C=h?ed(h,!1):null,M=new xk(g,x,C,b,w),$=S();A=a.runWebGLProgram(M,$,"float32")}let N=pe({inputs:{x:A},backend:a,attrs:{shape:g.outShape}});return y.push(A),y.forEach(C=>a.disposeIntermediateTensorInfo(C)),N}var Tq={kernelName:Wr,backendName:"webgl",kernelFunc:Sq};function Nq(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:h}=n,f=[],m=d;m==null&&(m=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=T.computeConv2DInfo(r.shape,s.shape,l,m,u,c,!0),A=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=p?ed(p,A):null,x=[r,s],b=i!=null,w=o!=null,S=p==="leakyrelu";if(b&&x.push(i),w&&x.push(o),S){let $=a.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));x.push($),f.push($)}let N;A?N=new Sk(g,b,y,w,S):N=new Ik(g,b,y,w,S);let C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=a.runWebGLProgram(N,x,"float32",C);return f.forEach($=>a.disposeIntermediateTensorInfo($)),M}var Cq={kernelName:Br,backendName:"webgl",kernelFunc:Nq},Eq=class{constructor(e,t,a,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=a;let r=pt(a.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function Rq(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=r.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[l,u,d,c]=T.prepareAndValidate(n,r),p=pe({inputs:{x:r},backend:a,attrs:{shape:[u,i]}}),h=pe({inputs:{x:n},backend:a,attrs:{shape:[v.sizeFromShape(n.shape)/d,d]}});if(a.shouldExecuteOnCPU([n,r])||n.dtype==="string"){let A=a.readSync(r.dataId),y=a.bufferSync(n),x=LV(A,y,n.dtype,u,i,d,c,n.shape,o);return a.makeTensorInfo(l,n.dtype,x.values)}let f=new Eq(i,c,[u,d],n.shape),m=a.runWebGLProgram(f,[h,p],h.dtype),g=pe({inputs:{x:m},backend:a,attrs:{shape:l}});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(m),g}var _q={kernelName:Ci,backendName:"webgl",kernelFunc:Rq},$q=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let a=pt(this.rank),n=Mq(e,2);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function Mq(e,t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)r===2?n.push("index"):n.push(`${a[r]}`);return n.join()}function Ck(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,r.shape)[0];if(B().get("DEBUG")){let y=a.readSync(s.dataId),x=r.shape[l];for(let b=0;b<y.length;++b){let w=y[b];v.assert(w<=x-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${x-1}]`)}}let u=T.segment_util.collectGatherOpShapeInfo(r,s,l,o),d=v.sizeFromShape(s.shape),c=[],p=pe({inputs:{x:r},backend:a,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=pe({inputs:{x:s},backend:a,attrs:{shape:[u.batchSize,d/u.batchSize]}});c.push(p),c.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(a.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let y=a.bufferSync(h),x=a.bufferSync(p),b=WV(x,y,f);return c.forEach(w=>a.disposeIntermediateTensorInfo(w)),a.makeTensorInfo(u.outputShape,b.dtype,b.values)}let m=new $q(p.shape,f),g=a.runWebGLProgram(m,[p,h],p.dtype);c.push(g);let A=pe({inputs:{x:g},backend:a,attrs:{shape:u.outputShape}});return c.forEach(y=>a.disposeIntermediateTensorInfo(y)),A}var Fq={kernelName:Al,backendName:"webgl",kernelFunc:Ck},Oq="return float(a > b);",Pq=`
  return vec4(greaterThan(a, b));
`,Dq=Qt({opSnippet:Oq,packedOpSnippet:Pq,cpuKernelImpl:BV,dtype:"bool"}),zq={kernelName:Qr,backendName:"webgl",kernelFunc:Dq},Lq="return float(a >= b);",Wq=`
  return vec4(greaterThanEqual(a, b));
`,Bq=Qt({opSnippet:Lq,packedOpSnippet:Wq,dtype:"bool",cpuKernelImpl:VV}),Vq={kernelName:es,backendName:"webgl",kernelFunc:Bq};function Uq(e){let{inputs:t,backend:a}=e,{input:n}=t;return Nk(n,!0,a)}var Gq={kernelName:rh,backendName:"webgl",kernelFunc:Uq},Hq="return float(!isnan(x) && !isinf(x));",jq=Ke({opSnippet:Hq,dtype:"bool"}),qq={kernelName:bd,backendName:"webgl",kernelFunc:jq},Xq="return float(isinf(x));",Kq=Ke({opSnippet:Xq,dtype:"bool"}),Zq={kernelName:vd,backendName:"webgl",kernelFunc:Kq},Yq="return float(isnan(x));",Jq=Ke({opSnippet:Yq,dtype:"bool"}),Qq={kernelName:yl,backendName:"webgl",kernelFunc:Jq},eX="return float(a < b);",tX=`
  return vec4(lessThan(a, b));
`,aX=Qt({opSnippet:eX,packedOpSnippet:tX,cpuKernelImpl:UV,dtype:"bool"}),nX={kernelName:ts,backendName:"webgl",kernelFunc:aX},rX="return float(a <= b);",sX=`
  return vec4(lessThanEqual(a, b));
`,iX=Qt({opSnippet:rX,packedOpSnippet:sX,cpuKernelImpl:GV,dtype:"bool"}),oX={kernelName:as,backendName:"webgl",kernelFunc:iX};function lX(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:s}=a,i=HV(n,r,s);return t.makeTensorInfo([i.length],"float32",i)}var uX={kernelName:sh,backendName:"webgl",kernelFunc:lX},dX=Zl+`
  return x < 0.0 ? 0./0. : log(x);
`,pX=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cX=Ke({opSnippet:dX,packedOpSnippet:pX,cpuKernelImpl:jV}),hX={kernelName:ns,backendName:"webgl",kernelFunc:cX},fX=Zl+`
  return log(1.0 + x);
`,mX=Ke({opSnippet:fX}),gX={kernelName:wd,backendName:"webgl",kernelFunc:mX},AX="return float(a >= 1.0 && b >= 1.0);",yX=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,xX=Qt({opSnippet:AX,packedOpSnippet:yX,dtype:"bool"}),bX={kernelName:_i,backendName:"webgl",kernelFunc:xX},vX="return float(!(x >= 1.0));",wX=Ke({opSnippet:vX}),kX={kernelName:$i,backendName:"webgl",kernelFunc:wX},IX="return float(a >= 1.0 || b >= 1.0);",SX=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,TX=Qt({opSnippet:IX,packedOpSnippet:SX,dtype:"bool"}),NX={kernelName:xl,backendName:"webgl",kernelFunc:TX},CX=class{constructor(e,t,a,n,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${n}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},EX=class{constructor(e,t,a,n,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${a}) + float(${n}) * sum`;r===.5?o=`inversesqrt(${l})`:r===1?o=`1.0/(${l})`:o=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},RX=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n,u=B().getBool("WEBGL_PACK_NORMALIZATION")?new EX(r.shape,s,i,o,l):new CX(r.shape,s,i,o,l);return a.runWebGLProgram(u,[r],r.dtype)},_X={kernelName:ih,backendName:"webgl",kernelFunc:RX},$X=class{constructor(e,t,a,n,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=n,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},MX=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=n,c=new $X(r.shape,o,l,u,d);return a.runWebGLProgram(c,[r,s,i],r.dtype)},FX={kernelName:j2,backendName:"webgl",kernelFunc:MX};function OX(e,t,a,n){let r=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/r,i=pe({inputs:{x:e},attrs:{shape:[s,r]},backend:n}),o=oo(i,e.dtype,"max",n),l=pe({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}function Ek(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),c=d!=null,p=a.shouldExecuteOnCPU([r]),h=r;if(c){if(p){let y=a.texData.get(h.dataId).values,x=new Array(o);for(let S=0;S<x.length;S++)x[S]=r.shape[d[S]];let b=R1(y,r.shape,r.dtype,d,x);h=a.makeTensorInfo(x,r.dtype);let w=a.texData.get(h.dataId);w.values=b}else h=Bh(r,d,a);u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("max",u,o);let[f,m]=T.computeOutAndReduceShapes(h.shape,u),g=f;i&&(g=T.expandShapeToKeepDim(f,l));let A;if(p){let y=a.texData.get(h.dataId).values,x=qV(y,v.sizeFromShape(m),g,r.dtype);A=a.makeTensorInfo(g,r.dtype);let b=a.texData.get(A.dataId);b.values=x}else A=OX(h,m,g,a);return c&&a.disposeIntermediateTensorInfo(h),A}var PX={kernelName:Mi,backendName:"webgl",kernelFunc:Ek},DX=_1+`
  return max(a, b);
`,zX=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qd+`
  return result;
`,LX=Qt({opSnippet:DX,packedOpSnippet:zX,cpuKernelImpl:XV}),WX={kernelName:rs,backendName:"webgl",kernelFunc:LX};function BX(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;Hl(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1;v.assert(T.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=T.computePool2DInfo(r.shape,s,i,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&v.arraysEqual(d.inShape,d.outShape))return Ua({inputs:{x:r},backend:a});let c=new td(d,"max",!1);return a.runWebGLProgram(c,[r],r.dtype)}var VX={kernelName:Fi,backendName:"webgl",kernelFunc:BX};function UX(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=n,d=[1,1,1],c=T.computePool3DInfo(r.shape,s,i,d,o,u,l),p=new M1(c,"max",!1);return a.runWebGLProgram(p,[r],r.dtype)}var GX={kernelName:oh,backendName:"webgl",kernelFunc:UX},HX=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,a=e.strideWidth,n=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},jX=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${c}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qX(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=n,c=[1,1,1],p=T.computePool3DInfo(i.shape,o,l,c,u,d),h=new M1(p,"max",!0),f=a.runWebGLProgram(h,[i],i.dtype),m=new jX(p),g=a.runWebGLProgram(m,[r,f],i.dtype);return a.disposeIntermediateTensorInfo(f),g}var XX={kernelName:X2,backendName:"webgl",kernelFunc:qX};function KX(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s,output:i}=t,o=s;Hl([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:c}=n,p=T.computePool2DInfo(o.shape,l,u,1,d,c),h=!0,f=new td(p,"max",h),m=a.runWebGLProgram(f,[o],o.dtype),g=new HX(p),A=a.runWebGLProgram(g,[r,m],o.dtype);return a.disposeIntermediateTensorInfo(m),A}var ZX={kernelName:q2,backendName:"webgl",kernelFunc:KX};function YX(e,t,a,n){let r=new td(a,"max",!1),s=n.runWebGLProgram(r,[e],"float32");r=new td(a,"max",!0,!0,t);let i=n.runWebGLProgram(r,[e],"float32");return[s,i]}var JX={kernelName:lh,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=a;v.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];v.assert(T.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let d=T.computePool2DInfo(n.shape,r,s,u,i),[c,p]=YX(n,o,d,l);return[c,p]}};function QX(e,t,a,n){let r=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/r,i=pe({inputs:{x:e},attrs:{shape:[s,r]},backend:n}),o=oo(i,"float32","mean",n),l=pe({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}var eK={kernelName:Oi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{keepDims:r,axis:s}=t,i=a,o=n.shape.length,l=v.parseAxisParam(s,n.shape),u=l,d=T.getAxesPermutation(u,o),c=d!=null,p=i.shouldExecuteOnCPU([n]),h=[],f=n;if(c){if(p){let x=i.texData.get(f.dataId).values,b=new Array(o);for(let N=0;N<b.length;N++)b[N]=n.shape[d[N]];let w=R1(x,n.shape,n.dtype,d,b);f=i.makeTensorInfo(b,n.dtype);let S=i.texData.get(f.dataId);S.values=w}else f=Bh(n,d,i);h.push(f),u=T.getInnerMostAxes(u.length,o)}T.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=T.computeOutAndReduceShapes(f.shape,u),A=m;r&&(A=T.expandShapeToKeepDim(m,l));let y=QX(f,g,A,i);for(let x of h)i.disposeIntermediateTensorInfo(x);return y}};function tK(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,l=v.parseAxisParam(s,r.shape),u=l,d=T.getAxesPermutation(u,o),c=r;d!=null&&(c=ga({inputs:{x:r},backend:a,attrs:{perm:d}}),u=T.getInnerMostAxes(u.length,r.shape.length)),T.assertAxesAreInnerMostDims("min",u,o);let[p,h]=T.computeOutAndReduceShapes(c.shape,u),f=v.sizeFromShape(h),m=pe({inputs:{x:c},backend:a,attrs:{shape:[-1,f]}}),g=oo(m,m.dtype,"min",a),A;if(i){let y=T.expandShapeToKeepDim(p,l);A=pe({inputs:{x:g},backend:a,attrs:{shape:y}})}else A=pe({inputs:{x:g},backend:a,attrs:{shape:p}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),d!=null&&a.disposeIntermediateTensorInfo(c),A}var aK={kernelName:Pi,backendName:"webgl",kernelFunc:tK},nK=_1+`
  return min(a, b);
`,rK=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qd+`
  return result;
`,sK=Qt({opSnippet:nK,packedOpSnippet:rK,cpuKernelImpl:KV}),iK={kernelName:ss,backendName:"webgl",kernelFunc:sK},oK=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);let n=e.length,r=pt(n),s=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),l=a==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},lK=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let n=e.length,r=pt(n),s=t.map(h=>h[0]).join(","),i=t.map((h,f)=>h[0]+e[f]).join(","),o=ma("rc",n),l=ma("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,d=n===1?"source":`vec2(${l.slice(-2).join()})`,c=a==="reflect"?0:1,p="";if(n===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${o[n-1]} += 1;
        if(${u}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${o[n-1]} += 1;
          if(${u}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},uK=({inputs:e,backend:t,attrs:a})=>{let{x:n}=e,{paddings:r,mode:s}=a,i=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lK(n.shape,r,s):new oK(n.shape,r,s);return t.runWebGLProgram(i,[n],n.dtype)},dK={kernelName:Di,backendName:"webgl",kernelFunc:uK},pK=`if (b == 0.0) return NAN;
  return mod(a, b);`,cK=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Qd+`
  return result;
`,hK=Qt({opSnippet:pK,packedOpSnippet:cK}),fK={kernelName:kd,backendName:"webgl",kernelFunc:hK},mK=class{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},gK=`
if (a == b) {
  return 1.0;
};
return a / b;`,AK=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Rk=Qt({opSnippet:gK,packedOpSnippet:AK,checkOutOfBounds:!0}),yK={kernelName:wi,backendName:"webgl",kernelFunc:Rk},by="return a - b;",_k=Qt({opSnippet:by,packedOpSnippet:by,supportsComplex:!0,cpuKernelImpl:mU}),xK={kernelName:cs,backendName:"webgl",kernelFunc:_k};function $k(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=v.parseAxisParam([s],r.shape),o=Ek({inputs:{x:r},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=pe({inputs:{x:o},backend:a,attrs:{shape:l}}),d=_k({inputs:{a:r,b:u},backend:a}),c=Tk({inputs:{x:d},backend:a}),p=Vh({inputs:{x:c},backend:a,attrs:{axis:i,keepDims:!1}}),h=pe({inputs:{x:p},backend:a,attrs:{shape:l}}),f=Rk({inputs:{a:c,b:h},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(u),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),f}var bK={kernelName:Yi,backendName:"webgl",kernelFunc:$k};function vK(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n,l=o?r:$k({inputs:{logits:r},backend:a,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],c=new mK(u,d,s),p=[[i]],h=a.runWebGLProgram(c,[l],"int32",p);return o||a.disposeIntermediateTensorInfo(l),h}var wK={kernelName:uh,backendName:"webgl",kernelFunc:vK},kK=yn+`
  return -x;
`,IK=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function SK(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])){let s=a.texData.get(n.dataId),[i,o]=YV(s.values,n.shape,n.dtype);return a.makeTensorInfo(o,n.dtype,i)}let r;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Bs(n.shape,IK):r=new tr(n.shape,kK),a.runWebGLProgram(r,[n],n.dtype)}var TK={kernelName:bl,backendName:"webgl",kernelFunc:SK},NK=An.nonMaxSuppressionV3Impl;function CK(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=a.readSync(r.dataId),d=a.readSync(s.dataId),{selectedIndices:c}=NK(u,d,i,o,l);return a.makeTensorInfo([c.length],"int32",new Int32Array(c))}var EK={kernelName:zi,backendName:"webgl",kernelFunc:CK},RK=An.nonMaxSuppressionV4Impl;function _K(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n,d=a.readSync(r.dataId),c=a.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=RK(d,c,i,o,l,u);return[a.makeTensorInfo([p.length],"int32",new Int32Array(p)),a.makeTensorInfo([],"int32",new Int32Array([h]))]}var $K={kernelName:vl,backendName:"webgl",kernelFunc:_K},MK=An.nonMaxSuppressionV5Impl;function FK(e){T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,d=a.readSync(r.dataId),c=a.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:A}=MK(d,c,p,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var OK={kernelName:Li,backendName:"webgl",kernelFunc:FK},PK=class{constructor(e,t,a,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${a}),
                      float(index == coords.y)));
      }
    `}},DK=e=>{let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n,u=v.sizeFromShape(r.shape),d=new PK(u,i,o,l),c=pe({inputs:{x:r},backend:a,attrs:{shape:[u]}}),p=a.runWebGLProgram(d,[c],s);a.disposeIntermediateTensorInfo(c);let h=[...r.shape,i],f=pe({inputs:{x:p},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(p),f},zK={kernelName:kl,backendName:"webgl",kernelFunc:DK};function Pc(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="complex64"){let r=tp({inputs:{input:n},backend:a}),s=Pc({inputs:{x:r},backend:a}),i=Uh({inputs:{input:n},backend:a}),o=Pc({inputs:{x:i},backend:a}),l=xs({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return ap({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:a})}var LK={kernelName:Ll,backendName:"webgl",kernelFunc:Pc};function Mk(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let r=tp({inputs:{input:n},backend:a}),s=Mk({inputs:{x:r},backend:a}),i=Uh({inputs:{input:n},backend:a}),o=Pc({inputs:{x:i},backend:a}),l=xs({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),l}else return ap({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:a})}var WK={kernelName:wl,backendName:"webgl",kernelFunc:Mk};function BK(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return f2({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{v.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let c=f2({inputs:{input:d},backend:a,attrs:{dim:r}});return o.push(c),c}),u=yk({inputs:l,backend:a,attrs:{axis:r}});return o.forEach(d=>a.disposeIntermediateTensorInfo(d)),u}var VK={kernelName:Il,backendName:"webgl",kernelFunc:BK},UK=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);let n=e.length,r=pt(n),s=t.map(l=>l[0]).join(","),i=t.map((l,u)=>l[0]+e[u]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},GK=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let n=e.length,r=pt(n),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=ma("rc",n),l=ma("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,d=n===1?"source":`vec2(${l.slice(-2).join()})`,c=[`${r} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${u}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${o[n-1]} += 1;
         if(${u}) {`],p=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=n===1?2:4;f<m;f++)h+=`
        ${c[f]}
        if (${p}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${l.join()}), ${d});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},Fk=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;if(v.sizeFromShape(r.shape)===0){let u=s.map((d,c)=>d[0]+r.shape[c]+d[1]);return ap({backend:a,attrs:{shape:u,value:i,dtype:r.dtype}})}let o=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GK(r.shape,s,i):new UK(r.shape,s,i),l=[[i]];return a.runWebGLProgram(o,[r],r.dtype,l)},HK={kernelName:Wi,backendName:"webgl",kernelFunc:Fk},jK=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,qK=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Qd+`
  return result;
`,XK=Qt({opSnippet:jK,packedOpSnippet:qK}),KK={kernelName:Bi,backendName:"webgl",kernelFunc:XK};function ZK(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,l=[],u=v.parseAxisParam(s,r.shape),d=u,c=T.getAxesPermutation(d,o),p=r;c!=null&&(p=ga({inputs:{x:r},backend:a,attrs:{perm:c}}),d=T.getInnerMostAxes(d.length,o),l.push(p)),T.assertAxesAreInnerMostDims("prod",d,o);let h;if(a.shouldExecuteOnCPU([p])){let f=a.texData.get(p.dataId).values,{outVals:m,outShape:g,outDtype:A}=QV(p.shape,p.dtype,f,d);h=a.makeTensorInfo(g,A,m)}else{let[f,m]=T.computeOutAndReduceShapes(p.shape,d),g=v.sizeFromShape(m),A=pe({inputs:{x:p},backend:a,attrs:{shape:[-1,g]}}),y=Dd(r.dtype),x=oo(A,y,"prod",a);h=pe({inputs:{x},backend:a,attrs:{shape:f}}),l.push(A),l.push(x)}if(i){l.push(h);let f=T.expandShapeToKeepDim(h.shape,u);h=pe({inputs:{x:h},backend:a,attrs:{shape:f}})}return l.forEach(f=>a.disposeIntermediateTensorInfo(f)),h}var YK={kernelName:Ui,backendName:"webgl",kernelFunc:ZK};function JK(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=r.map(A=>a.readSync(A.dataId)),u=r.map(A=>A.shape),d=a.readSync(s.dataId),c=a.readSync(i.dataId),[p,h,f]=eU(l,u,d,s.shape,s.dtype,c,i.shape,o),m=p.map(A=>a.makeTensorInfo([A.length],"int32",A)),g=a.makeTensorInfo(f,s.dtype,h);return m.concat([g])}var QK={kernelName:dh,backendName:"webgl",kernelFunc:JK};function eZ(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:s}=t,i=a.readSync(n.dataId),o=a.readSync(r.dataId),l=a.readSync(s.dataId),[u,d]=tU(i,n.shape,n.dtype,o,r.shape,l,s.shape),c=a.makeTensorInfo([u.length],"int32",u),p=a.makeTensorInfo([d.length],n.dtype,d);return[c,p]}var tZ={kernelName:ph,backendName:"webgl",kernelFunc:eZ};function aZ(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=a.readSync(r.dataId),d=a.readSync(s.dataId),c=a.readSync(i.dataId),p=o.map(g=>a.readSync(g.dataId)),h=o.map(g=>g.shape),[f,m]=aU(u,r.shape,d,s.shape,s.dtype,c,i.shape,p,h,l);return a.makeTensorInfo(f,s.dtype,m)}var nZ={kernelName:ch,backendName:"webgl",kernelFunc:aZ},Ok=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=nU(n,r,s,i);return t.makeTensorInfo([o.length],i,o)},rZ={kernelName:Sl,backendName:"webgl",kernelFunc:Ok},sZ="return 1.0 / x;",iZ=Ke({opSnippet:sZ}),oZ={kernelName:Tl,backendName:"webgl",kernelFunc:iZ},lZ=yn+`
  return (x < 0.0) ? 0.0 : x;
`,uZ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dZ=Ke({opSnippet:lZ,packedOpSnippet:uZ}),pZ={kernelName:Gi,backendName:"webgl",kernelFunc:dZ},cZ=yn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hZ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fZ=Ke({opSnippet:cZ,packedOpSnippet:hZ}),mZ={kernelName:qi,backendName:"webgl",kernelFunc:fZ},gZ=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[n&&t>1?i-1:i,n&&a>1?o-1:o],d=[n&&t>1?t-1:t,n&&a>1?a-1:a],c;r?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},AZ=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[n&&t>1?i-1:i,n&&a>1?o-1:o],d=[n&&t>1?t-1:t,n&&a>1?a-1:a],c;r?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function yZ(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,d=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new AZ(r.shape,l,u,s,i):new gZ(r.shape,l,u,s,i);return a.runWebGLProgram(d,[r],"float32")}var xZ={kernelName:ji,backendName:"webgl",kernelFunc:yZ},bZ=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,s,i]=e,o=[a&&s>1?n-1:n,a&&i>1?r-1:r],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],c=1/u,p=1/d,h=Math.ceil(c)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function vZ(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=new bZ(s.shape,r.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var wZ={kernelName:Z2,backendName:"webgl",kernelFunc:vZ},kZ=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[n&&t>1?i-1:i,n&&a>1?o-1:o],d=[n&&t>1?t-1:t,n&&a>1?a-1:a],c=n?"0.5":"0.0",p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},IZ=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,a,l];let u=[n&&t>1?i-1:i,n&&a>1?o-1:o],d=[n&&t>1?t-1:t,n&&a>1?a-1:a],c=n?"0.5":"0.0",p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function SZ(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,d=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IZ(r.shape,l,u,s,i):new kZ(r.shape,l,u,s,i);return a.runWebGLProgram(d,[r],r.dtype)}var TZ={kernelName:Hi,backendName:"webgl",kernelFunc:SZ},NZ=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,s,i]=e,o=[a&&s>1?n-1:n,a&&i>1?r-1:r],l=[a&&s>1?s-1:s,a&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],c=1/u,p=1/d,h=Math.ceil(c)*2+2,f=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function CZ(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=new NZ(s.shape,r.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var EZ={kernelName:K2,backendName:"webgl",kernelFunc:CZ},RZ=class{constructor(e,t){this.variableNames=["x"];let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=e,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>n(o)).join(","),s=pt(a);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},_Z=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=e;let n=ma("rc",a),r=`${n[a-1]} + 1 < ${this.outputShape[a-1]}`,s=`${n[a-2]} + 1 < ${this.outputShape[a-2]}`,i=pt(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(n.slice())};
          if(${r}){
            result.g = ${l(n.slice())};
          }
          if(${s}) {
            result.b = ${u(n.slice())};
            if(${r}) {
              result.a = ${d(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return c(h)}function l(h){return h[a-1]="("+h[a-1]+" + 1)",c(h)}function u(h){return h[a-2]="("+h[a-2]+" + 1)",c(h)}function d(h){return h[a-1]="("+h[a-1]+" + 1)",h[a-2]="("+h[a-2]+" + 1)",c(h)}function c(h){let f=e.map((A,y)=>p(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function p(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function $Z(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n,i=r.shape.length,o=v.parseAxisParam(s,r.shape);if(i===0)return Ua({inputs:{x:r},backend:a});let l=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _Z(r.shape,o):new RZ(r.shape,o);return a.runWebGLProgram(l,[r],r.dtype)}var MZ={kernelName:Cl,backendName:"webgl",kernelFunc:$Z},FZ=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let a=e[1],n=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},OZ={kernelName:no,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,l=new FZ(n.shape,s),[u,d]=T.getImageCenter(i,n.shape[1],n.shape[2]),c=[[u,d,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[n],n.dtype,c)}},PZ=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,DZ=Ke({opSnippet:PZ}),zZ={kernelName:El,backendName:"webgl",kernelFunc:DZ},LZ="return inversesqrt(x);",WZ=Ke({opSnippet:LZ,cpuKernelImpl:rU}),BZ={kernelName:ls,backendName:"webgl",kernelFunc:WZ},Pk=class{constructor(e,t,a,n,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=pt(r.length),l=pt(s.length),u="";a===1?u="i":a===2&&(u="i, j");let d=`getIndices(${u})`,c="";n===1?c="i":n===2&&(c="i, coords[1]");let p=`getUpdates(${c})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function VZ(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=T.calculateShapes(s,r,i),p=[c/u,u];if(c===0)return a.makeTensorInfo(i,r.dtype);let h=pe({inputs:{x:r},backend:a,attrs:{shape:[l,o]}}),f=pe({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=a.makeTensorInfo([],"float32",new Float32Array([0])),g=new Pk(l,o,h.shape.length,f.shape.length,d,p),A=a.runWebGLProgram(g,[f,h,m],f.dtype),y=pe({inputs:{x:A},backend:a,attrs:{shape:i}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(m),y}var UZ={kernelName:Xi,backendName:"webgl",kernelFunc:VZ},GZ=class{constructor(e,t,a,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,a];let r="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=B().getNumber("WEBGL_VERSION")===2?r:s,o=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function HZ(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n,o=new GZ(r.shape[0],r.shape[1],s.shape[1],i),l=[[r.shape[1]]];return a.runWebGLProgram(o,[r,s],"int32",l)}var jZ={kernelName:hh,backendName:"webgl",kernelFunc:HZ},qZ=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.outputShape=t;let n,r;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)r="resRC",n="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],l=[];for(let u=0;u<t.length;u++)l.push(`${i[u]}`),u<e&&o.push(`${i[u]}`);n=o.join(),r=l.join()}let s=pt(a);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function XZ(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=new qZ(n.shape.length,r.shape,r.shape.length);return a.runWebGLProgram(i,[n,r,s],Yt(r.dtype,s.dtype))}var KZ={kernelName:Rl,backendName:"webgl",kernelFunc:XZ},ZZ=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${T.SELU_SCALEALPHA};
  float scale = ${T.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,YZ=Ke({opSnippet:ZZ}),JZ={kernelName:Sd,backendName:"webgl",kernelFunc:YZ},QZ=Zl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,eY=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tY=Ke({opSnippet:QZ,packedOpSnippet:eY,cpuKernelImpl:iU}),aY={kernelName:us,backendName:"webgl",kernelFunc:tY},nY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,rY=Ke({opSnippet:nY}),sY={kernelName:Td,backendName:"webgl",kernelFunc:rY},iY=Zl+`
  return sin(x);
`,oY=Ke({opSnippet:iY}),lY={kernelName:Ki,backendName:"webgl",kernelFunc:oY},uY=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,dY=Ke({opSnippet:uY}),pY={kernelName:$l,backendName:"webgl",kernelFunc:dY},cY=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,hY=Ke({opSnippet:cY}),fY={kernelName:Nd,backendName:"webgl",kernelFunc:hY},mY=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((A,y)=>A*y),l=[[0,0]];l.push(...i);for(let A=1+s.length;A<r.shape.length;++A)l.push([0,0]);let u=[],d=Fk({inputs:{x:r},backend:a,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(d.shape,s,o,!1),p=T.getPermuted(c.length,s.length,!1),h=T.getReshapedPermuted(d.shape,s,o,!1),f=pe({inputs:{x:d},backend:a,attrs:{shape:c}}),m=ga({inputs:{x:f},backend:a,attrs:{perm:p}}),g=pe({inputs:{x:m},backend:a,attrs:{shape:h}});return u.push(d),u.push(f),u.push(m),u.forEach(A=>a.disposeIntermediateTensorInfo(A)),g},gY={kernelName:Ml,backendName:"webgl",kernelFunc:mY};function AY(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.readSync(n.dataId),l=a.readSync(r.dataId),u=a.readSync(s.dataId),d=a.readSync(i.dataId)[0],[c,p,h,f,m]=lU(o,n.shape,n.dtype,l,r.dtype,u,d);return[a.makeTensorInfo(p,n.dtype,c),a.makeTensorInfo([p[0]],r.dtype,h),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var yY={kernelName:Cd,backendName:"webgl",kernelFunc:AY};function xY(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.readSync(r.dataId)),o=a.readSync(n.dataId),l=Array.from(a.readSync(s.dataId)),[u,d,c]=uU(o,n.shape,n.dtype,i,l);return[a.makeTensorInfo(d,n.dtype,u),a.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}var bY={kernelName:Ol,backendName:"webgl",kernelFunc:xY};function vY(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=a.readSync(n.dataId),o=a.readSync(r.dataId),l=a.readSync(s.dataId),[u,d]=rk(i,n.shape,n.dtype,o,l,!0);return a.makeTensorInfo(d,n.dtype,u)}var wY={kernelName:Ed,backendName:"webgl",kernelFunc:vY};function kY(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=a.readSync(n.dataId),o=a.readSync(r.dataId),l=a.readSync(s.dataId),[u,d]=rk(i,n.shape,n.dtype,o,l);return a.makeTensorInfo(d,n.dtype,u)}var IY={kernelName:Rd,backendName:"webgl",kernelFunc:kY};function SY(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=T.calculateShapes(s,r,o),h=!1;if(s.dtype==="string"){let A=a.bufferSync(r),y=a.bufferSync(s),x=v.decodeString(a.readSync(i.dataId)[0]),b=sU(A,y,o,p,d,u,l,c,x,h);return a.makeTensorInfo(o,b.dtype,b.values)}let f=new Pk(u,l,r.shape.length,s.shape.length,c,[p,1],h),m=a.runWebGLProgram(f,[s,r,i],s.dtype),g=pe({inputs:{x:m},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(m),g}var TY={kernelName:_d,backendName:"webgl",kernelFunc:SY};function NY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],l=T.prepareSplitSize(r,s,o),u=r.shape.length,d=new Array(u).fill(0),c=r.shape.slice();return l.map(p=>{let h=[...c];h[o]=p;let f=Yl({inputs:{x:r},backend:a,attrs:{begin:d,size:h}});return d[o]+=p,f})}var CY={kernelName:Fl,backendName:"webgl",kernelFunc:NY},vy="return sqrt(x);",EY=Ke({opSnippet:vy,packedOpSnippet:vy,cpuKernelImpl:dU}),RY={kernelName:ds,backendName:"webgl",kernelFunc:EY},_Y="return x * x;",$Y=Ke({opSnippet:_Y}),MY={kernelName:$d,backendName:"webgl",kernelFunc:$Y},wy="return (a - b) * (a - b);",FY=Qt({opSnippet:wy,packedOpSnippet:wy}),OY={kernelName:ps,backendName:"webgl",kernelFunc:FY};function PY({inputs:e,attrs:t,backend:a}){let{x:n}=e,r=yn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new tr(n.shape,r);return a.runWebGLProgram(s,[n],n.dtype)}var DY={kernelName:ao,backendName:"webgl",kernelFunc:PY},zY=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=a;let n=a.length,r=pt(a.length),s=pt(a.length),i="";if(n===1)i="coords * strides + begin";else{let o=0;i=a.map((l,u)=>(o++,a.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${o-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function LY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:y,end:x,strides:b}=gt.sliceInfo(r.shape,s,i,o,l,u,d,c,p),w;if(m)w=pe({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let N=gt.computeOutShape(y,x,b),C=Yl({inputs:{x:r},backend:a,attrs:{begin:y,size:N}});w=pe({inputs:{x:C},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(C)}else if(a.shouldExecuteOnCPU([r])){let N=a.readSync(r.dataId),C=xe(r.shape,r.dtype,N),M=pU(h,C,b,y);w=a.makeTensorInfo(f,r.dtype,M.values)}else{let N=new zY(y,b,h);w=a.runWebGLProgram(N,[r],r.dtype)}let S=pe({inputs:{x:w},backend:a,attrs:{shape:f}});return a.disposeIntermediateTensorInfo(w),S}var WY={kernelName:Ji,backendName:"webgl",kernelFunc:LY};function BY(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:d,dataSplits:c}=t,p=a.readSync(d.dataId),h=a.readSync(c.dataId),[f,m]=cU(p,h,r,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(c.shape,"int32",m)]}var VY={kernelName:Pl,backendName:"webgl",kernelFunc:BY};function UY(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.readSync(s.dataId),l=a.readSync(i.dataId)[0],[u,d,c]=hU(o,l,r),p=d.length;return[a.makeTensorInfo([p,2],"int32",u),a.makeTensorInfo([p],"string",d),a.makeTensorInfo([2],"int32",new Int32Array(c))]}var GY={kernelName:Md,backendName:"webgl",kernelFunc:UY};function HY(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=a.readSync(s.dataId),o=fU(i,r);return a.makeTensorInfo(s.shape,"int32",o)}var jY={kernelName:Fd,backendName:"webgl",kernelFunc:HY},qY="return tan(x);",XY=Ke({opSnippet:qY}),KY={kernelName:Dl,backendName:"webgl",kernelFunc:XY},ZY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,YY=Ke({opSnippet:ZY}),JY={kernelName:Qi,backendName:"webgl",kernelFunc:YY},QY=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[s]*t[s];this.outputShape=a,this.rank=a.length;let n=pt(this.rank),r=eJ(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function eJ(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let r=0;r<e.length;r++)n.push(`imod(${a[r]}, ${e[r]})`);return n.join()}function Dk(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;if(r.dtype==="string"||r.shape.length>5){let o=a.readSync(r.dataId),l=r.dtype==="string"?o.map(c=>v.decodeString(c)):o,u=xe(r.shape,r.dtype,l),d=gU(u,s);return a.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new QY(r.shape,s);return a.runWebGLProgram(i,[r],r.dtype)}var tJ={kernelName:hs,backendName:"webgl",kernelFunc:Dk},aJ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},nJ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Cs(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function ky(e){let t=1;for(;t<e;)t*=2;return t}function rJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n,o=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(a.shouldExecuteOnCPU([r])||d<o||s>l){let M=a.readSync(r.dataId),[$,E]=AU(M,u,r.dtype,s,i);return[a.makeTensorInfo($.shape,$.dtype,$.values),a.makeTensorInfo(E.shape,E.dtype,E.values)]}if(s===0)return u[u.length-1]=0,[a.makeTensorInfo(u,r.dtype,[]),a.makeTensorInfo(u,"int32",[])];if(d===1)return[r,ap({attrs:{shape:u,dtype:"int32",value:0},backend:a})];let c=a.texData.get(r.dataId),p=c!==null&&c.isPacked,h=p?a.unpackTensor(r):r,f=v.sizeFromShape(u)/d,m=pe({inputs:{x:h},attrs:{shape:[f,d]},backend:a});p&&Cs(a,h);let g=ky(s),A=ky(d),y=null,x=()=>y===null?[m,m]:[m,y],b=(M,$,E)=>{let I=x(),R=new aJ(E),P=[[d],[y===null?1:0],[Number.NEGATIVE_INFINITY],[M],[$]],D=y;y=a.runWebGLProgram(R,I,"int32",P),Cs(a,D)};for(let M=1;M<g;M*=2){let $=M*2;for(let E=M;E>=1;E/=2)b($,E,[f,A])}for(let M=A;M>g;M/=2){let $=x(),E=new nJ([f,M/2]),I=[[d],[y===null?1:0],[g]],R=y;y=a.runWebGLProgram(E,$,"int32",I),Cs(a,R);let P=g/2,D=P*2;for(let W=P;W>=1;W/=2)b(D,W,y.shape)}let w=y;y=Yl({inputs:{x:y},backend:a,attrs:{begin:0,size:[f,s]}}),Cs(a,w);let S=Ck({inputs:{x:m,indices:y},backend:a,attrs:{axis:1,batchDims:1}});Cs(a,m);let N=u.slice(0,-1);N.push(s),w=y,y=pe({inputs:{x:y},attrs:{shape:N},backend:a}),Cs(a,w);let C=S;return S=pe({inputs:{x:S},attrs:{shape:N},backend:a}),Cs(a,C),[S,y]}var sJ={kernelName:eo,backendName:"webgl",kernelFunc:rJ},iJ=class{constructor(e,t,a,n,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=a==="nearest"?1:2,o;switch(n){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function oJ(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,c,p,h]=r.shape,[f,m]=u??[c,p],g=[d,f,m,h],A=new iJ(c,p,i,o,l,g);return a.runWebGLProgram(A,[r,s],"float32")}var lJ={kernelName:to,backendName:"webgl",kernelFunc:oJ};function uJ(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:s}=t;Hl(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=yU(i,r,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}var dJ={kernelName:fh,backendName:"webgl",kernelFunc:uJ};function pJ(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==s&&(u[d++]=i.shape[m]);let c=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;let g=Yl({inputs:{x:i},backend:a,attrs:{begin:p,size:h}}),A=pe({inputs:{x:g},backend:a,attrs:{shape:u}});f[m]=A,c.push(g)}return c.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var cJ={kernelName:zl,backendName:"webgl",kernelFunc:pJ},hJ=class{constructor(e,t){this.variableNames=["x","segmentIds"];let a=e.windowSize,n=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/a);this.outputShape=[n,i];let o="0.0",l="sumValue",u=Math.floor(a/4)*4,d=a%4,c=`
        sumValue += dot(values, segFilter);
    `,p="";r%a>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%a>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${l});
      }
    `}};function fJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:s}=t,{numSegments:i}=n,o=r.shape.length,l=[],u=0,d=T.getAxesPermutation([u],o),c=r;d!=null&&(c=ga({inputs:{x:r},backend:a,attrs:{perm:d}}),l.push(c),u=T.getInnerMostAxes(1,o)[0]);let p=T.segment_util.computeOutShape(c.shape,u,i),h=v.sizeFromShape([c.shape[u]]),f=pe({inputs:{x:c},backend:a,attrs:{shape:[-1,h]}});l.push(f);let m=Dd(r.dtype),g=(b,w,S,N,C)=>{let M=b.shape[0],$=b.shape[1],E=T.segment_util.segOpComputeOptimalWindowSize($,C),I={windowSize:E,inSize:$,batchSize:M,numSegments:C},R=new hJ(I,w),P=a.compileAndRun(R,[b,S],N);if(l.push(P),P.shape[1]===C)return P;let D=Ok({backend:a,attrs:{start:0,stop:C,step:1,dtype:"float32"}}),W=Dk({inputs:{x:D},backend:a,attrs:{reps:[$/E]}});return l.push(D),l.push(W),g(P,w,W,N,C)},A=g(f,"unsortedSegmentSum",s,m,i),y=pe({inputs:{x:A},backend:a,attrs:{shape:p}}),x=y;if(d!=null){l.push(y);let b=T.getUndoAxesPermutation(d);x=ga({inputs:{x},backend:a,attrs:{perm:b}})}return l.forEach(b=>a.disposeIntermediateTensorInfo(b)),x}var mJ={kernelName:mh,backendName:"webgl",kernelFunc:fJ},gJ=[pG,hG,gG,xG,vG,IG,TG,CG,$G,FG,DG,WG,UG,qG,ZG,JG,eH,rH,iH,lH,cH,xH,vH,kH,EH,_H,OH,XU,zH,UH,qH,QH,tj,nj,sj,oj,dj,hj,gj,yj,bj,wj,Sj,Nj,_j,Mj,Pj,Lj,Bj,Hj,Kj,Qj,aq,sq,iq,lq,dq,cq,fq,gq,bq,kq,Tq,Cq,_q,Fq,zq,Vq,qU,Gq,BH,qq,Zq,Qq,ZU,nX,oX,uX,hX,gX,bX,kX,NX,_X,FX,PX,WX,VX,GX,XX,ZX,JX,eK,aK,iK,dK,fK,wK,QU,TK,EK,$K,OK,SH,zK,WK,VK,HK,KK,JU,YK,QK,tZ,nZ,rZ,TH,yK,oZ,pZ,mZ,tG,xZ,wZ,TZ,EZ,MZ,OZ,zZ,BZ,UZ,jZ,KZ,JZ,aY,sY,lY,pY,AH,bK,fY,gY,yY,bY,wY,IY,TY,CY,RY,MY,OY,DY,WY,VY,GY,jY,xK,lG,KY,JY,tJ,sJ,lJ,uG,dJ,cJ,mJ,LK];for(let e of gJ)Tn(e);var vt;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(vt||(vt={}));var nd;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(nd||(nd={}));var zk;function AJ(e){zk=e.wasm.cwrap(Lr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function yJ(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=n,p=a.dataIdMap.get(r.dataId).id,h=a.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let C=a.dataIdMap.get(i.dataId);if(C.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${C.shape.length}.`);f=C.id}let m=o==null?0:a.dataIdMap.get(o.dataId).id,g=nd[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let A=l?r.shape[2]:r.shape[1],y=u?s.shape[1]:s.shape[2],x=ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)),b=a.makeOutput([...x,A,y],r.dtype),w=a.dataIdMap.get(b.dataId).id,S=new Uint8Array(new Int32Array(r.shape).buffer),N=new Uint8Array(new Int32Array(s.shape).buffer);return zk(p,S,r.shape.length,h,N,s.shape.length,l,u,g,f,m,c||0,w),b}var xJ={kernelName:Lr,backendName:"wasm",setupFunc:AJ,kernelFunc:yJ};function jt(e,t){let a;function n(s){a=s.wasm.cwrap(e,null,["number","number","number"])}function r(s){let{backend:i,inputs:{x:o}}=s,l=i.dataIdMap.get(o.dataId).id,u=i.makeOutput(o.shape,t||o.dtype),d=i.dataIdMap.get(u.dataId).id;return v.sizeFromShape(u.shape)===0||a(l,vt[o.dtype],d),u}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var bJ=jt(ul);function ea(e,t,a){let n;function r(i){n=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:l}=i,{a:u,b:d}=l,c=o.dataIdMap.get(u.dataId).id,p=o.dataIdMap.get(d.dataId).id,h=a??u.dtype,f=T.assertAndGetBroadcastShape(u.shape,d.shape),m=o.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(u.shape).buffer),A=new Uint8Array(new Int32Array(d.shape).buffer),y=o.dataIdMap.get(m.dataId).id;return n(c,g,u.shape.length,p,A,d.shape.length,vt[u.dtype],y),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var vJ=!0,wJ=ea(ur,vJ),Lk;function kJ(e){Lk=e.wasm.cwrap(li,null,["array","number","number","number"])}function IJ(e){let{inputs:t,backend:a}=e,n=a.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(n.shape)===0)return n;let r=t.map(o=>a.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(r).buffer),i=a.dataIdMap.get(n.dataId).id;return Lk(s,r.length,vt[n.dtype],i),n}var SJ={kernelName:li,backendName:"wasm",setupFunc:kJ,kernelFunc:IJ};function Gh(e){let{inputs:{x:t},backend:a}=e;if(t.dtype==="string")return Be(a.readSync(t.dataId),t.shape,t.dtype);let n=a.makeOutput(t.shape,t.dtype),r=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(n).set(r),n}var TJ={kernelName:Ei,backendName:"wasm",kernelFunc:Gh},Wk;function NJ(e){Wk=e.wasm.cwrap(nr,null,["number","array","number","number","number","array","number"])}function Hr(e){let{inputs:t,backend:a,attrs:n}=e,[r,s]=EJ(t.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=CJ(t.x.shape,n.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=Gh({inputs:t,backend:a});return f.shape=o,f}let u=a.makeOutput(o,l.dtype),d=a.dataIdMap.get(l.dataId).id,c=a.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return Wk(d,h,l.shape.length,vt[l.dtype],c,p,s.length),u}function CJ(e,t){let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];return a}function EJ(e,t){let a=[],n=[];for(let r=0;r<e.length;++r)e[r]!==1&&a.push(e[r]),e[t[r]]!==1&&n.push(t[r]);for(let r=0;r<n.length;++r){let s=-1;for(let i=0;i<n.length;++i)n[i]>=r&&(s===-1||n[s]>n[i])&&(s=i);n[s]=r}return[a,n]}var RJ={kernelName:nr,backendName:"wasm",kernelFunc:Hr,setupFunc:NJ};function bs(e,t,a){let n=e.shape,r=e.shape.length,s=v.parseAxisParam(t,n),i=s,o=T.getAxesPermutation(i,r),l=null,u=!1;if(o!=null){let d=new Array(r);for(let p=0;p<d.length;p++)d[p]=n[o[p]];i=T.getInnerMostAxes(i.length,r),l=Hr({inputs:{x:e},attrs:{perm:o},backend:a});let c=a.dataIdMap.get(e.dataId).id;a.dataIdMap.get(l.dataId).id!==c&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var Bk;function _J(e){Bk=e.wasm.cwrap(dl,null,["number, number, number"])}function $J(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=bs(i,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;l=u,o=y}let h=l.shape.length;T.assertAxesAreInnerMostDims("all",d,h);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=v.sizeFromShape(m),A=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let y=t.dataIdMap.get(A.dataId).id;Bk(o,g,y)}if(p&&t.disposeData(u.dataId),s){let y=T.expandShapeToKeepDim(A.shape,c);A.shape=y}return A}var MJ={kernelName:dl,backendName:"wasm",setupFunc:_J,kernelFunc:$J},Vk;function FJ(e){Vk=e.wasm.cwrap(pl,null,["number, number, number"])}function OJ(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=bs(i,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;l=u,o=y}let h=l.shape.length;T.assertAxesAreInnerMostDims("any",d,h);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=v.sizeFromShape(m),A=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let y=t.dataIdMap.get(A.dataId).id;Vk(o,g,y)}if(p&&t.disposeData(u.dataId),s){let y=T.expandShapeToKeepDim(A.shape,c);A.shape=y}return A}var PJ={kernelName:pl,backendName:"wasm",setupFunc:FJ,kernelFunc:OJ},Uk;function DJ(e){Uk=e.wasm.cwrap(ui,null,["number","number","number","number","number"])}function zJ(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r}=n,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:c}=bs(s,r,t);if(c){let A=t.dataIdMap.get(u.dataId).id;A!==i&&(l=u,o=A)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=v.sizeFromShape(h.shape),g=l.shape[d[0]];return Uk(o,vt[l.dtype],m,g,f),c&&t.disposeData(u.dataId),h}var LJ={kernelName:ui,backendName:"wasm",kernelFunc:zJ,setupFunc:DJ},Gk;function WJ(e){Gk=e.wasm.cwrap(di,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function BJ(e){let{inputs:t,attrs:a,backend:n}=e,r=t.x,s=n.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=T.computePool2DInfo(r.shape,i,o,1,l,u),c=d.filterHeight,p=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,A=d.strideHeight,y=d.strideWidth,x=d.inChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(d.dilationWidth!==1||d.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let b=n.makeOutput(d.outShape,"float32"),w=n.dataIdMap.get(b.dataId).id;return Gk(s,r.shape[0],r.shape[1],r.shape[2],c,p,h,f,m,g,A,y,x,w),b}var VJ={kernelName:di,backendName:"wasm",setupFunc:WJ,kernelFunc:BJ};function Ea(e){let{inputs:t,attrs:a}=e,{x:n}=t,{shape:r}=a,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(r,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var UJ={kernelName:Nl,backendName:"wasm",kernelFunc:Ea},Hk;function GJ(e){Hk=e.wasm.cwrap(pi,null,["number","array","number","number","array","number","number","number","number"])}function HJ(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=s.shape.length,d=i?r.shape[l-2]:r.shape[l-1],c=o?s.shape[u-1]:s.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),A=v.sizeFromShape(m),y=ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);v.assert(d===c,()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,d,p]:[g,p,d],b=o?[A,h,c]:[A,c,h],w=Ea({inputs:{x:r},backend:a,attrs:{shape:x}}),S=Ea({inputs:{x:s},backend:a,attrs:{shape:b}}),N=a.dataIdMap.get(w.dataId).id,C=a.dataIdMap.get(S.dataId).id,M=i?w.shape[2]:w.shape[1],$=o?S.shape[1]:S.shape[2],E=Math.max(g,A),I=a.makeOutput([E,M,$],w.dtype),R=a.dataIdMap.get(I.dataId).id,P=new Uint8Array(new Int32Array(w.shape).buffer),D=new Uint8Array(new Int32Array(S.shape).buffer);return Hk(N,P,w.shape.length,C,D,S.shape.length,i,o,R),a.disposeData(w.dataId),a.disposeData(S.dataId),I.shape=y,I}var jJ={kernelName:pi,backendName:"wasm",setupFunc:GJ,kernelFunc:HJ};function ni(e){let{inputs:{x:t},attrs:{begin:a,size:n},backend:r}=e,[s,i]=gt.parseSliceParams(t,a,n),o=gt.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),u=r.makeOutput(i,t.dtype),d=v.computeStrides(t.shape),c=r.dataIdMap.get(u.dataId);if(o){let f=gt.computeFlatOffset(s,d);return t.dtype==="string"?c.stringBytes=l.slice(f,f+v.sizeFromShape(i)):r.typedArrayFromHeap(u).set(l.subarray(f,f+v.sizeFromShape(i))),u}if(t.dtype==="string"){let f=Rc(l,s,i,t.shape,t.dtype);return c.stringBytes=f,u}let p=r.typedArrayFromHeap(u),h=t.shape.length;if(h===2)qJ(l,d[0],p,s,i);else if(h===3)XJ(l,d[0],d[1],p,s,i);else if(h===4)KJ(l,d[0],d[1],d[2],p,s,i);else{let f=Rc(l,s,i,t.shape,t.dtype);p.set(f)}return u}function qJ(e,t,a,n,r){let s=0,i=n[0],o=n[1],l=i+r[0];for(let u=i;u<l;u++){let d=u*t+o;a.set(e.subarray(d,d+r[1]),s),s+=r[1]}}function XJ(e,t,a,n,r,s){let i=0,o=r[0],l=r[1],u=r[2],d=o+s[0],c=l+s[1];for(let p=o;p<d;p++)for(let h=l;h<c;h++){let f=p*t+h*a+u;n.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function KJ(e,t,a,n,r,s,i){let o=0,l=s[0],u=s[1],d=s[2],c=l+i[0],p=u+i[1],h=d+i[2],f=s[3];for(let m=l;m<c;m++)for(let g=u;g<p;g++)for(let A=d;A<h;A++){let y=m*t+g*a+A*n+f;r.set(e.subarray(y,y+i[3]),o),o+=i[3]}}var ZJ={kernelName:_l,backendName:"wasm",kernelFunc:ni};function YJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n,o=s.reduce((A,y)=>A*y),l=T.getReshaped(r.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(r.shape,s,o),c=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),h=Ea({inputs:{x:r},backend:a,attrs:{shape:l}}),f=Hr({inputs:{x:h},backend:a,attrs:{perm:u}}),m=Ea({inputs:{x:f},backend:a,attrs:{shape:d}}),g=ni({inputs:{x:m},backend:a,attrs:{begin:c,size:p}});return a.disposeData(h.dataId),a.disposeData(f.dataId),a.disposeData(h.dataId),g}var JJ={kernelName:hl,backendName:"wasm",kernelFunc:YJ};function Jl(e){let{inputs:{x:t},attrs:{dtype:a},backend:n}=e,r=n.makeOutput(t.shape,a),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}var QJ={kernelName:ci,backendName:"wasm",kernelFunc:Jl},eQ=jt(Xr),jk;function tQ(e){jk=e.wasm.cwrap(Kr,null,["number","number","number","number"])}function aQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o=a.dataIdMap.get(r.dataId).id,l=a.makeOutput(r.shape,r.dtype),u=a.dataIdMap.get(l.dataId).id;return jk(o,s,i,u),l}var nQ={kernelName:Kr,backendName:"wasm",setupFunc:tQ,kernelFunc:aQ};function qk(e){let{inputs:t,backend:a}=e,n=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map(h=>h.shape);T.assertParamsConsistent(r,n);let s=T.computeOutShape(t.map(h=>h.shape),n),i=t.filter(h=>v.sizeFromShape(h.shape)>0);if(i.length===1)return Gh({inputs:{x:i[0]},backend:a});let o=a.makeOutput(s,t[0].dtype);if(v.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let h=i.map(x=>{let b=v.sizeFromShape(x.shape.slice(n));return Ea({inputs:{x},backend:a,attrs:{shape:[-1,b]}})}),f=h.map(x=>({vals:a.readSync(x.dataId),shape:x.shape}));s=T.computeOutShape(h.map(x=>x.shape),1);let m=h[0].shape[0]===1,g=o1(f,s,t[0].dtype,m),A=T.computeOutShape(i.map(x=>x.shape),n);o.shape=A;let y=a.dataIdMap.get(o.dataId);return y.stringBytes=T.fromStringArrayToUint8(g),h.forEach(x=>a.disposeData(x.dataId)),o}let l=v.sizeFromShape(i[0].shape.slice(0,n)),u=0,d=i.map(h=>{let f=v.sizeFromShape(h.shape.slice(n));return u+=f,f}),c=i.map(h=>a.typedArrayFromHeap(h)),p=a.typedArrayFromHeap(o);for(let h=0;h<l;h++){let f=h*u;for(let m=0;m<c.length;m++){let g=d[m],A=h*g,y=c[m].subarray(A,A+g);p.set(y,f),f+=g}}return o}var rQ={kernelName:fl,backendName:"wasm",kernelFunc:qk},Xk;function sQ(e){Xk=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function iQ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c,dataFormat:p}=a,h=T.convertConv2DDataFormat(p),f=T.computeConv2DInfo(r.shape,s.shape,l,u,d,c,!1,h),m=f.filterHeight,g=f.filterWidth,A=f.padInfo.top,y=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,S=f.dilationWidth,N=f.strideHeight,C=f.strideWidth,M=f.inChannels,$=f.outChannels,E=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let I=n.makeOutput(f.outShape,"float32"),R=n.dataIdMap.get(I.dataId).id;return Xk(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,A,y,x,b,E,w,S,N,C,M,$,R),I}var oQ={kernelName:hi,backendName:"wasm",setupFunc:sQ,kernelFunc:iQ},Kk;function lQ(e){Kk=e.wasm.cwrap(fi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uQ(e){let{backend:t,inputs:a,attrs:n}=e,{dy:r,filter:s}=a,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=n,c=1,p=T.convertConv2DDataFormat(l),h=T.computeConv2DInfo(d,s.shape,i,c,o,u,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:A,inHeight:y,inWidth:x,outChannels:b,outHeight:w,outWidth:S,strideHeight:N,strideWidth:C}=h,M=m-1-h.padInfo.top,$=g-1-h.padInfo.left,E=h.dataFormat==="channelsLast",I=v.computeStrides(h.inShape),R=v.computeStrides(r.shape),[P,D,W]=v.computeStrides(s.shape),V=I[0],G=E?I[1]:I[2],U=E?I[2]:1,H=E?1:I[1],Z=R[0],Q=E?R[1]:R[2],Y=E?R[2]:1,ee=E?1:R[1],ne=t.makeOutput(h.inShape,"float32"),J=t.dataIdMap.get(ne.dataId).id,X=t.dataIdMap.get(r.dataId).id,fe=t.dataIdMap.get(s.dataId).id;return Kk(X,fe,f,m,g,y,x,A,w,S,b,N,C,M,$,P,D,W,V,G,U,H,Z,Q,Y,ee,J),ne}var dQ={kernelName:fi,backendName:"wasm",setupFunc:lQ,kernelFunc:uQ},pQ=jt(mi),cQ=jt(gi),m2;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(m2||(m2={}));var Zk;function hQ(e){Zk=e.wasm.cwrap(xi,null,["number","number","number","number","array","number","number","number","number","number"])}function fQ(e){let{backend:t,inputs:a,attrs:n}=e,{method:r,extrapolationValue:s,cropSize:i}=n,{image:o,boxes:l,boxInd:u}=a,d=l.shape[0],[c,p]=i,h=[d,c,p,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=Jl({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,A=t.dataIdMap.get(l.dataId).id,y=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(h,"float32"),b=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return Zk(g,A,y,d,w,c,p,m2[r],s,b),m!=null&&t.disposeData(m.dataId),x}var mQ={kernelName:xi,backendName:"wasm",setupFunc:hQ,kernelFunc:fQ},Yk;function gQ(e){Yk=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number"])}function AQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=r;u!==null&&(d=Hr({inputs:{x:r},attrs:{perm:u},backend:a}));let c=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumprod",[c],l);let p=a.makeOutput(d.shape,d.dtype),h=d.shape[c],f=a.dataIdMap.get(d.dataId).id,m=a.dataIdMap.get(p.dataId).id;Yk(f,i?1:0,o?1:0,h,m,vt[r.dtype]);let g=p;if(u!==null){let A=T.getUndoAxesPermutation(u);g=Hr({inputs:{x:p},attrs:{perm:A},backend:a}),a.disposeData(d.dataId),a.disposeData(p.dataId)}return g}var yQ={kernelName:Ai,backendName:"wasm",setupFunc:gQ,kernelFunc:AQ},Jk;function xQ(e){Jk=e.wasm.cwrap(yi,null,["number","number","number","number","number","number"])}function bQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n,l=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=T.getAxesPermutation([s],l),d=r;u!==null&&(d=Hr({inputs:{x:r},attrs:{perm:u},backend:a}));let c=T.getInnerMostAxes(1,l)[0];T.assertAxesAreInnerMostDims("cumsum",[c],l);let p=a.makeOutput(d.shape,d.dtype),h=d.shape[c],f=a.dataIdMap.get(d.dataId).id,m=a.dataIdMap.get(p.dataId).id;Jk(f,i?1:0,o?1:0,h,m,vt[r.dtype]);let g=p;if(u!==null){let A=T.getUndoAxesPermutation(u);g=Hr({inputs:{x:p},attrs:{perm:A},backend:a}),a.disposeData(d.dataId),a.disposeData(p.dataId)}return g}var vQ={kernelName:yi,backendName:"wasm",setupFunc:xQ,kernelFunc:bQ},Qk;function wQ(e){Qk=e.wasm.cwrap(bi,null,["number","number","number","array","number","array","array","number","number"])}function kQ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r}=a,{blockSize:s,dataFormat:i}=n,o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],c=l*s,p=u*s,h=d/(s*s),f=i==="NHWC"?[o,c,p,h]:[o,h,c,p],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(r.dataId).id,A=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),b=t.dataIdMap.get(m.dataId).id;return Qk(g,s,i==="NHWC"?1:0,A,r.shape.length-1,y,x,f.length,b),m}var IQ={kernelName:bi,backendName:"wasm",setupFunc:wQ,kernelFunc:kQ},e6;function SQ(e){e6=e.wasm.cwrap(vi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function TQ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c}=a,p=u??[1,1],h=T.computeConv2DInfo(r.shape,s.shape,l,p,d,c,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,A=h.padInfo.right,y=h.padInfo.bottom,x=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,S=h.strideHeight,N=h.strideWidth,C=h.inChannels,M=h.outChannels,$=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let E=n.makeOutput(h.outShape,"float32"),I=n.dataIdMap.get(E.dataId).id;return e6(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,A,y,x,$,b,w,S,N,C,M,I),E}var NQ={kernelName:vi,backendName:"wasm",setupFunc:SQ,kernelFunc:TQ},CQ=jt(ki),EQ=!1,RQ=ea(Zr,EQ,"bool"),_Q=jt(Yr,"float32");function g2(e){let{inputs:t,attrs:a,backend:n}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Ea({inputs:{x:r},backend:n,attrs:{shape:o}})}var $Q={kernelName:ml,backendName:"wasm",kernelFunc:g2};function t6(e){let{attrs:{shape:t,value:a,dtype:n},backend:r}=e,s=r.makeOutput(t,n);return r.typedArrayFromHeap(s).fill(a),s}var MQ={kernelName:gl,backendName:"wasm",kernelFunc:t6},a6;function FQ(e){a6=e.wasm.cwrap(Si,null,["number","number","number","number","number","number"])}function OQ(e){let{inputs:t,backend:a}=e,{image:n}=t,r=a.makeOutput(n.shape,n.dtype),s=a.dataIdMap.get(n.dataId).id,i=a.dataIdMap.get(r.dataId).id,[o,l,u,d]=n.shape;return a6(s,o,l,u,d,i),r}var PQ={kernelName:Si,backendName:"wasm",kernelFunc:OQ,setupFunc:FQ},DQ=jt(Jr),zQ=!1,LQ=ea(Ti,zQ),n6;function WQ(e){n6=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number"])}function BQ(e){let{backend:t,inputs:a,attrs:n}=e,{varianceEpsilon:r}=n,{x:s,mean:i,variance:o,offset:l,scale:u}=a,d=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=l!=null?t.dataIdMap.get(l.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return n6(d,c,p,h,f,r,g),m}var VQ={kernelName:Ni,backendName:"wasm",setupFunc:WQ,kernelFunc:BQ},r6;function UQ(e){r6=e.wasm.cwrap(Wr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function GQ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=T.computeConv2DInfo(r.shape,s.shape,l,d,u,p),g=nd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let A=n.dataIdMap.get(r.dataId).id,y=n.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=n.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let w=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,C=m.padInfo.right,M=m.padInfo.bottom,$=m.padInfo.left,E=m.dilationHeight,I=m.dilationWidth,R=m.strideHeight,P=m.strideWidth,D=m.inChannels,W=m.padInfo.type==="SAME"?1:0,V=m.batchSize,G=m.inHeight,U=m.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let H=n.makeOutput(m.outShape,"float32"),Z=n.dataIdMap.get(H.dataId).id,Q=o==null?0:n.dataIdMap.get(o.dataId).id;return r6(A,V,G,U,y,w,S,b,N,C,M,$,W,E,I,R,P,D,x,g,Q,f||0,Z),H}var HQ={kernelName:Wr,backendName:"wasm",setupFunc:UQ,kernelFunc:GQ},s6;function jQ(e){s6=e.wasm.cwrap(Br,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function qQ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=T.computeConv2DInfo(r.shape,s.shape,l,d,u,p,!0),g=nd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let A=n.dataIdMap.get(r.dataId).id,y=n.dataIdMap.get(s.dataId).id,x=m.outChannels,b=0;if(i!=null){let Y=n.dataIdMap.get(i.dataId);if(Y.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${Y.shape.length}.`);if(Y.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${Y.shape}) does not match the number of output channels (${x})`);b=Y.id}let w=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,C=m.padInfo.right,M=m.padInfo.bottom,$=m.padInfo.left,E=m.dilationHeight,I=m.dilationWidth,R=m.strideHeight,P=m.strideWidth,D=m.inChannels,W=m.padInfo.type==="SAME"?1:0,V=m.batchSize,G=m.inHeight,U=m.inWidth;if(c!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let H=n.makeOutput(m.outShape,"float32"),Z=n.dataIdMap.get(H.dataId).id,Q=o==null?0:n.dataIdMap.get(o.dataId).id;return s6(A,V,G,U,y,w,S,b,N,C,M,$,W,E,I,R,P,D,x,g,Q,f||0,Z),H}var XQ={kernelName:Br,backendName:"wasm",setupFunc:jQ,kernelFunc:qQ},i6;function KQ(e){i6=e.wasm.cwrap(Ci,null,["number","number","number","number","number","number","array","number"])}function ZQ(e){let{backend:t,inputs:a}=e,{params:n,indices:r}=a,[s,i,o,l]=dg.prepareAndValidate(n,r),u=t.makeOutput(s,n.dtype);if(i===0)return u;let d=r.shape,c=d[d.length-1],p=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return i6(p,vt[n.dtype],h,i,c,o,f,m),u}var YQ={kernelName:Ci,backendName:"wasm",setupFunc:KQ,kernelFunc:ZQ},o6;function JQ(e){o6=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function QQ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r,indices:s}=a,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,r.shape)[0],u=t.readSync(s.dataId),d=r.shape[l];for(let N=0;N<u.length;++N){let C=u[N];v.assert(C<=d-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${d-1}]`)}let c=T.segment_util.collectGatherOpShapeInfo(r,s,l,o),p=Ea({inputs:{x:r},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),h=v.sizeFromShape(s.shape),f=Ea({inputs:{x:s},attrs:{shape:[c.batchSize,h/c.batchSize]},backend:t}),m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let A=p.shape.length-1,y=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(v.computeStrides(p.shape)).buffer),S=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return o6(y,vt[r.dtype],w,A,x,c.batchSize,S,b),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=c.outputShape,g}var eee={kernelName:Al,backendName:"wasm",setupFunc:JQ,kernelFunc:QQ},tee=!1,aee=ea(Qr,tee,"bool"),nee=!1,ree=ea(es,nee,"bool"),l6;function see(e){l6=e.wasm.cwrap(Ri,null,["number","number","number","number"])}function iee(e){let{inputs:{x:t},attrs:{alpha:a},backend:n}=e,r=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;l6(r,vt[t.dtype],a,i)}return s}var oee={kernelName:Ri,backendName:"wasm",setupFunc:see,kernelFunc:iee},lee=!1,uee=ea(ts,lee,"bool"),dee=!1,pee=ea(as,dee,"bool"),cee=jt(ns),hee=!1,fee=ea(_i,hee,"bool"),mee=jt($i),gee=!1,Aee=ea(xl,gee,"bool"),yee=!1,xee=ea(R5,yee,"bool"),u6;function bee(e){u6=e.wasm.cwrap(Mi,null,["number","number","number","number"])}function vee(e){let{backend:t,inputs:a,attrs:n}=e,{reductionIndices:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=bs(i,r,t);if(p){let y=t.dataIdMap.get(u.dataId).id;l=u,o=y}let h=l.shape.length;T.assertAxesAreInnerMostDims("max",d,h);let[f,m]=T.computeOutAndReduceShapes(l.shape,d),g=v.sizeFromShape(m),A=t.makeOutput(f,i.dtype);if(v.sizeFromShape(l.shape)!==0){let y=t.dataIdMap.get(A.dataId).id;u6(o,vt[i.dtype],g,y)}if(p&&t.disposeData(u.dataId),s){let y=T.expandShapeToKeepDim(A.shape,c);A.shape=y}return A}var wee={kernelName:Mi,backendName:"wasm",setupFunc:bee,kernelFunc:vee},kee=!1,Iee=ea(rs,kee),d6;function See(e){d6=e.wasm.cwrap(Fi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tee(e){let{inputs:t,attrs:a,backend:n}=e,r=t.x,s=n.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=T.computePool2DInfo(r.shape,i,o,1,l,u),c=d.filterHeight,p=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,A=d.dilationHeight,y=d.dilationWidth,x=d.strideHeight,b=d.strideWidth,w=d.inChannels,S=d.outChannels;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let N=n.makeOutput(d.outShape,"float32"),C=n.dataIdMap.get(N.dataId).id;return d6(s,r.shape[0],r.shape[1],r.shape[2],c,p,h,f,m,g,A,y,x,b,w,S,C),N}var Nee={kernelName:Fi,backendName:"wasm",setupFunc:See,kernelFunc:Tee},p6;function Cee(e){p6=e.wasm.cwrap(Oi,null,["number, number, number"])}function Eee(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=bs(i,r,t),f=c;if(h){let b=t.dataIdMap.get(d.dataId).id;b!==o&&(u=d,l=b,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),A=v.sizeFromShape(g),y=u;u.dtype!=="float32"&&(y=Jl({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(y.dataId).id);let x=t.makeOutput(m,"float32");if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(x.dataId).id;p6(l,A,b)}if(h&&t.disposeData(d.dataId),s){let b=T.expandShapeToKeepDim(x.shape,p);x.shape=b}return u.dtype!=="float32"&&t.disposeData(y.dataId),x}var Ree={kernelName:Oi,backendName:"wasm",setupFunc:Cee,kernelFunc:Eee},c6;function _ee(e){c6=e.wasm.cwrap(Pi,null,["number","number","number","number"])}function $ee(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=bs(i,r,t);if(h){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x)}let f=u.shape.length;T.assertAxesAreInnerMostDims("min",c,f);let[m,g]=T.computeOutAndReduceShapes(u.shape,c),A=v.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;c6(l,vt[i.dtype],A,x)}if(h&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var Mee={kernelName:Pi,backendName:"wasm",setupFunc:_ee,kernelFunc:$ee},Fee=!1,Oee=ea(ss,Fee),A2;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(A2||(A2={}));var h6;function Pee(e){h6=e.wasm.cwrap(Di,null,["number","array","number","number","array","array","number","number"])}function Dee(e){let{inputs:{x:t},backend:a,attrs:{paddings:n,mode:r}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]),i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=n.map(f=>f[0]),c=n.map(f=>f[1]),p=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(c).buffer);return h6(i,u,t.shape.length,vt[t.dtype],p,h,A2[r],l),o}var zee={kernelName:Di,backendName:"wasm",kernelFunc:Dee,setupFunc:Pee},Lee=!0,Wee=ea(is,Lee),Bee=jt(bl);function F1(e,t){let a=new Int32Array(e.wasm.HEAPU8.buffer,t,4),n=a[0],r=a[1],s=a[2],i=a[3];return e.wasm._free(t),{pSelectedIndices:n,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var f6;function Vee(e){f6=e.wasm.cwrap(zi,"number",["number","number","number","number","number"])}function Uee(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=n,{boxes:o,scores:l}=a,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,c=f6(u,d,s,r,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=F1(t,c);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}var Gee={kernelName:zi,backendName:"wasm",setupFunc:Vee,kernelFunc:Uee},m6;function Hee(e){m6=e.wasm.cwrap(vl,"number",["number","number","number","number","number","bool"])}function jee(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=n,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=m6(d,c,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=F1(t,p);t.wasm._free(m);let A=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[A,y]}var qee={kernelName:vl,backendName:"wasm",setupFunc:Hee,kernelFunc:jee},g6;function Xee(e){g6=e.wasm.cwrap(Li,"number",["number","number","number","number","number","number"])}function Kee(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=n,{boxes:l,scores:u}=a,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=g6(d,c,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=F1(t,p);t.wasm._free(g);let A=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[A,y]}var Zee={kernelName:Li,backendName:"wasm",setupFunc:Xee,kernelFunc:Kee},Yee=!1,Jee=ea(os,Yee,"bool"),A6;function Qee(e){A6=e.wasm.cwrap(kl,null,["number","number","number","number","number"])}function ete(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n,u=a.makeOutput([...r.shape,i],s),d=a.dataIdMap.get(u.dataId).id,c=a.dataIdMap.get(r.dataId).id;return A6(c,i,o,l,d),u}var tte={kernelName:kl,backendName:"wasm",setupFunc:Qee,kernelFunc:ete};function ate(e){let{inputs:{x:t},backend:a}=e,n=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(n).fill(1),n}var nte={kernelName:wl,backendName:"wasm",kernelFunc:ate};function rte(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return g2({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{v.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let c=g2({inputs:{input:d},backend:a,attrs:{dim:r}});return o.push(c),c}),u=qk({inputs:l,backend:a,attrs:{axis:r}});return o.forEach(d=>a.disposeData(d.dataId)),u}var ste={kernelName:Il,backendName:"wasm",kernelFunc:rte},y6;function ite(e){y6=e.wasm.cwrap(Wi,null,["number","array","number","number","array","array","number","number"])}function ote(e){let{inputs:{x:t},backend:a,attrs:{paddings:n,constantValue:r}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]);if(v.sizeFromShape(t.shape)===0)return t6({backend:a,attrs:{shape:s,value:r,dtype:t.dtype}});let i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),l=a.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=n.map(f=>f[0]),c=n.map(f=>f[1]),p=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(c).buffer);return y6(i,u,t.shape.length,vt[t.dtype],p,h,r,l),o}var x6={kernelName:Wi,backendName:"wasm",kernelFunc:ote,setupFunc:ite},lte=!1,ute=ea(Bi,lte),b6;function dte(e){b6=e.wasm.cwrap(Vi,null,["number","number","number"])}function pte(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=a.dataIdMap.get(n.dataId).id,i=a.dataIdMap.get(r.dataId).id,o=s,l=n,u=l;l.dtype!=="float32"&&(u=Jl({backend:a,inputs:{x:n},attrs:{dtype:"float32"}}),o=a.dataIdMap.get(u.dataId).id);let d=a.makeOutput(n.shape,"float32"),c=a.dataIdMap.get(d.dataId).id;return b6(o,i,c),l.dtype!=="float32"&&a.disposeData(u.dataId),d}var cte={kernelName:Vi,backendName:"wasm",setupFunc:dte,kernelFunc:pte},v6;function hte(e){v6=e.wasm.cwrap(Ui,null,["number","number","number","number"])}function fte(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=bs(i,r,t),f=c;if(h){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),A=v.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;v6(l,A,vt[y.dtype],x)}if(h&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var mte={kernelName:Ui,backendName:"wasm",setupFunc:hte,kernelFunc:fte},gte=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=d1(n,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},Ate={kernelName:Sl,backendName:"wasm",kernelFunc:gte},yte=!0,xte=ea(wi,yte),bte=jt(Gi),vte=jt(qi),w6;function wte(e){w6=e.wasm.cwrap(ji,null,["number","number","number","number","number","number","number","number","number","number"])}function kte(e){let{backend:t,inputs:a,attrs:n}=e,{images:r}=a,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,[d,c,p,h]=r.shape,f=[d,l,u,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Jl({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let A=m.id,y=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return y;let x=t.dataIdMap.get(y.dataId).id;return w6(A,d,c,p,h,l,u,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),y}var Ite={kernelName:ji,backendName:"wasm",setupFunc:wte,kernelFunc:kte},k6;function Ste(e){k6=e.wasm.cwrap(Hi,null,["number","number","number","number","number","number","number","number","number","number"])}function Tte(e){let{backend:t,inputs:a,attrs:n}=e,{images:r}=a,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,[d,c,p,h]=r.shape,f=[d,l,u,h],m=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),A;g.dtype!=="float32"&&(A=Jl({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(A.dataId));let y=g.id,x=t.dataIdMap.get(m.dataId).id;return k6(y,d,c,p,h,l,u,s?1:0,i?1:0,x),A!=null&&t.disposeData(A.dataId),m}var Nte={kernelName:Hi,backendName:"wasm",setupFunc:Ste,kernelFunc:Tte},I6;function Cte(e){I6=e.wasm.cwrap(Cl,null,["number","array","number","array","number","number"])}function Ete(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n,i=v.parseAxisParam(s,r.shape);if(r.shape.length===0)return Gh({inputs:{x:r},backend:a});let o=a.makeOutput(r.shape,r.dtype),l=a.dataIdMap.get(r.dataId).id,u=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),c=new Uint8Array(new Int32Array(r.shape).buffer);I6(l,d,i.length,c,r.shape.length,u);let p=Ea({inputs:{x:o},attrs:{shape:r.shape},backend:a});return a.disposeData(o.dataId),p}var Rte={kernelName:Cl,backendName:"wasm",kernelFunc:Ete,setupFunc:Cte},S6;function _te(e){S6=e.wasm.cwrap(no,null,["number","number","number","number","number","number","number","number","array","number","number"])}function $te(e){let{inputs:t,backend:a,attrs:n}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=n,l=a.makeOutput(r.shape,r.dtype),u=a.dataIdMap.get(r.dataId).id,d=a.dataIdMap.get(l.dataId).id,[c,p,h,f]=r.shape,[m,g]=T.getImageCenter(o,p,h),A=i===0,y=255,x=typeof i=="number"?[i,i,i,A?0:y]:[...i,y],b=new Uint8Array(new Int32Array(x).buffer);return S6(u,c,p,h,f,s,m,g,b,x.length,d),l}var Mte={kernelName:no,backendName:"wasm",kernelFunc:$te,setupFunc:_te},Fte=jt(El),Ote=jt(ls),T6;function Pte(e){T6=e.wasm.cwrap(Xi,null,["number","number","number","number","number","number","array","number","number"])}function Dte(e){let{backend:t,inputs:a,attrs:n}=e,{indices:r,updates:s}=a,{shape:i}=n,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=pg.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(c).buffer),g=t.dataIdMap.get(o.dataId).id;return T6(h,f,vt[s.dtype],l,u,d,m,p,g),o}var zte={kernelName:Xi,backendName:"wasm",setupFunc:Pte,kernelFunc:Dte},N6;function Lte(e){N6=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Wte(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=a.dataIdMap.get(n.dataId).id,o=a.dataIdMap.get(r.dataId).id,l=a.dataIdMap.get(s.dataId).id,u=a.makeOutput(r.shape,r.dtype),d=a.dataIdMap.get(u.dataId).id,c=n.shape.length,p=r.shape.length,h=c===0||c>1||p===1?1:v.sizeFromShape(r.shape.slice(1));return N6(i,o,l,h,d),u}var Bte={kernelName:Rl,backendName:"wasm",kernelFunc:Wte,setupFunc:Lte},C6;function Vte(e){C6=e.wasm.cwrap(us,null,["number","number"])}function Ute(e){let{backend:t,inputs:{x:a}}=e,n=t.dataIdMap.get(a.dataId).id,r=t.makeOutput(a.shape,a.dtype),s=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||C6(n,s),r}var Gte={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Vte,kernelFunc:Ute},Hte=jt(Ki),E6;function jte(e){E6=e.wasm.cwrap(Yi,null,["number","number","number","number"])}function qte(e){let{backend:t,inputs:{logits:a},attrs:{dim:n}}=e,r=t.dataIdMap.get(a.dataId).id,s=t.makeOutput(a.shape,a.dtype),i=t.dataIdMap.get(s.dataId).id,o=a.shape[n],l=v.sizeFromShape(a.shape)/o;return v.sizeFromShape(s.shape)===0||E6(r,i,o,l),s}var Xte={kernelName:Yi,backendName:"wasm",setupFunc:jte,kernelFunc:qte};function Kte(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n,o=v.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);let u=x6.kernelFunc({inputs:{x:r},backend:a,attrs:{paddings:l,constantValue:0}}),d=T.getReshaped(u.shape,s,o,!1),c=T.getPermuted(d.length,s.length,!1),p=T.getReshapedPermuted(u.shape,s,o,!1),h=Ea({inputs:{x:u},backend:a,attrs:{shape:d}}),f=Hr({inputs:{x:h},backend:a,attrs:{perm:c}}),m=Ea({inputs:{x:f},backend:a,attrs:{shape:p}});return a.disposeData(u.dataId),a.disposeData(h.dataId),a.disposeData(f.dataId),m}var Zte={kernelName:Ml,backendName:"wasm",kernelFunc:Kte},R6;function Yte(e){R6=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Jte(e){let{backend:t,inputs:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=a,o=n.shape[0],l=n.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],c=t.dataIdMap.get(n.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,n.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),r.dtype),A=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([u],"bool"),x=t.dataIdMap.get(y.dataId).id,b=t.makeOutput([o],n.dtype),w=t.dataIdMap.get(b.dataId).id,S=t.makeOutput([4],"int32"),N=t.dataIdMap.get(S.dataId).id,C=R6(c,p,vt[r.dtype],o,u,l,h,m,A,x,w,N),M=t.readSync(S.dataId),$;switch(M[0]){case 1:{$=T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(M[1]);break}case 2:{$=T.getSparseFillEmptyRowsNegativeIndexErrorMessage(M[1],M[2]);break}case 3:$=T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(M[1],M[2],M[3]);break;default:$=""}if(t.disposeData(S.dataId),$)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(b.dataId),new Error($);let E=f,I=g;return C!==d[0]&&(E=ni({inputs:{x:f},attrs:{begin:0,size:[C,l]},backend:t}),I=ni({inputs:{x:g},attrs:{begin:0,size:C},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,I,y,b]}var Qte={kernelName:Cd,backendName:"wasm",setupFunc:Yte,kernelFunc:Jte},_6;function eae(e){_6=e.wasm.cwrap(Ol,null,["number","number","number","number","number","number","number"])}function tae(e){let{backend:t,inputs:a}=e,{inputIndices:n,inputShape:r,newShape:s}=a;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(n.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=n.shape[0],d=v.sizeFromShape(s.shape),c=t.makeOutput([u,d],n.dtype),p=t.dataIdMap.get(c.dataId).id,h=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;_6(i,o,l,u,p,f,g);let A=t.readSync(m.dataId),y;switch(A[0]){case 0:{y=T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break}case 1:{y=T.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break}case 2:y=T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));y=T.getSparseReshapeInputOutputMultipleErrorMessage(x,b);break}case 4:{let x=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));y=T.getSparseReshapeInputOutputMismatchErrorMessage(x,b);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(c.dataId),t.disposeData(h.dataId),new Error(y);return[c,h]}var aae={kernelName:Ol,backendName:"wasm",setupFunc:eae,kernelFunc:tae},$6;function M6(e){$6=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function F6(e,t){let{backend:a,inputs:n}=e,{data:r,indices:s,segmentIds:i}=n,o=s.shape[0],l=a.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let c=a.dataIdMap.get(r.dataId).id,p=a.dataIdMap.get(s.dataId).id,h=a.dataIdMap.get(i.dataId).id,f=a.makeOutput(d,r.dtype),m=a.dataIdMap.get(f.dataId).id,g=a.makeOutput([4],"int32"),A=a.dataIdMap.get(g.dataId).id;$6(c,vt[r.dtype],r.shape[0],p,h,m,A,t,0);let y=a.readSync(g.dataId),x;switch(y[0]){case 0:{x=T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y[1],y[2]);break;case 3:x=T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(y[1],y[2],y[3]);break;default:x=""}if(a.disposeData(g.dataId),x)throw a.disposeData(f.dataId),new Error(x);return f}function nae(e){return F6(e,!0)}var rae={kernelName:Ed,backendName:"wasm",setupFunc:M6,kernelFunc:nae};function sae(e){return F6(e,!1)}var iae={kernelName:Rd,backendName:"wasm",setupFunc:M6,kernelFunc:sae};function oae(e){let{inputs:t,attrs:a,backend:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=v.parseAxisParam(i,r.shape)[0],l=T.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(c=>{let p=[...d];p[o]=c;let h=ni({inputs:{x:r},attrs:{begin:u,size:p},backend:n});return u[o]+=c,h})}var lae={kernelName:Fl,backendName:"wasm",kernelFunc:oae},uae=jt(ds),dae=jt($d),pae=!0,cae=ea(ps,pae),O6;function hae(e){O6=e.wasm.cwrap(ao,null,["number","number","number","number"])}function fae(e){let{backend:t,inputs:a,attrs:n}=e,{alpha:r}=n,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return O6(i,r,vt[s.dtype],l),o}var mae={kernelName:ao,backendName:"wasm",setupFunc:hae,kernelFunc:fae},P6;function gae(e){P6=e.wasm.cwrap(Ji,null,["number","array","number","array","array","array","array","array","number","number"])}function Aae(e){let{backend:t,inputs:a,attrs:n}=e,{x:r}=a,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:y,end:x,strides:b}=gt.sliceInfo(r.shape,s,i,o,l,u,d,c,p),w;if(m)w=Ea({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=gt.computeOutShape(y,x,b),N=ni({inputs:{x:r},backend:t,attrs:{begin:y,size:S}});w=Ea({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeData(N.dataId)}else{let S=t.makeOutput(h,"float32"),N=t.dataIdMap.get(r.dataId).id,C=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),M=new Uint8Array(new Int32Array(y).buffer),$=new Uint8Array(new Int32Array(x).buffer),E=new Uint8Array(new Int32Array(b).buffer),I=new Uint8Array(new Int32Array(h).buffer),R=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),P=t.dataIdMap.get(S.dataId).id;P6(N,C,r.shape.length,M,$,E,I,R,h.length,P),w=Ea({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}return w}var yae={kernelName:Ji,backendName:"wasm",setupFunc:gae,kernelFunc:Aae};function xae(e){let{backend:t,inputs:a,attrs:n}=e,{data:r,dataSplits:s}=a,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:c}=n,p=t.readSync(r.dataId),h=t.readSync(s.dataId),[f,m]=c1(p,h,i,o,l,u,d,c),g=t.makeOutput([f.length],"string"),A=t.dataIdMap.get(g.dataId);A.stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}var bae={kernelName:Pl,backendName:"wasm",kernelFunc:xae};function vae(e){let{backend:t,inputs:a,attrs:n}=e,{input:r,delimiter:s}=a,{skipEmpty:i}=n,o=t.readSync(r.dataId),l=t.readSync(s.dataId),[u,d,c]=h1(o,l[0],i),p=d.length,h=t.makeOutput([p,2],"int32");t.typedArrayFromHeap(h).set(u);let f=t.makeOutput([p],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=d;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(c),[h,f,g]}var wae={kernelName:Md,backendName:"wasm",kernelFunc:vae};function kae(e){let{backend:t,inputs:a,attrs:n}=e,{input:r}=a,{numBuckets:s}=n,i=t.readSync(r.dataId),o=f1(i,s),l=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(l).set(o),l}var Iae={kernelName:Fd,backendName:"wasm",kernelFunc:kae},Sae=!0,Tae=ea(cs,Sae),D6;function Nae(e){D6=e.wasm.cwrap(Zi,null,["number","number","number","number"])}function Cae(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=bs(i,r,t),f=c;if(h){let x=t.dataIdMap.get(d.dataId).id;x!==o&&(u=d,l=x,f=T.getInnerMostAxes(f.length,u.shape.length))}T.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=T.computeOutAndReduceShapes(u.shape,f),A=v.sizeFromShape(g),y=t.makeOutput(m,u.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;D6(l,A,vt[y.dtype],x)}if(h&&t.disposeData(d.dataId),s){let x=T.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var Eae={kernelName:Zi,backendName:"wasm",setupFunc:Nae,kernelFunc:Cae},Rae=jt(Dl),_ae=jt(Qi),z6;function $ae(e){z6=e.wasm.cwrap(hs,null,["number","array","number","array","number","number"])}function Mae(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,s=a.dataIdMap.get(r.dataId).id,{reps:i}=n,o=new Array(r.shape.length);for(let p=0;p<o.length;p++)o[p]=r.shape[p]*i[p];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=a.makeOutput(o,r.dtype),c=a.dataIdMap.get(d.dataId).id;return z6(s,l,r.shape.length,u,o.length,vt[d.dtype],c),d}var Fae={kernelName:hs,backendName:"wasm",setupFunc:$ae,kernelFunc:Mae},L6;function Oae(e){L6=e.wasm.cwrap(eo,null,["number","array","number","number","number","bool","number","number"])}var Pae=({inputs:e,backend:t,attrs:a})=>{let{x:n}=e,{k:r,sorted:s}=a,i=t.dataIdMap.get(n.dataId).id,o=new Uint8Array(new Int32Array(n.shape).buffer),l=n.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,n.dtype),d=t.dataIdMap.get(u.dataId).id,c=t.makeOutput(l,"int32"),p=t.dataIdMap.get(c.dataId).id;return L6(i,o,n.shape.length,vt[n.dtype],r,s,d,p),[u,c]},Dae={kernelName:eo,backendName:"wasm",setupFunc:Oae,kernelFunc:Pae},W6;function zae(e){W6=e.wasm.cwrap(to,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Lae(e){let{backend:t,inputs:a,attrs:n}=e,{image:r,transforms:s}=a,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,c,p,h]=r.shape,[f,m]=u??[c,p],g=[d,f,m,h],A=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),y=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),x=t.makeOutput(g,r.dtype),b=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(s.dataId).id,N=i==="nearest"?1:2,C;switch(o){case"constant":C=1;break;case"reflect":C=2;break;case"wrap":C=3;break;case"nearest":C=4;break;default:C=1;break}return W6(w,S,s.shape[0]>1,d,f,m,h,p,c,A,r.shape.length-1,y,g.length-1,N,C,l,b),x}var Wae={kernelName:to,backendName:"wasm",setupFunc:zae,kernelFunc:Lae};function Bae(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),u=0;for(let h=0;h<o;h++)h!==s&&(l[u++]=r.shape[h]);let d=new Array(i),c=new Array(o).fill(0),p=r.shape.slice();p[s]=1;for(let h=0;h<d.length;h++)c[s]=h,d[h]=ni({inputs:{x:r},attrs:{begin:c,size:p},backend:a});return d.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:l}))}var Vae={kernelName:zl,backendName:"wasm",kernelFunc:Bae};function Uae(e){let{inputs:{x:t},backend:a}=e,n=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(n).fill(0),n}var Gae={kernelName:Ll,backendName:"wasm",kernelFunc:Uae},Hae=[xJ,bJ,wJ,SJ,MJ,PJ,LJ,VJ,jJ,JJ,QJ,eQ,nQ,rQ,oQ,dQ,pQ,cQ,mQ,yQ,vQ,IQ,NQ,CQ,RQ,_Q,$Q,MQ,PQ,DQ,LQ,VQ,HQ,XQ,YQ,eee,aee,ree,TJ,oee,uee,pee,cee,fee,mee,Aee,xee,wee,Iee,Nee,Ree,Mee,Oee,zee,Wee,Bee,Gee,qee,Zee,Jee,tte,nte,ste,x6,ute,cte,mte,Ate,xte,bte,vte,UJ,Ite,Nte,Rte,Mte,Fte,Ote,zte,Bte,Gte,Hte,ZJ,Xte,Zte,Qte,aae,rae,iae,lae,uae,dae,cae,mae,yae,bae,wae,Iae,Tae,Eae,Rae,_ae,Fae,Dae,Wae,RJ,Vae,Gae];for(let e of Hae)Tn(e);var y2=B();y2.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});y2.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(y2.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var Iy=il(_S()),jae=il($S()),Sy=il(MS()),Ty=Iy.default||Iy,qae=Sy.default||Sy,B6=class extends ol{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(V6),b2=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new od(this,Dt())}write(e,t,a){let n={id:this.dataIdNextNumber++};return this.move(n,e,t,a,1),n}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,a,n,r){let s=this.dataIdNextNumber++;if(n==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:a,dtype:n,memoryOffset:null,refCount:r});return}let i=v.sizeFromShape(a),o=i*v.bytesPerElement(n),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:a,dtype:n,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,a){let{memoryOffset:n,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(a==null||a>=i.length)?i:i.slice(t,a);t=t||0,a=a||v.sizeFromShape(s);let o=v.bytesPerElement(r),l=this.wasm.HEAPU8.slice(n+t*o,n+a*o);return Zae(l.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let a=this.dataIdMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;this.wasm._free(a.memoryOffset),this.wasm.tfjs.disposeData(a.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,a){let n;if(a==null)n=this.write(null,e,t);else{let r=this.dataIdNextNumber++;n={id:r},this.dataIdMap.set(n,{id:r,memoryOffset:a,shape:e,dtype:t,refCount:1});let s=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,a)}return{dataId:n,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:a}){let n=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(a),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(n,r,s);case"int32":return new Int32Array(n,r,s);case"bool":return new Uint8Array(n,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Xae(e){return(t,a)=>(v.fetch(e,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${e}'`),n.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(s=>{a(s.instance,s.module)})})}),{})}function Ny(e,t,a){if(Dc!=null)return Dc;let n="tfjs-backend-wasm.wasm";return e&&t?n="tfjs-backend-wasm-threaded-simd.wasm":e&&(n="tfjs-backend-wasm-simd.wasm"),Du!=null&&Du[n]!=null?Du[n]:a+n}async function Kae(){let[e,t]=await Promise.all([B().getAsync("WASM_HAS_SIMD_SUPPORT"),B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((a,n)=>{let r={};r.locateFile=(o,l)=>{if(o.endsWith(".worker.js")){let u=jae.wasmWorkerContents.replace(/\n/g,"\\n"),d=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(d)}return o.endsWith(".wasm")?Ny(e,t,Tu??l):l+o},O1&&(r.instantiateWasm=Xae(Ny(e,t,Tu??"")));let s=!1;r.onAbort=()=>{s||zu||(zu=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Dc==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Ty.toString()],{type:"text/javascript"}),i=Ty(r)):i=qae(r),i.then(o=>{s=!0,zu=!1;let l=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",l,["number"]),dispose:o.cwrap("dispose",l,[])},a({wasm:o})}).catch(n)})}function Zae(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Yae=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Dc=null,Tu=null,Du={},zu=!1,O1=!1;function Jae(e,t=!1){if(ig("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),zu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Dc=e,O1=t}function x2(e,t=!1){if(zu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Tu=e;else{Du=e;let a=Yae.filter(n=>Du[n]==null);if(a.length>0)throw new Error(`There were no entries found for the following binaries: ${a.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}O1=t}var V6=-1,b2=-1;function Qae(e){V6=e}function ene(){if(b2===-1)throw new Error("WASM backend not initialized.");return b2}var tne="4.0.0",ane=2;Wl("wasm",async()=>{let{wasm:e}=await Kae();return new B6(e)},ane);var hr=B();hr.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);hr.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);hr.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);hr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);hr.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);hr.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);hr.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);hr.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);hr.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);var nne=class{constructor(e){e&&(this.vendor=e.vendor)}isIntel(){return this.vendor==="intel"}},rne=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,a=!1){let n=Cy(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;let s=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(s),s}this.numBytesAllocated+=e;let r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a});return this.usedBuffers.get(n).push(r),r}releaseBuffer(e,t,a){if(this.freeBuffers.size===0)return;let n=Cy(t,a);this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.freeBuffers.get(n).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(n),s=r.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,a){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,a)},n=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Cy(e,t){return`${e}_${t}`}var sne=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,a,n){let r=Ry(a),s=e*t*r,i=Ey(e,t,a,n);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=s;let o=this.device.createTexture({size:[e,t],format:a,usage:n});return this.usedTextures.get(i).push(o),o}releaseTexture(e,t,a,n,r){if(this.freeTextures.size===0)return;let s=Ey(t,a,n,r);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(s),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let l=Ry(n),u=t*a*l;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Ey(e,t,a,n){return`${e}_${t}_${a}_${n}`}function Ry(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}function ine(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let a=e.length,n=e.map(s=>`${t}[${s}]`),r=new Array(a-1);r[a-2]=n[a-1];for(let s=a-3;s>=0;--s)r[s]=`(${r[s+1]} * ${n[s+1]})`;return r}var one=(e,t,a,n)=>{let r={dtype:n.dtype,shape:n.shape},s=lne(a,r,t),i=e.createShaderModule({code:s,label:t.constructor.name});return e.createComputePipeline({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})};function Zt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rr(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function Oe(...e){let t;switch(e.length){case 0:t=`
        ${rd()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main();
        }

        fn main()
      `;break;case 1:t=`
        ${rd()}
        fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                  @builtin(global_invocation_id) GlobalId : vec3<u32>,
                  @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
          localId = LocalId;
          globalId = GlobalId;
          numWorkgroups = NumWorkgroups;
          main(getGlobalIndex());
        }

        fn main(${e[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function rd(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function lne(e,t,a){let n=[];if(n.push(`
      const workGroupSizeX = ${a.workGroupSize[0]}u;
      const workGroupSizeY = ${a.workGroupSize[1]}u;
      const workGroupSizeZ = ${a.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${U6(a)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),a.isFromPixels)return n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Lu(t.dtype,a.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[_y,n.join(`
`),$y(t.shape),a.getUserCode()].join(`
`);let r="struct Uniforms { NAN : f32, ";a.variableNames.forEach((u,d)=>{let c=Zt(e[d].shape.length);r+=`${u.charAt(0).toLowerCase()+u.slice(1)}Shape : ${c}, `}),r+=`outShape : ${Zt(t.shape.length)}, `;let s=t.shape.length-1;r+=`
         outShapeStrides: ${Zt(s)}, `,a.size&&(r+="size : i32, "),a.uniforms&&(r+=a.uniforms),r+="};",r=gne(r),n.push(r),a.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Lu(t.dtype,a.isVec4)}>;
    `),a.variableNames.forEach((u,d)=>{n.push(`
      @group(0) @binding(${1+d}) var<storage, read> ${u}: array<${a.variableTypes?a.variableTypes[d]:Lu(e[d].dtype,a.isVec4)}>;
        `)}),r!==""&&n.push(`
      @group(0) @binding(${1+a.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let i=hne(t.shape,a.dispatchLayout),o=[_y,n.join(`
`),$y(t.shape),i,fne(t.shape.length)];a.atomic||o.push(mne(t.shape,t.dtype,a.isVec4));let l=e.map((u,d)=>cne(u,t.shape,a.variableTypes?a.variableTypes[d]==="vec4<f32>":a.isVec4,a.dispatchLayout.x.length===t.shape.length)).join(`
`);return o.push(l),o.push(a.getUserCode()),o.join(`
`)}function une(e,t,a,n){let r=e.shaderKey;if(e.isFromPixels)return r;let s=a.map(d=>d.dtype).concat(n.dtype),i=a.map(d=>T.getBroadcastDims(d.shape,n.shape)),o=a.map(d=>v.arraysEqual(d.shape,n.shape)).join("_"),l=i.map(d=>d.join("_")).join(";"),u=U6(e)?"flatDispatch":"";return r+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(d=>d.length).join(",")+s.join(",")+e.variableNames.join(",")+l+o+u,r}var _y=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function $y(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let a=v.computeStrides(e),n=Zt(t),r=[];for(let i=0;i<t;i++)r.push(`d${i}`);if(a.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let s;return s="var index2 = index;"+a.map((i,o)=>{let l=`let ${r[o]} = index2 / uniforms.outShapeStrides.${rr(o)}`,u=o===a.length-1?`let ${r[o+1]} = index2 - ${r[o]} * uniforms.outShapeStrides.${rr(o)}`:`index2 = index2 - ${r[o]} * uniforms.outShapeStrides.${rr(o)}`;return`${l}; ${u};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${n} {
      ${s}
      return ${n}(${r.join(",")});
    }
  `}function dne(e,t){let a=e.name,n=e.shape.length,r=Zt(n),s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=i.map(d=>`${d} : i32`).join(", ");if(n<1)return t?`
        fn ${s}() -> vec4<f32> {
          return vec4<f32>(${a}[0]);
        }
      `:`
      fn ${s}() ->f32 {
        return f32(${a}[0]);
      }
    `;let l=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),t?`
      fn ${s}(${o}) -> vec4<f32> {
        return vec4<f32>(${a}[getIndexFromCoords${u}(${r}(${i.join(",")}),
          ${l}) / 4]);
      }
      `:`
    fn ${s}(${o}) -> f32 {
      return f32(${a}[getIndexFromCoords${u}(${r}(${i.join(",")}),
        ${l})]);
    }
   `}function pne(e,t,a,n){let r=e.name,s=r.charAt(0).toUpperCase()+r.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=Zt(l);if(v.arraysEqual(e.shape,t)&&n)return a?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${r}[globalIndex]);
      }

      fn ${i}Coords(coords : ${u}) -> vec4<f32> {
        return vec4<f32>(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      return f32(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${u}) -> f32 {
      return f32(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let d=T.getBroadcastDims(e.shape,t),c=l-o,p="";if(o===0)return a?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      return get${s}();
    }

    fn ${i}Coords(coords : ${u}) -> vec4<f32> {
      return get${s}();
    }
  `:`
    fn ${i}Index(globalIndex : i32) -> f32{
      return get${s}();
    }

    fn ${i}Coords(coords : ${u}) -> f32{
      return get${s}();
    }
  `;l<2&&d.length>=1?p="coords = 0;":p=d.map(g=>`coords.${rr(g+c)} = 0;`).join(`
`);let h="";if(l<2&&o>0)h="coords";else if(l>1){let g=Zt(o),A=e.shape.map((y,x)=>`coords.${rr(x+c)}`).join(", ");h=`${g}(${A})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return a?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${p}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }

    fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {
      var coords = coordsIn;
      ${p}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }
  `:`
  fn ${i}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${p}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }

  fn ${i}Coords(coordsIn : ${u}) -> f32 {
    var coords = coordsIn;
    ${p}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }
`}function cne(e,t,a,n){let r=dne(e,a);return e.shape.length<=t.length&&(r+=pne(e,t,a,n)),r}function hne(e,t){let{x:a,y:n=[],z:r=[]}=t,s=e.length,i=a.length+n.length+r.length;if(i!==s)return"";if(a.length===s)return`fn getOutputCoords() -> ${Zt(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="",l=[a,n,r];for(let p=0;p<l.length;p++){let h=l[p];if(h.length!==0)if(h.length===1)o+=`let d${h[0]} = i32(globalId[${p}]);`;else{let f=ine(h,"uniforms.outShape");o+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:o+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}let u=[];for(let p=0;p<i;p++)u.push(`d${p}`);let d=Zt(i),c=`fn getOutputCoords() -> ${d} {
  ${o}
`;return u.length===0?c+=`return ${d}(0); }`:c+=`return ${d}(${u.join(",")}); }`,c}function fne(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function U6(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function Lu(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function mne(e,t,a){let n=e.length,r=Lu(t,a),s;if(a?s=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:s=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,n>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=Zt(n);a?s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:s+=`
      fn setOutputAtCoords(${i.map(l=>`${l} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(l=>`${l} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return s}function gne(e){let t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,n=>"@align(16) "+n);let a=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(a,(n,r,s)=>`vec${r}, @align(16) ${s}`),e}var G6={};Le(G6,{ArrayBufferToTypedArray:()=>q6,GPUBytesPerElement:()=>j6,MatMulProgramType:()=>bn,computeDispatch:()=>Ee,computeWorkGroupInfoForMatMul:()=>H6,computeWorkGroupSizeForConv2d:()=>P1,computeWorkPerThreadForConv2d:()=>D1,flatDispatchLayout:()=>je,isWebGPUSupported:()=>z1,tilesFitEvenlyIntoShape:()=>Ane});var qs=e=>{let t=1;for(let a=0;a<e.length;a++)t*=e[a];return t};function Ane(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((a,n)=>a%e[n]===0)}function Ee(e,t,a=[1,1,1],n=[1,1,1]){let[r,s,i]=[Math.ceil(qs(e.x.map(o=>t[o]))/(a[0]*n[0])),e.y?Math.ceil(qs(e.y.map(o=>t[o]))/(a[1]*n[1])):1,e.z?Math.ceil(qs(e.z.map(o=>t[o]))/(a[2]*n[2])):1];return[r,s,i]}function H6(e,t,a,n=!1){let r=[8,8,1],s=[4,4,1];return n||(e<=8&&(s[1]=1),t<=16&&a<=16&&(r[0]=4)),{workGroupSize:r,elementsPerThread:s}}function P1(e,t,a=!1){if(a)return[8,8,1];let n=qs(e.x.map(s=>t[s])),r=qs(e.y.map(s=>t[s]));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function D1(e,t,a=!1){if(a)return[4,4,1];let n=qs(e.x.map(s=>t[s])),r=qs(e.y.map(s=>t[s]));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function je(e){return{x:e.map((t,a)=>a)}}function j6(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function q6(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function z1(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}var bn;(function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"})(bn||(bn={}));var yne=B().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),xne=(e,t)=>{let a=e.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,r=t.dispatch;if(r.every(i=>i<=a))return r;v.assert(r[0]>a&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(r[0]));return s>a?(s=Math.ceil(Math.cbrt(r[0])),v.assert(s<=a,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},Hh=class extends ol{constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!z1())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.adapterInfo=new nne(t),this.bufferManager=new rne(this.device),this.textureManager=new sne(this.device),this.tensorMap=new od(this,Dt()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return Hh.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let a=this.tensorMap.get(e);if(this.decRef(e),!t&&a.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:n}=this.tensorMap.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let a=t.resourceInfo;a.texture instanceof GPUTexture&&this.textureManager.releaseTexture(a.texture,a.width,a.height,a.format,a.usage),a.texture=null}else{let a=t.resourceInfo;this.bufferManager.releaseBuffer(a.buffer,a.size,a.usage),a.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,a){if(a==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.tensorMap.set(n,{dtype:a,shape:t,values:e,refCount:1}),n}move(e,t,a,n,r){if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:n,shape:a,values:t,refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),await a.mapAsync(GPUMapMode.READ);let n=a.getMappedRange().slice(0);return a.unmap(),a!=null&&this.bufferManager.releaseBuffer(a,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),B().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let a=this.tensorMap.get(e);return this.releaseResource(e),a.values=t,a.values}readSync(e){let t=this.tensorMap.get(e),{values:a}=t;if(a==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return a}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:a}=t;if(a!=null)return this.convertAndCacheOnCPU(e,a);let n;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),s=r[0],i=r[1];n=T.mergeRealAndImagArrays(s,i)}else{let r=t.resourceInfo,s=await this.getBufferData(r.buffer,r.size);n=q6(s,t.dtype)}return this.convertAndCacheOnCPU(e,n),n}readToGPU(e){let t=this.tensorMap.get(e),{values:a,dtype:n,shape:r,resourceInfo:s}=t;if(n==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(s==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=s.size,o=this.bufferManager.acquireBuffer(i,s.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(s.buffer,0,o,0,i),this.submitQueue();let l=this.makeTensorInfo(r,n),u=Dt().makeTensorFromTensorInfo(l),d=this.tensorMap.get(l.dataId);return d.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:o},{tensorRef:u,buffer:o,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let a=t.map(n=>v.decodeString(n));return xe(e.shape,e.dtype,a)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return xe(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,a=[],n=!1;this.programTimersStack==null?(this.programTimersStack=a,n=!0):this.activeTimers.push(a),this.activeTimers=a,e();let r=v.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),s=v.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((l,u)=>({name:s[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,a){return t==="string"&&a!=null&&a.length>0&&v.isString(a[0])&&(a=a.map(n=>v.encodeString(n))),{dataId:this.write(a,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let n=t.resourceInfo;return n.texture instanceof GPUExternalTexture?n.texture:n.texture.createView()}let a=t.resourceInfo;return{offset:0,size:a.size,buffer:a.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let a=j6(t.dtype)*v.sizeFromShape(t.shape),n=this.bufferManager.acquireBuffer(a,this.defaultGpuBufferUsage());if(t.resourceInfo={size:a,usage:this.defaultGpuBufferUsage(),buffer:n},t.values){let r=this.bufferManager.acquireUploadBuffer(a,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),s=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(s).set(t.values):new Float32Array(s).set(t.values),r.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(r,0,n,0,a);let i={size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:r};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,a=0,n=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let l;switch(o.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:v.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}(a===5||a===6)&&(l=16),t=Math.ceil(t/l)*l,a=o.data.length,n.push(t),t+=o.data.length*4});let r=new ArrayBuffer(t);e.forEach((o,l)=>{let u=n[l];o.type==="int32"?new Int32Array(r,u,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(r,u,o.data.length).set(o.data):new Float32Array(r,u,o.data.length).set(o.data)});let s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(s,0,r,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:s};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,a,n,r){if(r||(r=this.makeTensorInfo(e.outputShape,a)),v.sizeFromShape(r.shape)===0)return this.tensorMap.get(r.dataId).values=v.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=xne(this.device,e);let s=[],i=[];if(!e.isFromPixels){s.push({type:"float32",data:[NaN]}),i=t.concat(r).map(g=>g.shape);let f="int32";i.map(g=>{s.push({type:f,data:g})});let m=v.computeStrides(r.shape);if(s.push({type:f,data:m}),e.size){let g=v.sizeFromShape(e.outputShape);s.push({type:f,data:[e.isVec4?g/4:g]})}}let o=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),l=une(e,i,o,r),u;l in this.pipelineCache?u=this.pipelineCache[l]:(u=one(this.device,e,o,r),this.pipelineCache[l]=u),n&&(s=[...s,...n]);let d=[this.tensorToBinding(r),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(s)],c=this.device.createBindGroup({layout:u.getBindGroupLayout(0),entries:d.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let p=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&p.writeTimestamp(this.querySet,0),p.setPipeline(u),p.setBindGroup(0,c),p.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&p.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(r.dataId),B().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,a,0,16),this.submitQueue(),await a.mapAsync(GPUMapMode.READ);let n=new BigUint64Array(a.getMappedRange()),r=Number(n[1]-n[0]);return a.unmap(),this.bufferManager.releaseBuffer(a,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=yne){return B().getBool("WEBGPU_CPU_FORWARD")&&e.every(a=>this.tensorMap.get(a.dataId).resourceInfo==null&&v.sizeFromShape(a.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};Hh.nextDataId=0;z1()&&Wl("webgpu",async()=>{B().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:B().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),a=t.limits,n={},r=t.features.has("timestamp-query");n.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:a.maxStorageBufferBindingSize},r&&(n.requiredFeatures=["timestamp-query"]);let s=await t.requestDevice(n),i=await t.requestAdapterInfo();return new Hh(s,i)},3);var Fe;(function(e){e[e.MUL=0]="MUL",e[e.ADD=1]="ADD",e[e.ATAN2=2]="ATAN2",e[e.SUB=3]="SUB",e[e.DIV=4]="DIV",e[e.EQUAL=5]="EQUAL",e[e.GREATER=6]="GREATER",e[e.GREATER_EQUAL=7]="GREATER_EQUAL",e[e.LESS=8]="LESS",e[e.LESS_EQUAL=9]="LESS_EQUAL",e[e.LOGICAL_AND=10]="LOGICAL_AND",e[e.NOT_EQUAL=11]="NOT_EQUAL",e[e.SQUARED_DIFFERENCE=12]="SQUARED_DIFFERENCE",e[e.INT_DIV=13]="INT_DIV",e[e.POW=14]="POW",e[e.PRELU=15]="PRELU",e[e.MAX=16]="MAX",e[e.MIN=17]="MIN",e[e.COMPLEX_MULTIPLY_REAL=18]="COMPLEX_MULTIPLY_REAL",e[e.COMPLEX_MULTIPLY_IMAG=19]="COMPLEX_MULTIPLY_IMAG"})(Fe||(Fe={}));var bne=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,X6=`
  if (isNaN.r) {
    resultTemp.r = valueForNaN;
  }
  if (isNaN.g) {
    resultTemp.g = valueForNaN;
  }
  if (isNaN.b) {
    resultTemp.b = valueForNaN;
  }
  if (isNaN.a) {
    resultTemp.a = valueForNaN;
  }
  `,K6=`
  let isNaN = isnanVec4(a) | isnanVec4(b);
  ${X6}
  `,vne="return a + b;",wne="return areal * breal - aimag * bimag;",kne="return areal * bimag + aimag * breal;",Ine="return a / b;",Sne="return a * b;",Tne="return (a - b) * (a - b);",Nne="return a - b;",Cne="return f32(a == b);",Ene="return vec4<f32>(a == b);",Rne="return f32(a > b);",_ne="return vec4<f32>(a > b);",$ne="return f32(a >= b);",Mne="return vec4<f32>(a >= b);",Fne="return f32(a < b);",One="return vec4<f32>(a < b);",Pne="return f32(a <= b);",Dne="return vec4<f32>(a <= b);",zne="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",Lne=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Wne=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Bne=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Vne=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Une=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
  ${K6}

  return resultTemp;
`,Gne=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Hne=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
  let valueForNaN = uniforms.NAN;
  ${X6}
  return resultTemp;
  `,jne="if (a < 0.0) { return b * a; }  return a;",qne=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function Xf(e,t,a="uniforms.NAN"){let n=t?K6:bne;return t?`
    let valueForNaN = ${a};
    var resultTemp = vec4<f32>(${e}(a, b));
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function L1(e,t){switch(e){case Fe.MUL:return Sne;case Fe.ADD:return vne;case Fe.ATAN2:return Xf("atan2",t);case Fe.SUB:return Nne;case Fe.DIV:return Ine;case Fe.EQUAL:return t?Ene:Cne;case Fe.GREATER:return t?_ne:Rne;case Fe.GREATER_EQUAL:return t?Mne:$ne;case Fe.LESS:return t?One:Fne;case Fe.LESS_EQUAL:return t?Dne:Pne;case Fe.LOGICAL_AND:return t?Lne:zne;case Fe.NOT_EQUAL:return t?Une:Vne;case Fe.SQUARED_DIFFERENCE:return Tne;case Fe.INT_DIV:return t?Bne:Wne;case Fe.PRELU:return t?qne:jne;case Fe.MAX:return Xf("max",t);case Fe.MIN:return Xf("min",t);case Fe.POW:return t?Hne:Gne;case Fe.COMPLEX_MULTIPLY_REAL:return wne;case Fe.COMPLEX_MULTIPLY_IMAG:return kne;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var ve;(function(e){e[e.ABS=0]="ABS",e[e.CEIL=1]="CEIL",e[e.COS=2]="COS",e[e.COSH=3]="COSH",e[e.ELU=4]="ELU",e[e.EXP=5]="EXP",e[e.EXPM1=6]="EXPM1",e[e.FLOOR=7]="FLOOR",e[e.IS_NAN=8]="IS_NAN",e[e.LINEAR=9]="LINEAR",e[e.LOG=10]="LOG",e[e.LOGICAL_NOT=11]="LOGICAL_NOT",e[e.NEG=12]="NEG",e[e.RELU=13]="RELU",e[e.RELU6=14]="RELU6",e[e.LEAKYRELU=15]="LEAKYRELU",e[e.RECIPROCAL=16]="RECIPROCAL",e[e.RSQRT=17]="RSQRT",e[e.SIN=18]="SIN",e[e.SINH=19]="SINH",e[e.SIGMOID=20]="SIGMOID",e[e.SQRT=21]="SQRT",e[e.SQUARE=22]="SQUARE",e[e.TANH=23]="TANH",e[e.TO_INT=24]="TO_INT"})(ve||(ve={}));var Xne="return abs(a);",Kne="return ceil(a);",Zne="return cos(a);",Yne=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Jne="return exp(a) - 1.0;",Qne="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",ere=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,tre="return exp(a);",are="return floor(a);",nre="return f32(isnan(a));",rre="return a;",sre=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,ire="return f32(!(a >= 1.0));",ore="return -a;",lre="if (a < 0.0) { return uniforms.alpha * a; } return a;",ure=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,dre="return 1.0 / a;",pre="return select(a, 0.0, a < 0.0);",cre="return clamp(a, 0.0, 6.0);",hre="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",fre=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,mre="return 1.0/sqrt(a);",gre="return 1.0 / (1.0 + exp(-1.0 * a));",Are="return sin(a);",yre=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,xre="return sqrt(a);",bre="return a * a;",vre=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,wre="return f32(i32((a)));";function Fs(e,t){switch(e){case ve.ABS:return Xne;case ve.COS:return Zne;case ve.COSH:return Yne;case ve.CEIL:return Kne;case ve.ELU:return t?ere:Qne;case ve.EXP:return tre;case ve.EXPM1:return Jne;case ve.FLOOR:return are;case ve.IS_NAN:return nre;case ve.LINEAR:return rre;case ve.LOG:return sre;case ve.LOGICAL_NOT:return ire;case ve.NEG:return ore;case ve.LEAKYRELU:return t?ure:lre;case ve.RECIPROCAL:return dre;case ve.RELU:return t?fre:pre;case ve.RELU6:return t?hre:cre;case ve.RSQRT:return mre;case ve.SIGMOID:return gre;case ve.SIN:return Are;case ve.SINH:return yre;case ve.SQRT:return xre;case ve.SQUARE:return bre;case ve.TANH:return vre;case ve.TO_INT:return wre;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var St=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function fr(e,t=!1,a=!1,n=3){if(e===null)return"";let r="";if(e==="linear")r=Fs(ve.LINEAR);else if(e==="relu")r=Fs(ve.RELU,a);else if(e==="elu")r=Fs(ve.ELU,a);else if(e==="relu6")r=Fs(ve.RELU6,a);else if(e==="prelu")r=L1(Fe.PRELU,a);else if(e==="sigmoid")r=Fs(ve.SIGMOID,a);else if(e==="leakyrelu")r=Fs(ve.LEAKYRELU,a);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let s=St(a?4:1),i="";return t?i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        ${r}
      }`,i}function lo(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function Z6(e,t,a,n,r=!1,s=!1,i=!1,o=1){v.assert(a&&o===1||!a,()=>`transposeA ${a} is not compatible with component size ${o}`);let l=`
      let batch = ${e?"0":"batchIn"};
      ${a?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,u=n?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${St(o)} {
    var value = ${St(o)}(0.0);
    let col = colIn * ${o};
    ${r&&i?l:`
    ${a?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${l}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${St(o)} {
    let col = colIn * ${o};
    let batch = ${t?"0":"batchIn"};
    var value = ${St(o)}(0.0);
    ${u}
    return value;
  }
  `}function W1(e,t,a,n,r,s,i=!1,o=!1,l=!1,u=1){return`
  ${Z6(a,n,r,s,i,o,l,u)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${St(u)}) {
    let col = colIn * ${u};
    ${i&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${lo(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var kre=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / InnerElementSize + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / InnerElementSize + inputCol);
        `,Ire=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`;function jh(e,t,a=!1,n=32,r=!1,s=32,i=!1){let o=t[1]*e[1],l=t[0]*e[0],u=a?o:n,d=a?n:o,c=u/t[0],p=n/t[1];return v.assert((a&&c===4&&e[1]===4||!a&&(c===3||c===4))&&u%t[0]===0&&n%t[1]===0&&e[0]===4,()=>`If transposeA ${a} is true, innerElementSize ${c} and workPerThread[1] ${e[1]} must be 4.
          Otherwise, innerElementSize ${c} must be 3 or 4.
      tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}. tileInner ${n} must be divisible by workGroupSize[1] ${t[1]}. ColPerThread ${e[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${c}<f32>, ${u/c}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${n}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${c};
  const TileInner = ${n};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${i?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${i?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = ${r?"0":"i32(globalId.z)"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${r?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
    var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, RowPerThread>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${p};
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${kre(a)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            let BCached0 = mm_Bsub[k * InnerElementSize][tileCol];
            let BCached1 = mm_Bsub[k * InnerElementSize + 1][tileCol];
            let BCached2 = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${c===3?"":"let BCached3 = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${Ire(a,c)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var My=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Sre=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function qh(e,t,a=!1,n=32,r=!1,s=32,i=!1){let o=e[1]*t[1],l=e[0]*t[0],u=a?o:n,d=a?n:o;v.assert(d%t[1]===0&&u%t[0]===0&&n%t[1]===0,()=>`tileAHight ${d} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${u} must be divisible by workGroupSize[0]${t[0]}, tileInner ${n} must be divisible by workGroupSize[1]${t[1]}`);let c=d/t[1],p=u/t[0],h=n/t[1],f=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${o};
      let globalColStart = i32(workgroupId.x) * ${l};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            ${My(a)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + TileInner;
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                  ACached * BCached[innerCol];
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * RowPerThread;
  let tileCol = i32(localId.x) * ColPerThread;

  let globalRow = i32(globalId.y) * RowPerThread;
  let globalCol = i32(globalId.x) * ColPerThread;
  let globalRowStart = i32(workgroupId.y) * ${o};

  let tileRowA = i32(localId.y) * ${c};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${h};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t = t + 1) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < ${p}; innerCol = innerCol + 1) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${My(a)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batch,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + TileInner;
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ColPerThread>;
    for (var k = 0; k < TileInner; k = k + 1) {
      for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        ${Sre(a)}
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${u}>, ${d}>;
    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${n}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${n};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
              @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let batch = ${r?"0":"i32(globalId.z)"};
      let numTiles = ${r?`${Math.ceil(s/n)}`:"(uniforms.dimInner - 1) / TileInner + 1"};
      var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${f}
    }
  `}var Tre=e=>e?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function Nre(e,t=!1){return v.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Oe()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Tre(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var Cre=class{constructor(e,t,a,n,r=!1,s=!1,i=null,o=null,l=null,u=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let d=r?e[1]:e[2];if(this.isVec4=(d%4===0&&!r||t[1]%4===0&&r)&&t[2]%4===0&&!s,this.isVectorA=t[1]===1&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workGroupSize=[32,1,1];else{let h=H6(t[1],d,t[2],r);this.workGroupSize=h.workGroupSize,this.elementsPerThread=h.elementsPerThread}this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let c=i!=null,p=l!=null;c&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=u,this.transposeA=r,this.transposeB=s,this.addBias=c,this.activation=o,this.hasPreluActivationWeights=p,this.batchAEqualOne=a,this.batchBEqualOne=n,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],d),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${s}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,a){let n=this.workGroupSize[1]*this.elementsPerThread[1],r=this.workGroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workGroupSize[0]*4:this.tileInner=r;let s=e%n===0,i=t%r===0,o=a%this.tileInner===0;return[s,i,o]}getUserCode(){return`
      ${fr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${W1(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?jh(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.isVectorA):this.isVectorA?Nre(this.workGroupSize,this.transposeA):qh(this.elementsPerThread,this.workGroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads)}
    `}};function Ere(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Oe()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Rre=class{constructor(e,t,a,n=!1,r=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize);let l=s!=null,u=o!=null;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=r,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=u,this.batchAEqualOne=t,this.batchBEqualOne=a,this.shaderKey=`matMulReduce_${this.activation}_${n}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${fr(this.activation,this.hasPreluActivationWeights)}
      ${W1(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Ere()}
    `}};function _re(e){let t=e[1],a=e[0],n=t>a?t:a;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Oe()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var $re=class{constructor(e,t,a,n=!1,r=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=a,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(a[2]/this.workGroupSize[0]),Math.ceil(a[1]/this.workGroupSize[1]),a[0]];let l=s!=null;l&&this.variableNames.push("bias");let u=o!=null;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=r,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=u,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${fr(this.activation,this.hasPreluActivationWeights)}
      ${W1(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${_re(this.workGroupSize)}
    `}},Mre=class{constructor(e,t,a,n,r=!1,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.isVec4=!1,this.splitedDimInner=128,v.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.isVec4=(r&&this.outputShape[1]%4===0||!r&&t%4===0)&&this.outputShape[2]%4===0,this.elementsPerThread=[4,4,this.splitedDimInner],this.isVec4||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Ee(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=s,this.batchAEqualOne=a,this.batchBEqualOne=n,this.shaderKey=`matMulSplitK_${r}_${s}_${a}_${n}_${this.elementsPerThread}_${this.isVec4}`}getUserCode(){let e=a=>`
      for (var i = 0; i < ${a}; i = i + 1)
      {
        var oldValue = atomicLoad(&(result[flatIndex + i]));
        var exchanged = false;
        for (; !exchanged;) {
          let newValueF32 = bitcast<f32>(oldValue) + ${a>1?"value[i]":"value"};
          let newValue = bitcast<i32>(newValueF32);
          let res = atomicCompareExchangeWeak(&(result[flatIndex + i]), oldValue, newValue);
          oldValue = res.old_value;
          exchanged = res.exchanged;
        }
      }
      `,t=this.isVec4?4:1;return`
      ${Z6(this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, colIn : i32, value : ${St(t)}) {
        let col = colIn * ${t};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e(t)}
        }
      }
      ${this.isVec4?jh(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner):qh(this.elementsPerThread,this.workGroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},Fre=class{constructor(e,t=null,a=null,n=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=n!=null,this.activation=a,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${a}`}getUserCode(){return`
    ${fr(this.activation,this.hasPreluActivationWeights)}
    ${Oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${lo(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},Ore=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Oe("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function uo(e){let{backend:t,attrs:a}=e,{shape:n,value:r}=a,{dtype:s}=a;if(s=s||v.inferDtype(r),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(r),t.makeTensorInfo(n,s,i)}else{let i=new Ore(n),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],s,o)}}var Pre={kernelName:gl,backendName:"webgpu",kernelFunc:uo};function Ce(e){let{inputs:t,attrs:a}=e,{x:n}=t,{shape:r}=a,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(r,s),o=v.sizeFromShape(i);return v.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var Dre={kernelName:Nl,backendName:"webgpu",kernelFunc:Ce};function B1({a:e,b:t,transposeA:a,transposeB:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,c=a?e.shape[u-2]:e.shape[u-1],p=n?t.shape[d-1]:t.shape[d-2],h=a?e.shape[u-1]:e.shape[u-2],f=n?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=v.sizeFromShape(m),y=v.sizeFromShape(g),x=ro.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${n} must match.`);let b=a?[A,c,h]:[A,h,c],w=n?[y,f,p]:[y,p,f],S=Ce({inputs:{x:e},backend:r,attrs:{shape:b}}),N=Ce({inputs:{x:t},backend:r,attrs:{shape:w}}),C=[S,N],M=Math.max(A,y),$=A===1,E=y===1,I=[S,N],R=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[c]}],P,D,W=[M,h,f],V=B().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(V<0&&(h*f<=128?V=bn.MatMulReduceProgram:M===1&&h<=128&&f<=48&&p>=2e3?V=bn.MatMulSplitKProgram:h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||c>=2*h)?V=bn.MatMulSmallOutputSizeProgram:V=bn.MatMulPackedProgram),V){case bn.MatMulReduceProgram:P=new Rre(W,$,E,a,n,s,l,i);break;case bn.MatMulSplitKProgram:{if(D=uo({backend:r,attrs:{shape:W,value:0,dtype:e.dtype}}),P=new Mre(W,p,$,E,a,n),s||l){D=r.runWebGPUProgram(P,I,e.dtype,R,D);let H=new Fre(D.shape,s,l,i),Z=null,Q=[D];s&&Q.push(s),i&&Q.push(i),l==="leakyrelu"&&(Z=[{type:"float32",data:[o]}],H.uniforms+=" alpha : f32,");let Y=r.runWebGPUProgram(H,Q,D.dtype,Z);C.push(D);let ee=Ce({inputs:{x:Y},backend:r,attrs:{shape:x}});C.push(Y);for(let ne of C)r.disposeData(ne.dataId);return ee}break}case bn.MatMulSmallOutputSizeProgram:P=new $re(b,w,W,a,n,s,l,i);break;case bn.MatMulPackedProgram:let U=r.adapterInfo.isIntel();P=new Cre(b,W,$,E,a,n,s,l,i,U);break;default:throw new Error(`Unsupported MatMulProgramType ${V}.`)}s&&I.push(s),i&&I.push(i),l==="leakyrelu"&&(R.push({type:"float32",data:[o]}),P.uniforms+=" alpha : f32,"),D=r.runWebGPUProgram(P,I,e.dtype,R,D);let G=Ce({inputs:{x:D},backend:r,attrs:{shape:x}});C.push(D);for(let U of C)r.disposeData(U.dataId);return G}function zre(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=n;return B1({a:r,b:s,transposeA:l,transposeB:u,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:c,activation:d})}var Lre={kernelName:Lr,backendName:"webgpu",kernelFunc:zre},Fy=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${L1(this.op,!1)}
      }

      ${Oe("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},v2=class{constructor(e,t,a){this.size=!0,this.variableNames=["A","B"],this.outputShape=T.assertAndGetBroadcastShape(t,a),this.dispatchLayout=je(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&a.length>1&&t[0]<128,this.useSharedMemoryWithB=a.length<=1&&t.length>1&&a[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?a[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.workPerThread=1):(v.arraysEqual(t,a)&&v.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e,t=this.isVec4?"vec4<f32>":"f32",a=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${L1(this.op,this.isVec4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;e=`
        ${a}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Oe("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${r}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${a}
       ${Oe("index")} {
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};function tn(e){let{inputs:t}=e,{x:a}=t;return e.backend.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var Wre={kernelName:Ei,backendName:"webgpu",kernelFunc:tn};function Ql(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.makeTensorInfo(n.shape,"complex64"),i=a.tensorMap.get(s.dataId),o=tn({inputs:{x:n},backend:a}),l=tn({inputs:{x:r},backend:a});return i.complexTensorInfos={real:o,imag:l},s}var Bre={kernelName:gd,backendName:"webgpu",kernelFunc:Ql},np=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let a=128;this.workGroupSize=[a,1,1],this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Fs(this.op,!1)}
      }
      ${Oe("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Lt({opType:e,cpuKernelImpl:t,dtype:a}){return({inputs:n,backend:r})=>{let{x:s}=n,i=r,o=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&t!=null){let u=i.tensorMap.get(s.dataId),d=t(u.values,o);return i.makeTensorInfo(s.shape,o,d)}let l=new np(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function ra({opType:e,cpuKernelImpl:t,supportsComplex:a=!1,dtype:n}){return({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(a&&i.dtype==="complex64"){let c=l.tensorMap.get(i.dataId),p=l.tensorMap.get(o.dataId),h,f;if(e!==Fe.MUL)[h,f]=[[c.complexTensorInfos.real,p.complexTensorInfos.real],[c.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(g=>{let[A,y]=g,x={dataId:A.dataId,dtype:A.dtype,shape:i.shape},b={dataId:y.dataId,dtype:y.dtype,shape:o.shape},w=new v2(e,i.shape,o.shape);return l.runWebGPUProgram(w,[x,b],Yt(A.dtype,y.dtype))});else{let g=new Fy(Fe.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),A=new Fy(Fe.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),y=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}];h=l.runWebGPUProgram(g,y,"float32"),f=l.runWebGPUProgram(A,y,"float32")}let m=Ql({inputs:{real:h,imag:f},backend:l});return l.disposeData(h.dataId),l.disposeData(f.dataId),m}let u=n||Yt(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||l.shouldExecuteOnCPU([i,o]))&&t!=null){let c=l.tensorMap.get(i.dataId).values,p=l.tensorMap.get(o.dataId).values,h=i.dtype==="string"?T.fromUint8ToStringArray(c):c,f=i.dtype==="string"?T.fromUint8ToStringArray(p):p,[m,g]=t(i.shape,o.shape,h,f,u);return l.makeTensorInfo(g,u,m)}let d=new v2(e,i.shape,o.shape);return l.runWebGPUProgram(d,[i,o],u)}}var Y6={};Le(Y6,{addImpl:()=>Q6,bincountImpl:()=>Hre,bincountReduceImpl:()=>jre,castImpl:()=>J6,ceilImpl:()=>t4,concatImpl:()=>qre,equalImpl:()=>a4,expImpl:()=>n4,expm1Impl:()=>r4,floorImpl:()=>s4,gatherNdImpl:()=>Xre,gatherV2Impl:()=>Kre,greaterEqualImpl:()=>o4,greaterImpl:()=>i4,lessEqualImpl:()=>u4,lessImpl:()=>l4,linSpaceImpl:()=>Zre,logImpl:()=>d4,maxImpl:()=>Yre,maximumImpl:()=>p4,minimumImpl:()=>c4,multiplyImpl:()=>H1,negImpl:()=>Qre,notEqualImpl:()=>h4,prodImpl:()=>tse,raggedGatherImpl:()=>lse,raggedTensorToTensorImpl:()=>use,rangeImpl:()=>dse,rsqrtImpl:()=>f4,scatterImpl:()=>pse,sigmoidImpl:()=>cse,simpleAbsImpl:()=>Vre,sliceImpl:()=>hse,sparseFillEmptyRowsImpl:()=>fse,sparseReshapeImpl:()=>mse,sparseSegmentReductionImpl:()=>gse,sqrtImpl:()=>Ase,squaredDifferenceImpl:()=>m4,stridedSliceImpl:()=>yse,stringNGramsImpl:()=>bse,stringSplitImpl:()=>wse,stringToHashBucketFastImpl:()=>kse,subImpl:()=>g4,tileImpl:()=>Sse,topKImpl:()=>Tse,transposeImpl:()=>ese,uniqueImpl:()=>Nse});function V1(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function Vre(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}function an(e){return(t,a,n,r,s)=>{let i=T.assertAndGetBroadcastShape(t,a),o=i.length,l=v.computeStrides(i),u=v.sizeFromShape(i),d=v.getTypedArrayFromDType(s,u),c=t.length,p=a.length,h=v.computeStrides(t),f=v.computeStrides(a),m=T.getBroadcastDims(t,i),g=T.getBroadcastDims(a,i);if(m.length+g.length===0)for(let A=0;A<d.length;++A)d[A]=e(n[A%n.length],r[A%r.length]);else for(let A=0;A<d.length;++A){let y=v.indexToLoc(A,o,l),x=y.slice(-c);m.forEach(N=>x[N]=0);let b=v.locToIndex(x,c,h),w=y.slice(-p);g.forEach(N=>w[N]=0);let S=v.locToIndex(w,p,f);d[A]=e(n[b],r[S])}return[d,i]}}function U1(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,o=a.makeTensorInfo(n.shape,"complex64"),l=a.data.get(o.dataId);return l.complexTensorInfos={real:a.makeTensorInfo(n.shape,"float32",s),imag:a.makeTensorInfo(r.shape,"float32",i)},o}function w2(e,t,a="float32"){if(a==="complex64"){let r=w2(e,t,"float32"),s=w2(e,t,"float32");return U1({inputs:{real:r,imag:s},backend:e})}let n=v.makeZerosTypedArray(v.sizeFromShape(t),a);return e.makeTensorInfo(t,a,n)}function Oy(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Ure(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.real,s=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,s)}function J6(e,t,a,n){if(n==="int32"){let r=Int32Array.from(e);return[t,"int32",r]}if(n==="bool"){let r=v.toTypedArray([0],a),[s,i]=an((o,l)=>o!==l?1:0)(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${a} to ${n}`)}function zc(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Oy({inputs:{x:r},backend:a});let d=w2(a,r.shape,r.dtype),c=zc({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),p=U1({inputs:{real:c,imag:d},backend:a});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(c),p}if(r.dtype==="complex64"){let d=Ure({inputs:{input:r},backend:a}),c=zc({inputs:{x:d},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(d),c}if(!v.hasEncodingLoss(r.dtype,s)){let d=Oy({inputs:{x:r},backend:a});return{dataId:d.dataId,shape:d.shape,dtype:s}}let i=a.data.get(r.dataId).values,[o,l,u]=J6(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,l,u)}function xn(e,t,a,n){return a==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;V1([i,o],e);let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,c=i.dtype==="string"?T.fromUint8ToStringArray(u):u,p=i.dtype==="string"?T.fromUint8ToStringArray(d):d,h=n||i.dtype,[f,m]=t(i.shape,o.shape,c,p,h);return l.makeTensorInfo(m,h,f)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,l=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let u=zc({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),c=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,h=l.data.get(c.dataId).values,f=l.data.get(p.dataId).values,m=zc({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),A=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,x=l.data.get(A.dataId).values,b=l.data.get(y.dataId).values,[w,S,N]=a(i.shape,o.shape,h,f,x,b),C=l.makeTensorInfo(N,"float32",w),M=l.makeTensorInfo(N,"float32",S),$=U1({inputs:{real:C,imag:M},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(C),l.disposeIntermediateTensorInfo(M),$}else{let u=l.data.get(i.dataId).values,d=l.data.get(o.dataId).values,c=n||i.dtype,[p,h]=t(i.shape,o.shape,u,d,c);return l.makeTensorInfo(h,c,p)}}}function G1(e){return(t,a,n,r,s,i)=>{let o=T.assertAndGetBroadcastShape(t,a),l=v.sizeFromShape(o),u=o.length,d=v.computeStrides(o),c=v.getTypedArrayFromDType("float32",l),p=v.getTypedArrayFromDType("float32",l),h=T.getBroadcastDims(t,o),f=T.getBroadcastDims(a,o),m=T.mergeRealAndImagArrays(n,r),g=T.mergeRealAndImagArrays(s,i),A=t.length,y=v.computeStrides(t),x=a.length,b=v.computeStrides(a);if(h.length+f.length===0)for(let w=0;w<c.length;w++){let S=w%m.length,N=w%g.length,C=e(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);c[w]=C.real,p[w]=C.imag}else for(let w=0;w<c.length;w++){let S=v.indexToLoc(w,u,d),N=S.slice(-A);h.forEach(I=>N[I]=0);let C=v.locToIndex(N,A,y),M=S.slice(-x);f.forEach(I=>M[I]=0);let $=v.locToIndex(M,x,b),E=e(m[C*2],m[C*2+1],g[$*2],g[$*2+1]);c[w]=E.real,p[w]=E.imag}return[c,p,o]}}var Q6=an((e,t)=>e+t),Gre=G1((e,t,a,n)=>({real:e+a,imag:t+n})),The=xn(ur,Q6,Gre);function Hre(e,t,a,n,r){let s=v.sizeFromShape(n),i=v.makeZerosTypedArray(r,a);for(let o=0;o<e.length;o++){let l=e[o];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(s>0?i[l]+=t[o]:i[l]+=1)}return i}function jre(e,t,a,n=!1){let r=e.shape[0],s=e.shape[1],i=xe([r,a],t.dtype);for(let o=0;o<r;o++)for(let l=0;l<s;l++){let u=e.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=a||(n?i.set(1,o,u):t.size>0?i.set(i.get(o,u)+t.get(o,l),o,u):i.set(i.get(o,u)+1,o,u))}return i}function vs(e){return(t,a,n)=>{let r=v.getTypedArrayFromDType(a,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],n);return r}}function e4(e,t,a){return({inputs:n,attrs:r,backend:s})=>{let{x:i}=n;if(V1(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=v.sizeFromShape(i.shape),d=a||i.dtype,c=v.getArrayFromDType(d,u);for(let p=0;p<u;++p)c[p]=t(l[p],r);return o.makeTensorInfo(i.shape,d,c)}}function eu(e,t,a){return({inputs:n,attrs:r,backend:s})=>{let{x:i}=n;if(V1(i,e),i.dtype==="string"||a==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=a||i.dtype,d=t(l,u,r);return o.makeTensorInfo(i.shape,u,d)}}var t4=vs(e=>Math.ceil(e)),Nhe=eu(Xr,t4);function qre(e,t,a,n){let r=v.getArrayFromDType(a,v.sizeFromShape(t));if(n&&a!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=a==="string"?T.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let d=u*t[1]+s;for(let c=0;c<i.shape[1];++c)r[d+c]=o[l++]}s+=i.shape[1]})}return r}var a4=an((e,t)=>e===t?1:0),Che=xn(Zr,a4,null,"bool"),n4=vs(e=>Math.exp(e)),Ehe=eu(Yr,n4,"float32"),r4=vs(e=>Math.expm1(e)),Rhe=eu(Ii,r4),s4=vs(e=>Math.floor(e)),_he=eu(Jr,s4);function Xre(e,t,a,n,r,s,i,o,l){let u=xe([n,s],a);for(let d=0;d<n;d++){let c=[],p=0;for(let h=0;h<r;h++){let f=e[d*r+h];p+=f*i[h],c.push(f)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${c} does not index into ${o}`);for(let h=0;h<s;h++)u.values[d*s+h]=t.get(...t.indexToLoc(p*s+h))}return u}function Kre(e,t,a){let n=xe(a,e.dtype);for(let r=0;r<n.size;++r){let s=n.indexToLoc(r).slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(n.values[r]=e.values[u])}return n}var i4=an((e,t)=>e>t?1:0),$he=xn(Qr,i4,null,"bool"),o4=an((e,t)=>e>=t?1:0),Mhe=xn(es,o4,null,"bool"),l4=an((e,t)=>e<t?1:0),Fhe=xn(ts,l4,null,"bool"),u4=an((e,t)=>e<=t?1:0),Ohe=xn(as,u4,null,"bool");function Zre(e,t,a){let n=(t-e)/(a-1),r=v.makeZerosTypedArray(a,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}var d4=vs(e=>Math.log(e)),Phe=eu(ns,d4);function Yre(e,t,a,n){let r=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let l=0;l<t;++l){let u=e[i+l];(Number.isNaN(u)||u>o)&&(o=u)}r[s]=o}return r}var p4=an((e,t)=>Math.max(e,t)),Dhe=xn(rs,p4),c4=an((e,t)=>Math.min(e,t)),zhe=xn(ss,c4),H1=an((e,t)=>e*t),Jre=G1((e,t,a,n)=>({real:e*a-t*n,imag:e*n+t*a})),Lhe=xn(is,H1,Jre);function Qre(e,t,a){let n=v.createScalarValue(-1,a);return H1([],t,n,e,a)}var h4=an((e,t)=>e!==t?1:0),Whe=xn(os,h4,null,"bool");function ese(e,t,a,n,r){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),l=v.computeStrides(r),u=v.getTypedArrayFromDType(a,v.sizeFromShape(r));for(let d=0;d<i;++d){let c=v.indexToLoc(d,s,o),p=new Array(c.length);for(let f=0;f<p.length;f++)p[f]=c[n[f]];let h=v.locToIndex(p,s,l);u[h]=e[d]}return u}function tse(e,t,a,n){let[r,s]=T.computeOutAndReduceShapes(e,n),i=Yt(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(r),i),l=v.sizeFromShape(s);for(let u=0;u<o.length;++u){let d=u*l,c=1;for(let p=0;p<l;++p)c*=a[d+p];o[u]=c}return{outVals:o,outShape:r,outDtype:i}}function ase(e,t,a){e.forEach((n,r)=>{if(n<0||n>=a){let s=v.indexToLoc(r,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${a})`)}})}function nse(e,t){for(let a=0;a<e.length;++a){let n=e[a],r=a===e.length-1?t:e[a+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>r)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function rse(e,t,a,n){let r=[],s=0,i=t.length-1+a.length,o=new Array(i).fill(null).map(()=>[0]);nse(a,n);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let d=t[u+1];for(let c=1;c<l+1;++c)o[u].push(c*d)}for(let u=0;u<e.length;++u){let d=e[u],c=e[u]+1;for(let p=0;p<a.length;++p){let h=a[p],f=p+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-h[d];for(let A=d;A<c;++A)o[f].push(h[A+1]+g)}d=h[d],c=h[c]}c!==d&&(r.push([d,c]),s+=c-d)}return{outSplits:o,valueSlices:r,numValues:s}}function sse(e){let t=[];for(let a=0;a<e.length;++a){let n=e[a].length,r=v.getArrayFromDType("int32",n);t.push(r),e[a].forEach((s,i)=>r[i]=s)}return t}function Py(e,t){let a=e.slice(0,t);for(;a.length<t;)a.push(1);for(let n=t;n<e.length;n++)a[t-1]*=e[n];return a}function ise(e,t,a,n,r,s){let i=Py(t,2)[1],o=Py(s,2)[1],l=0;for(let u of a)for(let d=u[0];d<u[1];++d){for(let c=0;c<n;++c)r[l*o+c]=e[d*i+c];++l}}function ose(e,t,a,n,r){let s=t.slice();s[0]=r;let i=v.getArrayFromDType(a,v.sizeFromShape(s)),o=e.length,l=o===0?0:o/t[0];return ise(e,t,n,l,i,s),[i,s]}function lse(e,t,a,n,r,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(ase(s,i,l),n.length===0)throw new Error("params.rank must be nonzero");let u=n[0],{outSplits:d,valueSlices:c,numValues:p}=rse(s,i,e,u),h=sse(d),f=ose(a,n,r,c,p);return[h,f[0],f[1]]}var sn=T.RowPartitionType,k2=class{constructor(e,t,a,n,r,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=a,this.valuesShape=n,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=T.getRowPartitionTypesHelper(u),this.raggedRank=T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===sn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===sn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case sn.VALUE_ROWIDS:return k2.getMaxWidthValueRowID(t);case sn.ROW_SPLITS:return k2.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${sn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let a=0;for(let n=0;n<t-1;++n){let r=e[n+1]-e[n];r>a&&(a=r)}return a}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let a=0,n=e[0],r=0;for(let s=1;s<t;++s){let i=e[s];i!==n&&(n=i,r=Math.max(s-a,r),a=s)}return Math.max(t-a,r)}tensorShapeFromTensor(e,t,a=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zy(e,a)}calculateOutputSize(e){let t=this.valuesShape,a=this.defaultValueShape;T.validateDefaultValueShape(a,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=T.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,a){let n=Math.min(e,a),r=[],s=0;for(let i=0;i<n;++i,s+=t)r.push(s);for(let i=n;i<e;++i)r.push(-1);return v.assert(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,a,n){let r=e.length,s=[];for(let i=0;i<r-1;++i){let o=e[i+1]-e[i],l=Math.min(n,o),u=t[i];u===-1&&(l=0);for(let d=0;d<l;++d)s.push(u),u+=a;for(let d=0;d<o-l;++d)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,a,n){let r=e.length,s=[];if(r===0)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<r;++u){let d=e[u];if(d===o)l>=0&&(++i,i<n?l+=a:l=-1);else{if(i=0,o=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);l=t[d]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,a,n){let r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case sn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,a,n);case sn.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,a,n);default:throw new Error(`Unsupported partition type: ${sn[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case sn.FIRST_DIM_SIZE:return e[0];case sn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let s=a.length-2;s>=0;--s)a[s]=a[s+1]*t[s+1];let n=zy(t,!1),r=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(n));if(a[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,a[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,a[i],t[i]);this.setOutput(this.raggedRank,s,r,n)}return[n,r]}setOutput(e,t,a,n){if(a.length===0)return;let r=this.values,s=a,i=n.slice();i=i.slice(e+1);let o=v.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&u.length!==1){let h=this.defaultValueShape;De(()=>{let f=te(u,h);u=Gs(f,i).dataSync()})}let d=0,c=0,p=0;for(let h=0;h<=l;++h){let f=h<l?t[h]:-1;if(f===p){++p;continue}if(c<p){let m=r.subarray(d*o),g=s.subarray(c*o),A=(p-c)*o;Dy(g,m,A)}if(h>=l){let m=a.length;f=Math.floor(m/o)}if(f>p)if(this.defaultValue.length===1)s.subarray(p*o,f*o).fill(this.defaultValue[0]),p=f;else for(;f>p;){let m=s.slice(p*o);Dy(m,u,o),++p}f<0?(d=h+1,c=p):(d=h,c=p,p=c+1)}}};function Dy(e,t,a){for(let n=0;n<a;n++)e[n]=t[n]}function zy(e,t){let a=[];for(let n of e){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}a.push(n)}return a}function use(e,t,a,n,r,s,i,o,l,u){return new k2(e,t,a,n,r,s,i,o,l,u).compute()}function dse(e,t,a,n){let r=e===t,s=e<t&&a<0,i=t<e&&a>1;if(r||s||i)return v.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/a)),l=v.makeZerosTypedArray(o,n);t<e&&a===1&&(a=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+a;return l}var f4=vs(e=>1/Math.sqrt(e)),Bhe=eu(ls,f4);function pse(e,t,a,n,r,s,i,o,l,u){let d=[n/r,r],c=e.values,p=t.values;if(n===0)return xe(a,t.dtype);let h=xe(d,t.dtype);typeof l=="string"||typeof l=="number"?h.values.fill(l):typeof l=="boolean"&&h.values.fill(+l);for(let f=0;f<s;f++){let m=[],g=0;for(let A=0;A<i;A++){let y=c[f*i+A];m.push(y),g+=y*o[A]}if(g<0||g>=n/r)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let A=0;A<r;A++)u?h.values[g*r+A]+=p[f*r+A]:h.values[g*r+A]=t.rank===0?p[0]:p[f*r+A]}return h}var cse=vs(e=>1/(1+Math.exp(-e))),Vhe=e4(us,e=>1/(1+Math.exp(-e)));function hse(e,t,a,n,r){let s=gt.isSliceContinous(n,t,a),i=v.sizeFromShape(a),o=v.computeStrides(n);if(s){let c=gt.computeFlatOffset(t,o);return r==="string"?e.slice(c,c+i):e.subarray(c,c+i)}let l=r==="string"?T.fromUint8ToStringArray(e):e,u=xe(n,r,l),d=xe(a,r);for(let c=0;c<d.size;++c){let p=d.indexToLoc(c),h=p.map((f,m)=>f+t[m]);d.set(u.get(...h),...p)}return r==="string"?T.fromStringArrayToUint8(d.values):d.values}function fse(e,t,a,n,r,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),c=t[1];if(l===0){if(o!==0)throw new Error(T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(a,0),A=v.getArrayFromDType(r,0);return[g,[0,c],A,u,d]}let p=!0,h=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let A=e[g*c];if(A<0)throw new Error(T.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,A));if(A>=l)throw new Error(T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,A,l));++f[A],p=p&&A>=h,h=A}let m=!0;for(let g=0;g<l;++g){let A=f[g]===0;u[g]=A,m=m&&!A,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){let g=e,A=n;for(let y=0;y<o;++y)d[y]=y;return[g,[o,c],A,u,d]}else{let g=f[l-1],A=v.getArrayFromDType(a,g*c),y=v.getArrayFromDType(r,g),x=new Array(l).fill(0);for(let b=0;b<o;++b){let w=e[b*c],S=x[w],N=(w===0?0:f[w-1])+S;x[w]++;for(let C=0;C<c;++C)A[N*c+C]=e[b*c+C];y[N]=n[b],d[b]=N}for(let b=0;b<l;++b)if(x[b]===0){let w=b===0?0:f[b-1];A[w*c+0]=b;for(let S=1;S<c;++S)A[w*c+S]=0;y[w]=i}return[A,[g,c],y,u,d]}}function mse(e,t,a,n,r){let s=v.sizeFromShape(n),i=t[0],o=r.length,l=[],u=1,d=-1;for(let m=0;m<o;++m){let g=r[m];if(g===-1){if(d!==-1)throw new Error(T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(g<0)throw new Error(T.getSparseReshapeNegativeOutputDimErrorMessage(m,g));u*=g,l.push(g)}}if(d!==-1){if(u<=0)throw new Error(T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/u);if(u*m!==s)throw new Error(T.getSparseReshapeInputOutputMultipleErrorMessage(n,l));l[d]=m}if(v.sizeFromShape(l)!==s)throw new Error(T.getSparseReshapeInputOutputMismatchErrorMessage(n,l));let c=n.length,p=[];if(c>0){p[c-1]=1;for(let m=c-2;m>=0;--m)p[m]=p[m+1]*n[m+1]}let h=[];if(o>0){h[o-1]=1;for(let m=o-2;m>=0;--m)h[m]=h[m+1]*l[m+1]}let f=v.getArrayFromDType(a,i*o);for(let m=0;m<i;++m){let g=0;for(let A=0;A<c;++A)g+=e[m*c+A]*p[A];for(let A=0;A<o;++A)f[m*o+A]=Math.trunc(g/h[A]),g%=h[A]}return[f,[i,o],l]}function gse(e,t,a,n,r,s=!1,i=0){let o=n.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=d;let p=c.reduce((y,x)=>y*x,1),h=v.getArrayFromDType(a,p);if(o===0)return d>0&&h.fill(i),[h,c];if(d<=0)throw new Error(T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,A=r[f];for(;;){let y=0;if(m<o){if(y=r[m],A===y){++m;continue}if(A>=y)throw new Error(T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(A<0||A>=d)throw new Error(T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A,d));A>g&&h.fill(i,g*u,A*u);for(let x=f;x<m;++x){let b=n[x];if(b<0||b>=l[0])throw new Error(T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,n[x],l[0]));for(let w=0;w<u;w++)h[A*u+w]+=e[b*u+w]}if(s)for(let x=0;x<u;x++)h[A*u+x]/=m-f;if(f=m,++m,g=A+1,A=y,m>o)break}return g<d&&h.fill(i,g*u,d*u),[h,c]}var Ase=vs(e=>Math.sqrt(e)),Uhe=e4(ds,e=>Math.sqrt(e)),m4=an((e,t)=>{let a=e-t;return a*a}),Ghe=xn(ps,m4);function yse(e,t,a,n){let r=xe(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let l=0;l<o.length;l++)o[l]=i[l]*a[l]+n[l];r.set(t.get(...o),...i)}return r}var xse=class{constructor(e,t,a,n,r,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(a),this.rightPad=v.encodeString(n),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(e,t,a,n,r,s){for(let i=0;i<r;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),d=s-(l+u),c=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let g=0;g<d;++g)p+=e[c+g].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,a[n+i]=new Uint8Array(p);let h=a[n+i],f=0,m=g=>g.forEach(A=>h[f++]=A);for(let g=0;g<l;++g)m(this.leftPad),m(this.separator);for(let g=0;g<d-1;++g)m(e[c+g]),m(this.separator);if(d>0){m(e[c+d-1]);for(let g=0;g<u;++g)m(this.separator),m(this.rightPad)}else{for(let g=0;g<u-1;++g)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let a=e.length,n=t.length;if(n>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let l=1;l<n;++l){let u=t[l]>=o;if(u=u&&t[l]<=a,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${o}, ${a}]`);o=t[l]}if(o!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${o}`)}let r=n-1,s=v.getArrayFromDType("int32",n);if(a===0||n===0){let o=new Array(a);for(let l=0;l<=r;++l)s[l]=0;return[o,s]}s[0]=0;for(let o=1;o<=r;++o){let l=t[o]-t[o-1],u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&u===0&&(u=1),s[o]=s[o-1]+u}let i=new Array(s[r]);for(let o=0;o<r;++o){let l=t[o],u=s[o];if(this.nGramWidths.forEach(d=>{let c=t[o+1]-t[o],p=this.getNumNGrams(c,d);this.createNGrams(e,l,i,u,p,d),u+=p}),this.preserveShort&&u===s[o]){let d=t[o+1]-t[o];if(d===0)continue;let c=d+2*this.padWidth,p=1;this.createNGrams(e,l,i,u,p,c)}}return[i,s]}};function bse(e,t,a,n,r,s,i,o){return new xse(a,n,r,s,i,o).compute(e,t)}function vse(e,t,a,n){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)n.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!a||o.length!==0)&&n.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!a||e.length!==0)&&n.push(e);return}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(r,s);(!a||i.length!==0)&&n.push(i),r=s+1}}function wse(e,t,a){let n=e.length,r=[],s=0,i=0,o=new Array(n);for(let p=0;p<n;++p){let h=r.length;vse(e[p],t,a,r);let f=r.length-h;o[p]=f,s+=f,i=Math.max(i,f)}let l=v.getArrayFromDType("int32",s*2),u=new Array(s),d=[n,i],c=0;for(let p=0;p<n;++p)for(let h=0;h<o[p];++h)l[c*2]=p,l[c*2+1]=h,u[c]=r[c],++c;return[l,u,d]}function kse(e,t){let a=v.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)a[n]=v.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return a}var g4=an((e,t)=>e-t),Ise=G1((e,t,a,n)=>({real:e-a,imag:t-n})),Hhe=xn(cs,g4,Ise);function Sse(e,t){let a=new Array(e.rank);for(let r=0;r<a.length;r++)a[r]=e.shape[r]*t[r];let n=xe(a,e.dtype);for(let r=0;r<n.values.length;++r){let s=n.indexToLoc(r),i=new Array(e.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%e.shape[l];let o=e.locToIndex(i);n.values[r]=e.values[o]}return n}var Nu=(e,t)=>{let a=t.value-e.value;return a===0?e.index-t.index:a};function A4(e,t,a=0,n=e.length-1){for(;n>a;){if(n-a>600){let o=n-a+1,l=t-a+1,u=Math.log(o),d=.5*Math.exp(2*u/3),c=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),p=Math.max(a,Math.floor(t-l*d/o+c)),h=Math.min(n,Math.floor(t+(o-l)*d/o+c));A4(e,t,p,h)}let r=e[t],s=a,i=n;for(v.swap(e,a,t),Nu(e[n],r)>0&&v.swap(e,a,n);s<i;){for(v.swap(e,s,i),s++,i--;Nu(e[s],r)<0;)s=s+1;for(;Nu(e[i],r)>0;)i=i-1}Nu(e[a],r)===0?v.swap(e,a,i):(i=i+1,v.swap(e,i,n)),i<=t&&(a=i+1),t<=i&&(n=i-1)}}function Tse(e,t,a,n,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=v.getTypedArrayFromDType(a,i*n),u=v.getTypedArrayFromDType("int32",i*n);for(let c=0;c<i;c++){let p=c*o,h=e.subarray(p,p+o),f=new Array(h.length);h.forEach((y,x)=>f[x]={value:y,index:x}),n<f.length&&(A4(f,n),f=f.slice(0,n)),r&&f.sort(Nu);let m=c*n,g=l.subarray(m,m+n),A=u.subarray(m,m+n);for(let y=0;y<n;y++)g[y]=f[y].value,A[y]=f[y].index}let d=t.slice();return d[d.length-1]=n,[xe(d,a,l),xe(d,"int32",u)]}function Nse(e,t,a,n){let r=v.parseAxisParam(t,a)[0],s=[1,a[0],1];for(let f=0;f<r;f++)s[0]*=a[f];s[1]=a[r];for(let f=r+1;f<a.length;f++)s[2]*=a[f];let i={},o=new Int32Array(a[r]),l=new Ct(s,n,e),u=[],d=s[0]===1&&s[2]===1;for(let f=0;f<a[r];f++){let m;if(d)m=e[f].toString();else{let g=[];for(let A=0;A<s[0];A++)for(let y=0;y<s[2];y++)g.push(l.get(A,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,u.push(f)}}let c=s.slice();c[1]=Object.keys(i).length;let p=new Ct(c,n);u.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let A=0;A<s[2];A++)p.set(l.get(g,f,A),g,m,A)});let h=a.slice();return h[r]=c[1],{outputValues:p.values,outputShape:h,indices:o}}var{addImpl:Cse,castImpl:Ese,ceilImpl:Rse,concatImpl:_se,equalImpl:$se,expImpl:Mse,expm1Impl:Fse,floorImpl:Ose,gatherNdImpl:Pse,gatherV2Impl:Dse,greaterEqualImpl:zse,greaterImpl:Lse,lessEqualImpl:Wse,lessImpl:Bse,logImpl:Vse,maxImpl:Use,maximumImpl:Gse,minimumImpl:Hse,multiplyImpl:jse,negImpl:qse,notEqualImpl:Xse,prodImpl:Kse,rangeImpl:Zse,rsqrtImpl:Yse,scatterImpl:Jse,simpleAbsImpl:Qse,sliceImpl:eie,stridedSliceImpl:tie,stringNGramsImpl:aie,subImpl:nie,tileImpl:rie,topKImpl:sie,transposeImpl:iie,uniqueImpl:jhe}=Y6,oie=Lt({opType:ve.ABS,cpuKernelImpl:Qse}),lie={kernelName:ul,backendName:"webgpu",kernelFunc:oie},uie=ra({opType:Fe.ADD,cpuKernelImpl:Cse,supportsComplex:!0}),die={kernelName:ur,backendName:"webgpu",kernelFunc:uie},pie=class{constructor(e){this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});let t=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${Oe("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function cie(e){let{inputs:t,backend:a}=e,n=t;if(n.length===1)return tn({inputs:{x:n[0]},backend:a});let r=n.map(o=>o.dtype).reduce((o,l)=>Yt(o,l)),s=n.map(o=>o.shape),i=new pie(s);return a.runWebGPUProgram(i,n,r)}var hie={kernelName:li,backendName:"webgpu",kernelFunc:cie},y4=class{constructor(e,t,a){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[t];this.op=a==="min"?"<":">";let[r,s]=T.computeOutAndReduceShapes(e,n);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=je(this.outputShape),v.sizeFromShape(s)<32||v.sizeFromShape(r)>1e3?(this.type="plain",this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize)):(this.type="shared",this.dispatch=Ee(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${rr(this.inputShape.length-1)}`,t=()=>{let a="";if(this.outputShape.length===1)this.inputShape.length!==1&&(a+="outputCoords,");else for(let n=0;n<this.outputShape.length;n++)a+=`outputCoords.${rr(n)},`;return a};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `}

      ${Oe("index")} {
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${t()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${t()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${t()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}},fie=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];this.outputShape=a,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${rd()}
      fn _start(@builtin(local_invocation_id) localId : vec3<u32>,
                @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},mie=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];this.outputShape=a,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Zt(this.outputShape.length),t=gie(this.newDim);return`
      ${Oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function gie(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=new Array(t);for(let n=0;n<e.length;n++)a[e[n]]=`resRC.${rr(n)}`;return a.join()}function or(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{perm:s}=n,i=a,o=r.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=r.shape[s[d]];if(a.shouldExecuteOnCPU([r])){let d=i.tensorMap.get(r.dataId).values,c=iie(d,r.shape,r.dtype,s,l);return a.makeTensorInfo(l,r.dtype,c)}if(r.shape.length===2&&v.arraysEqual(s,[1,0])){let d=new fie(r.shape,s);return i.runWebGPUProgram(d,[r],r.dtype)}let u=new mie(r.shape,s);return i.runWebGPUProgram(u,[r],r.dtype)}var Aie={kernelName:nr,backendName:"webgpu",kernelFunc:or};function yie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=or({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new y4(l.shape,i[0],"max"),c=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=a.runWebGPUProgram(d,[l],"int32",c);return u.forEach(h=>a.disposeData(h.dataId)),p}var xie={kernelName:ui,backendName:"webgpu",kernelFunc:yie};function bie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=T.getAxesPermutation(i,r.shape.length),l=r,u=[];o!=null&&(l=or({inputs:{x:r},backend:a,attrs:{perm:o}}),u.push(l),i=T.getInnerMostAxes(i.length,l.shape.length)),T.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new y4(l.shape,i[0],"min"),c=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=a.runWebGPUProgram(d,[l],"int32",c);return u.forEach(h=>a.disposeData(h.dataId)),p}var vie={kernelName:pd,backendName:"webgpu",kernelFunc:bie},wie=ra({opType:Fe.ATAN2}),kie={kernelName:cl,backendName:"webgpu",kernelFunc:wie},Ly=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},Iie=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}},Sie=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=T.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=a.length===0?[1]:a,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let a=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Oe("index")} {
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${a}
        }
       }
     `}};function rp(e,t,a,n,r){let s=e.shape.length,i=[],o=v.parseAxisParam(t,e.shape),l=o,u=T.getAxesPermutation(l,s),d=e;u!=null&&(d=or({inputs:{x:e},attrs:{perm:u},backend:r}),l=T.getInnerMostAxes(l.length,s),i.push(d)),T.assertAxesAreInnerMostDims(n,l,s);let[c,p]=T.computeOutAndReduceShapes(d.shape,l),h=c;a&&(h=T.expandShapeToKeepDim(c,o));let f;if((n==="max"||n==="prod")&&r.shouldExecuteOnCPU([d])){let m=r.tensorMap.get(d.dataId).values;switch(n){case"max":let g=Use(m,v.sizeFromShape(p),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:A,outShape:y,outDtype:x}=Kse(d.shape,d.dtype,m,l);f=r.makeTensorInfo(y,x,A);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(p),g=v.sizeFromShape(d.shape)/m,A={windowSize:m,inSize:m,batchSize:g,outSize:1},y=n==="mean"?"float32":Dd(e.dtype),x=[{type:"int32",data:[m]}],b=new Sie(A,n),w=r.runWebGPUProgram(b,[d],y,x);i.push(w),f=Ce({inputs:{x:w},attrs:{shape:h},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function j1(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n;return rp(r,s,i,"max",a)}var Tie={kernelName:Mi,backendName:"webgpu",kernelFunc:j1};function x4(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{keepDims:s,axis:i}=n;return rp(r,i,s,"mean",a)}var Nie={kernelName:Oi,backendName:"webgpu",kernelFunc:x4};function b4(e,t,a,n){if(t.filterWidth===1&&t.filterHeight===1&&v.arraysEqual(t.inShape,t.outShape))return tn({inputs:{x:e},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let i=e.shape.length,o=Ce({inputs:{x:e},backend:n,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}}),l;a==="avg"?l=x4({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}}):(v.assert(a==="max",()=>`Invalid pool type ${a}`),l=j1({inputs:{x:o},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let u=Ce({inputs:{x:l},backend:n,attrs:{shape:t.outShape}});return n.disposeData(o.dataId),n.disposeData(l.dataId),u}let r,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?r=new Iie(t):(a==="avg"?r=new Ly(t,"avg"):(v.assert(a==="max",()=>`Invalid pool type ${a}`),r=new Ly(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(r,[e],e.dtype,s)}function Cie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1,d=T.computePool2DInfo(r.shape,s,i,u,o,l);return b4(r,d,"avg",a)}var Eie={kernelName:di,backendName:"webgpu",kernelFunc:Cie};function Rie(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;return B1({a:r,b:s,transposeA:i,transposeB:o,backend:a})}var _ie={kernelName:pi,backendName:"webgpu",kernelFunc:Rie},$ie=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Zt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Zt(this.rank),t=Mie(this.rank),a;return this.start.length===1?a=this.outputShape.map((n,r)=>"sourceLoc = uniforms.start + coords;"):a=this.outputShape.map((n,r)=>`sourceLoc.${I2[r]} = uniforms.start.${rr(r)} + coords.${I2[r]};`),`
      ${Oe("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${a.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},I2=["x","y","z","w","u","v"];function Mie(e){if(e===1)return"sourceLoc";if(e<=6)return I2.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function tu(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n,[o,l]=gt.parseSliceParams(r,s,i);if(gt.assertParamsValid(r,o,l),a.shouldExecuteOnCPU([r])||r.dtype==="string"){let c=a.tensorMap.get(r.dataId),p=eie(c.values,o,l,r.shape,r.dtype);return a.makeTensorInfo(l,r.dtype,p)}if(v.sizeFromShape(l)===0)return a.makeTensorInfo(l,r.dtype,[]);let u=new $ie(o,l),d=[{type:"int32",data:o}];return a.runWebGPUProgram(u,[r],r.dtype,d)}var Fie={kernelName:_l,backendName:"webgpu",kernelFunc:tu},Oie=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((y,x)=>y*x),l=T.getReshaped(r.shape,s,o),u=T.getPermuted(l.length,s.length),d=T.getReshapedPermuted(r.shape,s,o),c=T.getSliceBeginCoords(i,s.length),p=T.getSliceSize(d,i,s.length),h=[],f=Ce({inputs:{x:r},backend:a,attrs:{shape:l}}),m=or({inputs:{x:f},backend:a,attrs:{perm:u}}),g=Ce({inputs:{x:m},backend:a,attrs:{shape:d}}),A=tu({inputs:{x:g},backend:a,attrs:{begin:c,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>a.disposeData(y.dataId)),A},Pie={kernelName:hl,backendName:"webgpu",kernelFunc:Oie},v4=ra({opType:Fe.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Xse}),Die={kernelName:os,backendName:"webgpu",kernelFunc:v4};function sp(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.tensorMap.get(n.dataId);return tn({inputs:{x:r.complexTensorInfos.real},backend:a})}var zie={kernelName:Id,backendName:"webgpu",kernelFunc:sp};function Lie(e,t){let a=new np(e.shape,ve.TO_INT),n=t.runWebGPUProgram(a,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function S2(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return tn({inputs:{x:r},backend:a});let i=Nn(r.shape),o=S2({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),l=Ql({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeData(o.dataId),l}if(r.dtype==="complex64"){let i=sp({inputs:{input:r},backend:a}),o=S2({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeData(i.dataId),o}if(!v.hasEncodingLoss(r.dtype,s)){let i=tn({inputs:{x:r},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(a.shouldExecuteOnCPU([r])){let i=a.tensorMap.get(r.dataId).values,[o,l,u]=Ese(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,l,u)}if(s==="int32")return Lie(r,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=v4({inputs:{a:r,b:i},backend:a});return a.disposeData(i.dataId),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var Wie={kernelName:ci,backendName:"webgpu",kernelFunc:S2},Bie=Lt({opType:ve.CEIL,cpuKernelImpl:Rse}),Vie={kernelName:Xr,backendName:"webgpu",kernelFunc:Bie},Uie=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Gie=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Hie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o,l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return v.sizeFromShape(r.shape)%4===0?o=new Uie(r.shape):o=new Gie(r.shape),a.runWebGPUProgram(o,[r],r.dtype,l)}var jie={kernelName:Kr,backendName:"webgpu",kernelFunc:Hie},qie=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=T.computeOutShape(e,1),this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let n=1;n<this.offsetLength;n++)e.push(`else if (yC < uniforms.offset${[n]}){ setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${n-1})); }`);let t=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Xh(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.tensorMap.get(n.dataId);return tn({inputs:{x:r.complexTensorInfos.imag},backend:a})}var Xie={kernelName:xd,backendName:"webgpu",kernelFunc:Xh};function Cu(e,t,a){let n=e[0].dtype;if(n==="complex64"){let f=e.map(x=>sp({inputs:{input:x},backend:a})),m=e.map(x=>Xh({inputs:{input:x},backend:a})),g=Cu(f,t,a),A=Cu(m,t,a),y=Ql({inputs:{real:g,imag:A},backend:a});return f.forEach(x=>a.disposeData(x.dataId)),m.forEach(x=>a.disposeData(x.dataId)),a.disposeData(g.dataId),a.disposeData(A.dataId),y}let r=a.shouldExecuteOnCPU(e);if(n==="string"&&(r=!0),r){let f=e.map(w=>{let S=v.sizeFromShape(w.shape.slice(t));return Ce({inputs:{x:w},backend:a,attrs:{shape:[-1,S]}})}),m=f.map(w=>({vals:a.readSync(w.dataId),shape:w.shape})),g=T.computeOutShape(f.map(w=>w.shape),1),A=f[0].shape[0]===1,y=_se(m,g,n,A),x=T.computeOutShape(e.map(w=>w.shape),t),b=a.makeTensorInfo(x,n,y);return f.forEach(w=>a.disposeData(w.dataId)),b}let s=a.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>s){let f=[];for(let g=0;g<e.length;g+=s){let A=e.slice(g,g+s);f.push(Cu(A,t,a))}let m=Cu(f,t,a);for(let g of f)a.disposeData(g.dataId);return m}let{tensors2D:i,outShape:o}=Kie(e,t,a),l=i.map(f=>f.shape),u=new qie(l),d=[],c=new Array(l.length-1);if(c.length>0){c[0]=l[0][1],d.push({type:"int32",data:[c[0]]});for(let f=1;f<c.length;f++)c[f]=c[f-1]+l[f][1],d.push({type:"int32",data:[c[f]]})}let p=a.runWebGPUProgram(u,i,i[0].dtype,d);i.forEach(f=>a.disposeData(f.dataId));let h=Ce({inputs:{x:p},backend:a,attrs:{shape:o}});return a.disposeData(p.dataId),h}function Kie(e,t,a){let n=T.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>Ce({inputs:{x:r},backend:a,attrs:{shape:[v.sizeFromShape(r.shape.slice(0,t)),v.sizeFromShape(r.shape.slice(t))]}})),outShape:n}}function w4(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(u=>u.shape);T.assertParamsConsistent(i,s);let o=T.computeOutShape(t.map(u=>u.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(u=>v.sizeFromShape(u.shape)>0);return l.length===1?tn({inputs:{x:l[0]},backend:a}):Cu(l,s,a)}var Zie={kernelName:fl,backendName:"webgpu",kernelFunc:w4};function Yie(e,t,a,n,r=!1,s=null,i=!1,o=4,l=4,u=4){let d=C=>{switch(C){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${C} is not supported.`)}},c=C=>{switch(C){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${C} is not supported.`)}},p=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",A=e?"col":"row",y=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${A} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${A} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${A} % inChannels;
      var resData = ${St(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${p}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${d(o)}
      }
      return resData;`,x=e?t&&n?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${y}
      }
      return ${St(o)}(0.0);`:n&&a?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${y}
      }
      return ${St(o)}(0.0);`,b=`${c(l)}`,w=St(u),S=St(e?o:l),N=St(e?l:o);return`
      ${fr(s,i,u===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${S} {
        ${e?x:b}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${N} {
        ${e?b:x}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {
        let col = colIn * ${u};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${lo(r,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Jie=class{constructor(e,t,a,n,r=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=P1(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=D1(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),r&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=r,this.activation=s,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=a%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?jh(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner):qh(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Yie(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}},Qie=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pad: vec2<i32>, stride: vec2<i32>, dilation: vec2<i32>,",this.workGroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t,this.activation=a,this.hasPreluActivationWeights=n,t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${fr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${lo(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${Oe("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];
             let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};function Wy(e,t){let a=e.length;return a>=3?t?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!t&&a===1&&e[0]>1?[e[0],1]:null}function eoe({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=a.dataFormat==="channelsLast",u=!l,d=!1,c=l&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",p=[],h,f;if(c){let A=a.inHeight*a.inWidth*a.inChannels;h=Ce({inputs:{x:e},backend:n,attrs:{shape:[1,a.batchSize,A]}}),f=Ce({inputs:{x:t},backend:n,attrs:{shape:[1,A,a.outChannels]}})}else h=Ce({inputs:{x:e},backend:n,attrs:{shape:l?[a.batchSize,a.inHeight*a.inWidth,a.inChannels]:[a.batchSize,a.inChannels,a.inHeight*a.inWidth]}}),f=Ce({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}});if(p.push(h),p.push(f),s!=null){let A=Wy(s.shape,l);A!=null&&(s=Ce({inputs:{x:s},backend:n,attrs:{shape:A}}),p.push(s))}if(r!=null){let A=Wy(r.shape,l);A!=null&&(r=Ce({inputs:{x:r},backend:n,attrs:{shape:A}}),p.push(r))}let m=B1({a:l?h:f,b:l?f:h,transposeA:u,transposeB:d,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=Ce({inputs:{x:m},backend:n,attrs:{shape:a.outShape}});p.push(m);for(let A of p)n.disposeData(A.dataId);return g}function k4({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l=r!=null,u=s!=null,d=a.dataFormat==="channelsLast",c=d&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",p=B().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(c||a.filterHeight===1&&a.filterWidth===1&&a.dilationHeight===1&&a.dilationWidth===1&&a.strideHeight===1&&a.strideWidth===1&&(a.padInfo.type==="SAME"||a.padInfo.type==="VALID")))return eoe({x:e,filter:t,convInfo:a,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});let h,f=[a.padInfo.top,a.padInfo.left],m=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(p)h=new Qie(a,l,o,u);else{let x=d?a.outHeight*a.outWidth:a.outChannels,b=d?a.outChannels:a.outHeight*a.outWidth,w=a.filterHeight*a.filterWidth*a.inChannels;m.push({type:"int32",data:[x]},{type:"int32",data:[b]},{type:"int32",data:[w]});let S=n.adapterInfo.isIntel();h=new Jie(a,x,b,w,l,o,u,S)}let g=[],A=[e,t];l&&(!d&&r.shape.length===1&&(r=Ce({inputs:{x:r},backend:n,attrs:{shape:[r.shape[0],1,1]}}),g.push(r)),A.push(r)),u&&(!d&&s.shape.length===1&&(s=Ce({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),g.push(s)),A.push(s)),o==="leakyrelu"&&(m.push({type:"float32",data:[i]}),h.uniforms+=" alpha : f32,");let y=n.runWebGPUProgram(h,A,e.dtype,m);for(let x of g)n.disposeData(x.dataId);return y}function toe(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a,c=T.convertConv2DDataFormat(l),p=T.computeConv2DInfo(r.shape,s.shape,i,u,o,d,!1,c);return k4({x:r,filter:s,convInfo:p,backend:n})}var aoe={kernelName:hi,backendName:"webgpu",kernelFunc:toe};function noe(e=4){let t=n=>{switch(n){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${n} is not supported.`)}},a=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${St(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${St(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${St(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${St(e)} {
    let col = colIn * ${e};
    ${a}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${St(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${St(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${St(e)}) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var roe=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=P1(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=D1(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4&&(this.variableTypes=["vec4<f32>","f32"]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?jh(this.elementsPerThread,this.workGroupSize):qh(this.elementsPerThread,this.workGroupSize);return`
    ${noe(this.isVec4?4:1)}
    ${e}
    `}},soe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?3:1;return`
    ${Oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${a}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function ioe(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=n,c=T.convertConv2DDataFormat(u),p=T.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}],f;if(B().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||p.filterHeight<=2&&p.filterWidth<=2&&p.outChannels<=16&&p.inChannels===1)f=new soe(p);else{f=new roe(p);let m=p.inHeight*p.inWidth,g=p.inChannels,A=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[A]})}return a.runWebGPUProgram(f,[r,s],"float32",h)}var ooe={kernelName:fi,backendName:"webgpu",kernelFunc:ioe},loe=Lt({opType:ve.COS}),uoe={kernelName:mi,backendName:"webgpu",kernelFunc:loe},doe=Lt({opType:ve.COSH}),poe={kernelName:gi,backendName:"webgpu",kernelFunc:doe},coe=class{constructor(e,t,a,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,a[0],a[1],e],this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[a,n,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${Oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${a});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},hoe=e=>{let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,d=new coe(r.shape[3],s.shape,o,l),c=[{type:"float32",data:[u]}];return a.runWebGPUProgram(d,[r,s,i],"float32",c)},foe={kernelName:xi,backendName:"webgpu",kernelFunc:hoe},sd;(function(e){e.Prod="*",e.Sum="+"})(sd||(sd={}));var By=class{constructor(e,t,a,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=a,this.reverse=n,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===sd.Prod?"1.0":"0.0",a=this.exclusive?t:`getX(${Vy(e,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],r="",s="";return this.exclusive?(r=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${Oe("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Uy(e,"coords",this.op)};
         var val = ${a};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${s};
           ${Uy(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${Vy(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function Vy(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function Uy(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function I4(e,t,a,n,r,s){let i=t.shape.length,o=T.getAxesPermutation([n],i),l=t;o!=null&&(l=or({inputs:{x:t},backend:a,attrs:{perm:o}}));let u=T.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let d=l.shape[u],c=tn({inputs:{x:l},backend:a});for(let p=0;p<=Math.ceil(Math.log2(d))-1;p++){let h=new By(e,l.shape,!1,s),f=c,m=[{type:"float32",data:[p]}];c=a.runWebGPUProgram(h,[c],c.dtype,m),a.disposeData(f.dataId)}if(r){let p=new By(e,l.shape,r,s),h=c,f=[{type:"float32",data:[0]}];c=a.runWebGPUProgram(p,[c],c.dtype,f),a.disposeData(h.dataId)}if(o!=null){let p=T.getUndoAxesPermutation(o),h=or({inputs:{x:c},backend:a,attrs:{perm:p}});return a.disposeData(c.dataId),a.disposeData(l.dataId),h}return c}function moe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return I4(sd.Prod,r,a,s,i,o)}var goe={kernelName:Ai,backendName:"webgpu",kernelFunc:moe};function Aoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return I4(sd.Sum,r,a,s,i,o)}var yoe={kernelName:yi,backendName:"webgpu",kernelFunc:Aoe},xoe=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function boe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n,o=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],u=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],c=l*s,p=u*s,h=d/(s*s),f=i==="NHWC"?[o,c,p,h]:[o,h,c,p],m=[{type:"int32",data:[s]}],g=new xoe(f,i);return a.runWebGPUProgram(g,[r],r.dtype,m)}var voe={kernelName:bi,backendName:"webgpu",kernelFunc:boe},woe=class{constructor(e,t,a,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.filterHeight=t,this.filterWidth=a,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],a=this.workGroupSize[1]+this.filterHeight-1,n=this.workGroupSize[0]+this.filterWidth-1;return`
      ${fr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${a}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${rd()}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${lo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},S4=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.workPerThread=4,this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,this.workPerThread,1]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${a}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth;return`
      ${fr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      const strideHeight = ${this.convInfo.strideHeight};
      const strideWidth = ${this.convInfo.strideWidth};
      ${rd()}
      fn _start(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * ${this.workPerThread};
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(strideHeight, strideWidth) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * strideWidth + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${lo(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},T4=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${fr(this.activation,this.hasPreluActivation,!1,4)}

      ${Oe()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${lo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function koe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,c=T.convertConv2DDataFormat(l),p=u;p==null&&(p=[1,1]);let h=T.computeConv2DInfo(r.shape,s.shape,i,p,o,d,!0,c),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m=h.dataFormat==="channelsLast",g;return!m&&h.inHeight>16&&h.inWidth>16&&h.strideHeight===1&&h.strideWidth===1&&h.dilationWidth===1&&h.dilationHeight===1&&h.inChannels===h.outChannels?g=new woe(h.outShape,h.filterHeight,h.filterWidth):m&&h.inHeight>4&&h.inWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?g=new S4(h):(g=new T4(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),a.runWebGPUProgram(g,[r,s],r.dtype,f)}var Ioe={kernelName:vi,backendName:"webgpu",kernelFunc:koe},N4=ra({opType:Fe.MUL,cpuKernelImpl:jse,supportsComplex:!0}),Soe={kernelName:is,backendName:"webgpu",kernelFunc:N4};function q1(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return rp(r,s,i,"sum",a)}var Toe={kernelName:Zi,backendName:"webgpu",kernelFunc:q1};function Noe(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:l}=T.decodeEinsumEquation(r,s.length);T.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=T.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let m=0;m<c;++m){for(let g of d[m]){let{permutationIndices:A,expandDims:y}=T.getEinsumPermutation(h,l[g]),x;T.isIdentityPermutation(A)?x=s[g]:(x=or({inputs:{x:s[g]},backend:a,attrs:{perm:A}}),f.push(x));let b=x.shape.slice();for(let w=0;w<y.length;++w)b.splice(y[w],0,1);v.arraysEqual(x.shape,b)||(x=Ce({inputs:{x},backend:a,attrs:{shape:b}}),f.push(x)),p===null?p=x:(p=N4({inputs:{a:x,b:p},backend:a}),f.push(p))}m<c-1&&(u[m]>=0&&(p=q1({inputs:{x:p},backend:a,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let m of f)m!==p&&a.disposeData(m.dataId);return p}var Coe={kernelName:Ad,backendName:"webgpu",kernelFunc:Noe},Eoe=Lt({opType:ve.ELU}),Roe={kernelName:ki,backendName:"webgpu",kernelFunc:Eoe},_oe=ra({opType:Fe.EQUAL,dtype:"bool",cpuKernelImpl:$se}),$oe={kernelName:Zr,backendName:"webgpu",kernelFunc:_oe},C4=Lt({opType:ve.EXP,cpuKernelImpl:Mse,dtype:"float32"}),Moe={kernelName:Yr,backendName:"webgpu",kernelFunc:C4};function T2(e){let{inputs:t,attrs:a,backend:n}=e,{dim:r}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(v.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),o.splice(l,0,1),Ce({inputs:{x:s},backend:n,attrs:{shape:o}})}var Foe={kernelName:ml,backendName:"webgpu",kernelFunc:T2},Ooe=Lt({opType:ve.EXPM1,cpuKernelImpl:Fse}),Poe={kernelName:Ii,backendName:"webgpu",kernelFunc:Ooe},Doe=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},zoe={kernelName:Si,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,n=t,r=new Doe(a.shape);return n.runWebGPUProgram(r,[a],a.dtype)}},Loe=Lt({opType:ve.FLOOR,cpuKernelImpl:Ose}),Woe={kernelName:Jr,backendName:"webgpu",kernelFunc:Loe},Boe=ra({opType:Fe.INT_DIV,dtype:"int32"}),Voe={kernelName:Ti,backendName:"webgpu",kernelFunc:Boe},Uoe=class{constructor(e,t,a=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=a,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Oe("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},Goe={kernelName:Vu,backendName:"webgpu",kernelFunc:Hoe},No,Kf=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),Up=new Map;function Hoe(e){let{inputs:t,backend:a,attrs:n}=e,{pixels:r}=t,{numChannels:s}=n;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[d,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[c,d,s],h=!1,f=i||o;if(u||l||f){let y;if(h){let $=r;if(!Up.has($)||Up.get($).expired){let E={source:$};Up.set($,a.device.importExternalTexture(E))}y={width:d,height:c,format:null,usage:null,texture:Up.get($)}}else{if(f){let R=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(No==null||R!==Kf)&&(Kf=R,No=document.createElement("canvas").getContext("2d",{willReadFrequently:Kf})),No.canvas.width=d,No.canvas.height=c,No.drawImage(r,0,0,d,c),r=No.canvas}let $=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,E="rgba8unorm",I=a.textureManager.acquireTexture(p[1],p[0],E,$);a.queue.copyExternalImageToTexture({source:r},{texture:I},[p[1],p[0]]),y={width:d,height:c,format:E,usage:$,texture:I}}let x=v.sizeFromShape(p),b=v.computeStrides(p),w=new Uoe(p,s,h),S=[{type:"uint32",data:[x]},{type:"uint32",data:[s]},{type:"uint32",data:[...b]}],N=a.makeTensorInfo([c,d],"int32"),C=a.tensorMap.get(N.dataId);C.resourceInfo=y;let M=a.runWebGPUProgram(w,[N],"int32",S);return a.disposeData(N.dataId),M}let m=r.data,g=m;if(s!=null&&s!==4){g=new Uint8Array(r.width*r.height*s);let y=m.length,x=0;for(let b=0;b<y;b++)b%4<s&&(g[x++]=m[b])}let A=a.makeTensorInfo(p,"int32",new Int32Array(g));return a.uploadToGPU(A.dataId),A}var joe=class{constructor(e,t,a,n,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],T.assertAndGetBroadcastShape(e,t),T.assertAndGetBroadcastShape(e,a),this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),n!=null&&(T.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset")),r!=null&&(T.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Oe("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},qoe={kernelName:Ni,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n,scale:r,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=a,d=[n,i,o],c=null;s!=null&&(c=s.shape,d.push(s));let p=null;r!=null&&(p=r.shape,d.push(r));let h=new joe(n.shape,i.shape,o.shape,c,p),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,d,n.dtype,f)}};function Xoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=T.convertConv2DDataFormat(d),g=T.computeConv2DInfo(r.shape,s.shape,l,c,u,p,!1,m);return k4({x:r,filter:s,convInfo:g,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}var Koe={kernelName:Wr,backendName:"webgpu",kernelFunc:Xoe};function Zoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:h}=n,f=d;f==null&&(f=[1,1]),v.assert(T.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=T.computeConv2DInfo(r.shape,s.shape,l,f,u,c,!0),g=[r,s],A=i!=null,y=o!=null;A&&g.push(i),y&&g.push(o);let x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.inHeight>4&&m.inWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?b=new S4(m,A,p,y):(b=new T4(m,A,p,y),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),p==="leakyrelu"&&(x.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),a.runWebGPUProgram(b,g,"float32",x)}var Yoe={kernelName:Br,backendName:"webgpu",kernelFunc:Zoe},Joe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Zt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Qoe(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=r.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[l,u,d,c]=T.prepareAndValidate(n,r),p=Ce({inputs:{x:r},backend:a,attrs:{shape:[u,i]}}),h=Ce({inputs:{x:n},backend:a,attrs:{shape:[v.sizeFromShape(n.shape)/d,d]}});if(a.shouldExecuteOnCPU([n,r])||n.dtype==="string"){let y=a.readSync(r.dataId),x=a.bufferSync(n),b=Pse(y,x,n.dtype,u,i,d,c,n.shape,o);return a.makeTensorInfo(l,n.dtype,b.values)}let f=new Joe(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:c}],g=a.runWebGPUProgram(f,[h,p],h.dtype,m),A=Ce({inputs:{x:g},backend:a,attrs:{shape:l}});return a.disposeData(p.dataId),a.disposeData(h.dataId),a.disposeData(g.dataId),A}var ele={kernelName:Ci,backendName:"webgpu",kernelFunc:Qoe},tle=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=ale(this.aShape);return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function ale(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let n=0;n<e.length;n++)n===2?a.push("indexZ"):a.push(`${t[n]}`);return a.join()}function E4(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n,l=v.parseAxisParam(i,r.shape)[0],u=T.segment_util.collectGatherOpShapeInfo(r,s,l,o),d=v.sizeFromShape(s.shape),c=[],p=Ce({inputs:{x:r},backend:a,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=Ce({inputs:{x:s},backend:a,attrs:{shape:[u.batchSize,d/u.batchSize]}});c.push(p),c.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(a.shouldExecuteOnCPU([r,s])){let y=a.tensorMap.get(h.dataId).values,x=xe(h.shape,h.dtype,y),b=a.tensorMap.get(p.dataId).values,w=xe(p.shape,p.dtype,b),S=Dse(w,x,f);return c.forEach(N=>a.disposeData(N.dataId)),a.makeTensorInfo(u.outputShape,S.dtype,S.values)}let m=new tle(p.shape,f),g=a.runWebGPUProgram(m,[p,h],p.dtype);c.push(g);let A=Ce({inputs:{x:g},backend:a,attrs:{shape:u.outputShape}});return c.forEach(y=>a.disposeData(y.dataId)),A}var nle={kernelName:Al,backendName:"webgpu",kernelFunc:E4},rle=ra({opType:Fe.GREATER,cpuKernelImpl:Lse,dtype:"bool"}),sle={kernelName:Qr,backendName:"webgpu",kernelFunc:rle},ile=ra({opType:Fe.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:zse}),ole={kernelName:es,backendName:"webgpu",kernelFunc:ile},lle=Lt({opType:ve.IS_NAN,dtype:"bool"}),ule={kernelName:yl,backendName:"webgpu",kernelFunc:lle};function dle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n,i=[{type:"float32",data:[s]}],o=new np(r.shape,ve.LEAKYRELU);return o.uniforms="alpha : f32,",a.runWebGPUProgram(o,[r],"float32",i)}var ple={kernelName:Ri,backendName:"webgpu",kernelFunc:dle},cle=ra({opType:Fe.LESS,dtype:"bool",cpuKernelImpl:Bse}),hle={kernelName:ts,backendName:"webgpu",kernelFunc:cle},fle=ra({opType:Fe.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Wse}),mle={kernelName:as,backendName:"webgpu",kernelFunc:fle},gle=Lt({opType:ve.LOG,cpuKernelImpl:Vse}),Ale={kernelName:ns,backendName:"webgpu",kernelFunc:gle},yle=ra({opType:Fe.LOGICAL_AND,dtype:"bool"}),xle={kernelName:_i,backendName:"webgpu",kernelFunc:yle},ble=Lt({opType:ve.LOGICAL_NOT}),vle={kernelName:$i,backendName:"webgpu",kernelFunc:ble},wle=ra({opType:Fe.MAX,cpuKernelImpl:Gse}),kle={kernelName:rs,backendName:"webgpu",kernelFunc:wle};function Ile(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n,u=1,d=T.computePool2DInfo(r.shape,s,i,u,o,l);return b4(r,d,"max",a)}var Sle={kernelName:Fi,backendName:"webgpu",kernelFunc:Ile};function Tle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return rp(r,s,i,"min",a)}var Nle={kernelName:Pi,backendName:"webgpu",kernelFunc:Tle},Cle=ra({opType:Fe.MIN,cpuKernelImpl:Hse}),Ele={kernelName:ss,backendName:"webgpu",kernelFunc:Cle},Rle=class{constructor(e,t,a){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,r)=>n[0]+e[r]+n[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((n,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=a==="reflect"?0:1,this.shaderKey=`mirrorPad_${a}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((l,u)=>`uniforms.pad${u}[0]`).join(","),a=this.xShape.map((l,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),n=e===1?"start":"start[i]",r=e===1?"end":"end[i]",s=e===1?"outC":"outC[i]",i=Zt(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${a});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${r}) {
              ${s} = (${r} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},_le={kernelName:Di,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{paddings:r,mode:s}=t,i=a,o=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new Rle(n.shape,r,s);return i.runWebGPUProgram(l,[n],n.dtype,o)}};function $le(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])){let s=a.tensorMap.get(n.dataId),[i,o]=qse(s.values,n.shape,n.dtype);return a.makeTensorInfo(o,n.dtype,i)}let r=new np(n.shape,ve.NEG);return a.runWebGPUProgram(r,[n],n.dtype)}var Mle={kernelName:bl,backendName:"webgpu",kernelFunc:$le};function Fle(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=a.readSync(r.dataId),d=a.readSync(s.dataId),{selectedIndices:c}=An.nonMaxSuppressionV3Impl(u,d,i,o,l);return a.makeTensorInfo([c.length],"int32",new Int32Array(c))}var Ole={kernelName:zi,backendName:"webgpu",kernelFunc:Fle};function Ple(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,d=a.readSync(r.dataId),c=a.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:A}=An.nonMaxSuppressionV5Impl(d,c,p,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([A.length],"float32",new Float32Array(A))]}var Dle={kernelName:Li,backendName:"webgpu",kernelFunc:Ple};function Lc(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="complex64"){let r=sp({inputs:{input:n},backend:a}),s=Lc({inputs:{x:r},backend:a}),i=Xh({inputs:{input:n},backend:a}),o=Lc({inputs:{x:i},backend:a}),l=Ql({inputs:{real:s,imag:o},backend:a});return a.disposeData(r.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return uo({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:a})}var zle={kernelName:Ll,backendName:"webgpu",kernelFunc:Lc};function R4(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let r=sp({inputs:{input:n},backend:a}),s=R4({inputs:{x:r},backend:a}),i=Xh({inputs:{input:n},backend:a}),o=Lc({inputs:{x:i},backend:a}),l=Ql({inputs:{real:s,imag:o},backend:a});return a.disposeData(r.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),l}else return uo({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:a})}var Lle={kernelName:wl,backendName:"webgpu",kernelFunc:R4};function Wle(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return T2({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(d=>{v.assertShapesMatch(s,d.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(d=>{let c=T2({inputs:{input:d},backend:a,attrs:{dim:r}});return o.push(c),c}),u=w4({inputs:l,backend:a,attrs:{axis:r}});return o.forEach(d=>a.disposeData(d.dataId)),u}var Ble={kernelName:Il,backendName:"webgpu",kernelFunc:Wle},Vle=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((a,n)=>a[0]+e[n]+a[1]),this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((a,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Zt(e),a=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),n=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),r=e>1?`${t}(${a})`:`${a}`,s=e>1?`${t}(${n})`:`${n}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${s};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${l}));
          }
        }
      }
    `}},_4=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;if(s.every(u=>v.arraysEqual(u,[0,0])))return tn({inputs:{x:r},backend:a});if(v.sizeFromShape(r.shape)===0){let u=s.map((d,c)=>d[0]+r.shape[c]+d[1]);return uo({backend:a,attrs:{shape:u,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];s.map(u=>o.push({type:"int32",data:[u[0],u[1]]}));let l=new Vle(r.shape,s);return a.runWebGPUProgram(l,[r],r.dtype,o)},Ule={kernelName:Wi,backendName:"webgpu",kernelFunc:_4},Gle=ra({opType:Fe.POW}),Hle={kernelName:Bi,backendName:"webgpu",kernelFunc:Gle};function jle(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=new v2(Fe.PRELU,n.shape,r.shape);return a.runWebGPUProgram(s,[n,r],"float32")}var qle={kernelName:Vi,backendName:"webgpu",kernelFunc:jle};function Xle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return rp(r,s,i,"prod",a)}var Kle={kernelName:Ui,backendName:"webgpu",kernelFunc:Xle},Zle=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=Zse(n,r,s,i);return t.makeTensorInfo([o.length],i,o)},Yle={kernelName:Sl,backendName:"webgpu",kernelFunc:Zle},$4=ra({opType:Fe.DIV}),Jle={kernelName:wi,backendName:"webgpu",kernelFunc:$4},Qle=Lt({opType:ve.RECIPROCAL}),eue={kernelName:Tl,backendName:"webgpu",kernelFunc:Qle},tue=Lt({opType:ve.RELU}),aue={kernelName:Gi,backendName:"webgpu",kernelFunc:tue},nue=Lt({opType:ve.RELU6}),rue={kernelName:qi,backendName:"webgpu",kernelFunc:nue},sue=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Oe("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function iue(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,size:i,halfPixelCenters:o}=n,[l,u]=i,d=s&&l>1?1:0,c=s&&u>1?1:0,p=[{type:"float32",data:[d,c]},{type:"float32",data:[o?.5:0]}],h=new sue(r.shape,l,u);return a.runWebGPUProgram(h,[r],"float32",p)}var oue={kernelName:ji,backendName:"webgpu",kernelFunc:iue},lue=class{constructor(e,t,a,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function uue(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,d=s&&l>1?1:0,c=s&&u>1?1:0,p=[{type:"float32",data:[d,c]},{type:"float32",data:[s?.5:0]}],h=new lue(r.shape,l,u,i);return a.runWebGPUProgram(h,[r],r.dtype,p)}var due={kernelName:Hi,backendName:"webgpu",kernelFunc:uue},pue=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Oe("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},cue={kernelName:no,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,l=new pue(n.shape,s),[u,d]=T.getImageCenter(i,n.shape[1],n.shape[2]),c=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof s=="number"?c.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):c.push({type:"float32",data:s}),o.runWebGPUProgram(l,[n],n.dtype,c)}},hue=Lt({opType:ve.RSQRT,cpuKernelImpl:Yse}),fue={kernelName:ls,backendName:"webgpu",kernelFunc:hue},cc=class{constructor(e,t,a,n,r,s,i,o=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=je(e),this.dispatch=Ee(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${a}_${n}_${this.sliceDimGreaterThanOne}_${i}_${o}`;let l=Zt(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, size: i32,`,this.updatesRank=n,this.indicesRank=a}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,a=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",r="";this.dispatchLayout.x.length===1?(n="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let s=`getUpdates(${Array.from({length:this.updatesRank},(o,l)=>`coords[${l}]`).join(", ")})`,i=(o,l)=>{let u=`atomicAdd(${o}, bitcast<i32>(${l}))`;this.type==="float32"&&(u=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${l});
            loop {
              let info = atomicCompareExchangeWeak(${o}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${l});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${o}, bitcast<i32>(${l}));`;return this.sumDupeIndices?u:d};return`
    ${r}

      ${Oe("index")} {
        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${a};
          }
          let updateValue =
              ${Lu(this.type,!1)}(${s});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${i("&result[flatIndex]","updateValue")};
        }
      }`}};function mue(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=T.calculateShapes(s,r,i),p=[c/u,u];if(c===0)return a.makeTensorInfo(i,r.dtype);let h=Ce({inputs:{x:r},backend:a,attrs:{shape:[l,o]}}),f=Ce({inputs:{x:s},backend:a,attrs:{shape:[l,u]}}),m=f.dtype,g=uo({backend:a,attrs:{shape:p,value:0,dtype:m}}),A=v.sizeFromShape(f.shape),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[A]}],x=new cc(f.shape,o,h.shape.length,f.shape.length,d,p,m),b=a.runWebGPUProgram(x,[f,h],m,y,g),w=Ce({inputs:{x:b},backend:a,attrs:{shape:i}});return a.disposeData(h.dataId),a.disposeData(f.dataId),a.disposeData(b.dataId),w}var gue={kernelName:Xi,backendName:"webgpu",kernelFunc:mue},Aue=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=a,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[],r=[];for(let s=0;s<this.outputShape.length;s++)r.push(`${a[s]}`),s<this.cRank&&n.push(`${a[s]}`);e=n.join(),t=r.join()}return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function yue(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=new Aue(n.shape.length,r.shape,r.shape.length);return a.runWebGPUProgram(i,[n,r,s],Yt(r.dtype,s.dtype))}var xue={kernelName:Rl,backendName:"webgpu",kernelFunc:yue},bue=Lt({opType:ve.SIGMOID}),vue={kernelName:us,backendName:"webgpu",kernelFunc:bue},wue=Lt({opType:ve.SIN}),kue={kernelName:Ki,backendName:"webgpu",kernelFunc:wue},Iue=Lt({opType:ve.SINH}),Sue={kernelName:$l,backendName:"webgpu",kernelFunc:Iue},M4=ra({opType:Fe.SUB,cpuKernelImpl:nie,supportsComplex:!0}),Tue={kernelName:cs,backendName:"webgpu",kernelFunc:M4};function Nue(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=v.parseAxisParam([s],r.shape),o=j1({inputs:{x:r},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),l=T.expandShapeToKeepDim(o.shape,i),u=Ce({inputs:{x:o},backend:a,attrs:{shape:l}}),d=M4({inputs:{a:r,b:u},backend:a}),c=C4({inputs:{x:d},backend:a}),p=q1({inputs:{x:c},backend:a,attrs:{axis:i,keepDims:!1}}),h=Ce({inputs:{x:p},backend:a,attrs:{shape:l}}),f=$4({inputs:{a:c,b:h},backend:a});return a.disposeData(o.dataId),a.disposeData(u.dataId),a.disposeData(d.dataId),a.disposeData(c.dataId),a.disposeData(p.dataId),a.disposeData(h.dataId),f}var Cue={kernelName:Yi,backendName:"webgpu",kernelFunc:Nue},Eue=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((A,y)=>A*y),l=[[0,0]];l.push(...i);for(let A=1+s.length;A<r.shape.length;++A)l.push([0,0]);let u=[],d=_4({inputs:{x:r},backend:a,attrs:{paddings:l,constantValue:0}}),c=T.getReshaped(d.shape,s,o,!1),p=T.getPermuted(c.length,s.length,!1),h=T.getReshapedPermuted(d.shape,s,o,!1),f=Ce({inputs:{x:d},backend:a,attrs:{shape:c}}),m=or({inputs:{x:f},backend:a,attrs:{perm:p}}),g=Ce({inputs:{x:m},backend:a,attrs:{shape:h}});return u.push(d),u.push(f),u.push(m),u.forEach(A=>a.disposeData(A.dataId)),g},Rue={kernelName:Ml,backendName:"webgpu",kernelFunc:Eue},_ue=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[n]*t[n];this.outputShape=a,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=$ue(this.rank,"uniforms.");return`
      ${Oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function $ue(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e;r++)n.push(`(${a[r]} % ${t}aShape[${r}])`);return n.join()}function F4(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;if(a.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let o=a.readSync(r.dataId),l=r.dtype==="string"?o.map(c=>v.decodeString(c)):o,u=xe(r.shape,r.dtype,l),d=rie(u,s);return a.makeTensorInfo(d.shape,d.dtype,d.values)}let i=new _ue(r.shape,s);return a.runWebGPUProgram(i,[r],r.dtype)}var Mue={kernelName:hs,backendName:"webgpu",kernelFunc:F4};function Fue(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=T.calculateShapes(s,r,o),h=!1;if(s.dtype==="string"){let C=a.bufferSync(r),M=a.bufferSync(s),$=v.decodeString(a.readSync(i.dataId)[0]),E=Jse(C,M,o,p,d,u,l,c,$,h);return a.makeTensorInfo(o,E.dtype,E.values)}let f=[p/d,d],m=Ce({inputs:{x:r},backend:a,attrs:{shape:[u,l]}}),g=s.shape.length?Ce({inputs:{x:s},backend:a,attrs:{shape:[u,d]}}):tn({inputs:{x:s},backend:a}),A=g.dtype,y=a.makeTensorInfo([],A,v.makeZerosTypedArray(1,A)),x=Ce({inputs:{x:i},backend:a,attrs:{shape:Array(f.length).fill(1)}}),b=F4({inputs:{x},backend:a,attrs:{reps:f}}),w=v.sizeFromShape([u,d]),S=[{type:"int32",data:[l]},{type:"int32",data:c},{type:"int32",data:[w]}];switch(u){case 0:break;case 1:{let C=new cc([u,d],l,m.shape.length,g.shape.length,c,f,A,h);a.runWebGPUProgram(C,[g,m],A,S,b)}break;default:{let C=new cc([u,d],l,m.shape.length,y.shape.length,c,f,A,h);a.runWebGPUProgram(C,[y,m],A,S,b)}{let C=new cc([u,d],l,m.shape.length,g.shape.length,c,f,A);a.runWebGPUProgram(C,[g,m],A,S,b)}}let N=Ce({inputs:{x:b},backend:a,attrs:{shape:o}});return a.disposeData(m.dataId),a.disposeData(g.dataId),a.disposeData(x.dataId),a.disposeData(y.dataId),a.disposeData(b.dataId),N}var Oue={kernelName:_d,backendName:"webgpu",kernelFunc:Fue};function Pue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],l=T.prepareSplitSize(r,s,o),u=r.shape.length,d=new Array(u).fill(0),c=r.shape.slice();return l.map(p=>{let h=[...c];h[o]=p;let f=tu({inputs:{x:r},backend:a,attrs:{begin:d,size:h}});return d[o]+=p,f})}var Due={kernelName:Fl,backendName:"webgpu",kernelFunc:Pue},zue=Lt({opType:ve.SQRT}),Lue={kernelName:ds,backendName:"webgpu",kernelFunc:zue},Wue={kernelName:$d,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,n=t,r=new np(a.shape,ve.SQUARE);return n.runWebGPUProgram(r,[a],a.dtype)}},Bue=ra({opType:Fe.SQUARED_DIFFERENCE}),Vue={kernelName:ps,backendName:"webgpu",kernelFunc:Bue},Uue=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Zt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let a=0;t=this.outputShape.map((n,r)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${r}] + uniforms.begin[${r}]`:`coords[${a-1}] * uniforms.strides[${r}] + uniforms.begin[${r}]`)).join(",")}return`
       ${Oe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Gue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:y,end:x,strides:b}=gt.sliceInfo(r.shape,s,i,o,l,u,d,c,p),w;if(m)w=Ce({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||A){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=gt.computeOutShape(y,x,b),N=tu({inputs:{x:r},backend:a,attrs:{begin:y,size:S}});w=Ce({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeData(N.dataId)}else if(a.shouldExecuteOnCPU([r])){let S=a.readSync(r.dataId),N=xe(r.shape,r.dtype,S),C=tie(h,N,b,y);w=a.makeTensorInfo(f,r.dtype,C.values)}else{let S=new Uue(h),N=[{type:"int32",data:y},{type:"int32",data:b}],C=a.runWebGPUProgram(S,[r],r.dtype,N);w=Ce({inputs:{x:C},backend:a,attrs:{shape:f}}),a.disposeData(C.dataId)}return w}var Hue={kernelName:Ji,backendName:"webgpu",kernelFunc:Gue};function jue(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:d,dataSplits:c}=t,p=a.readSync(d.dataId),h=a.readSync(c.dataId),[f,m]=aie(p,h,r,s,i,o,l,u);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(c.shape,"int32",m)]}var que={kernelName:Pl,backendName:"webgpu",kernelFunc:jue},Xue=Lt({opType:ve.TANH}),Kue={kernelName:Qi,backendName:"webgpu",kernelFunc:Xue},Zue=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Yue=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Co(e,t){t!==null&&e.disposeData(t.dataId)}function Gy(e){let t=1;for(;t<e;)t*=2;return t}function Jue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n,o=r.shape,l=o[o.length-1];if(a.shouldExecuteOnCPU([r])){let b=a.readSync(r.dataId),[w,S]=sie(b,o,r.dtype,s,i);return[a.makeTensorInfo(w.shape,w.dtype,w.values),a.makeTensorInfo(S.shape,S.dtype,S.values)]}if(s===0)return o[o.length-1]=0,[a.makeTensorInfo(o,r.dtype,[]),a.makeTensorInfo(o,"int32",[])];if(l===1)return[r,uo({attrs:{shape:o,dtype:"int32",value:0},backend:a})];let u=v.sizeFromShape(o)/l,d=Ce({inputs:{x:r},attrs:{shape:[u,l]},backend:a}),c=Gy(s),p=Gy(l),h=null,f=()=>h===null?[d,d]:[d,h],m=(b,w,S)=>{let N=f(),C=new Zue(S),M=[{type:"int32",data:[l]},{type:"int32",data:[h===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[w]}],$=h;h=a.runWebGPUProgram(C,N,"int32",M),Co(a,$)};for(let b=1;b<c;b*=2){let w=b*2;for(let S=b;S>=1;S/=2)m(w,S,[u,p])}for(let b=p;b>c;b/=2){let w=f(),S=new Yue([u,b/2]),N=[{type:"int32",data:[l]},{type:"int32",data:[h===null?1:0]},{type:"int32",data:[c]}],C=h;h=a.runWebGPUProgram(S,w,"int32",N),Co(a,C);let M=c/2,$=M*2;for(let E=M;E>=1;E/=2)m($,E,h.shape)}let g=h;h=tu({inputs:{x:h},backend:a,attrs:{begin:0,size:[u,s]}}),Co(a,g);let A=E4({inputs:{x:d,indices:h},backend:a,attrs:{axis:1,batchDims:1}});Co(a,d);let y=o.slice(0,-1);y.push(s),g=h,h=Ce({inputs:{x:h},attrs:{shape:y},backend:a}),Co(a,g);let x=A;return A=Ce({inputs:{x:A},attrs:{shape:y},backend:a}),Co(a,x),[A,h]}var Que={kernelName:eo,backendName:"webgpu",kernelFunc:Jue},ede=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=je(this.outputShape),this.dispatch=Ee(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Oe("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function tde(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,c,p,h]=r.shape,[f,m]=u??[c,p],g=[d,f,m,h],A=new ede(g),y=i==="nearest"?1:2,x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1;break}let b=[{type:"int32",data:[y]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return a.runWebGPUProgram(A,[r,s],"float32",b)}var ade={kernelName:to,backendName:"webgpu",kernelFunc:tde};function nde(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==s&&(u[d++]=i.shape[m]);let c=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;let g=tu({inputs:{x:i},backend:a,attrs:{begin:p,size:h}}),A=Ce({inputs:{x:g},backend:a,attrs:{shape:u}});f[m]=A,c.push(g)}return c.forEach(m=>a.disposeData(m.dataId)),f}var rde={kernelName:zl,backendName:"webgpu",kernelFunc:nde},sde=[Lre,lie,die,hie,xie,vie,kie,Eie,_ie,Pie,Wie,Vie,jie,Bre,Zie,aoe,ooe,uoe,poe,foe,goe,yoe,voe,Ioe,Coe,Roe,$oe,Moe,Foe,Poe,Pre,zoe,Goe,Woe,Voe,qoe,Koe,Yoe,ele,nle,sle,ole,Wre,Xie,ule,ple,hle,mle,Ale,xle,vle,Tie,kle,Sle,Nie,Nle,Ele,_le,Soe,Mle,Ole,Dle,Die,Lle,Ble,Ule,Hle,qle,Kle,Yle,zie,Jle,eue,aue,rue,Dre,oue,due,cue,fue,gue,xue,vue,kue,Sue,Fie,Hue,que,Cue,Rue,Oue,Due,Lue,Wue,Vue,Tue,Toe,Kue,Mue,Que,ade,Aie,rde,zle];for(let e of sde)Tn(e);var Hy="4.0.0",ide="4.0.0",ode="4.0.0",lde="4.0.0",ude="4.0.0",dde="0.0.1-alpha.14",X1={tfjs:Hy,"tfjs-core":Hy,"tfjs-converter":ide,"tfjs-backend-cpu":ode,"tfjs-backend-webgl":lde,"tfjs-backend-wasm":ude,"tfjs-backend-webgpu":dde};function ae(...e){let t=new Date,a=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(a,"Human:",...e)}function pde(e,t){let a=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${a}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var oe=()=>typeof performance<"u"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function O4(e,t,a="config",n=[]){for(let r of Object.keys(t))if(typeof t[r]=="object")O4(e[r],t[r],r,n);else{let s=e&&typeof e[r]<"u";s||n.push({reason:"unknown property",where:`${a}.${r} = ${t[r]}`});let i=e&&typeof e[r]==typeof t[r];s&&!i&&n.push({reason:"property type mismatch",where:`${a}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&a==="config"&&n.length>0&&ae("invalid configuration",n),n}function da(...e){let t=a=>a&&typeof a=="object";return e.reduce((a,n)=>(Object.keys(n||{}).forEach(r=>{let s=a[r],i=n[r];Array.isArray(s)&&Array.isArray(i)?a[r]=s.concat(...i):t(s)&&t(i)?a[r]=da(s,i):a[r]=i}),a),{})}var Eo={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},cde=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,hde=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,fde=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,mde=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,gde=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,Ade=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,Zf=(e,t,a)=>{let n=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(n,(r,s)=>(a[s]=0,r))},yde=class{constructor(e,t,a){ue(this,"uniform",{}),ue(this,"attribute",{}),ue(this,"gl"),ue(this,"id"),ue(this,"compile",(s,i)=>{let o=this.gl.createShader(i);return o?(this.gl.shaderSource(o,s),this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS)?o:(ae(`filter: gl compile failed: ${this.gl.getShaderInfoLog(o)||"unknown"}`),null)):(ae("filter: could not create shader"),null)}),this.gl=e;let n=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(a,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!n||!r)){if(!this.id){ae("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,n),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){ae(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);return}this.gl.useProgram(this.id),Zf(t,"attribute",this.attribute);for(let s in this.attribute)this.attribute[s]=this.gl.getAttribLocation(this.id,s);Zf(t,"uniform",this.uniform),Zf(a,"uniform",this.uniform);for(let s in this.uniform)this.uniform[s]=this.gl.getUniformLocation(this.id,s)}}};function xde(){let e=0,t=null,a=!1,n=-1,r=[null,null],s=[],i=null,o=null,l=Or(100,100),u={},d={INTERMEDIATE:1},c=l.getContext("webgl");if(!c){ae("filter: cannot get webgl context");return}this.gl=c;function p(y,x){if(!(y===l.width&&x===l.height)){if(l.width=y,l.height=x,!i){let b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=c.createBuffer(),c.bindBuffer(c.ARRAY_BUFFER,i),c.bufferData(c.ARRAY_BUFFER,b,c.STATIC_DRAW),c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}c.viewport(0,0,l.width,l.height),r=[null,null]}}function h(y,x){let b=c.createFramebuffer();c.bindFramebuffer(c.FRAMEBUFFER,b);let w=c.createRenderbuffer();c.bindRenderbuffer(c.RENDERBUFFER,w);let S=c.createTexture();return c.bindTexture(c.TEXTURE_2D,S),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,y,x,0,c.RGBA,c.UNSIGNED_BYTE,null),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.LINEAR),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,S,0),c.bindTexture(c.TEXTURE_2D,null),c.bindFramebuffer(c.FRAMEBUFFER,null),{fbo:b,texture:S}}function f(y){return r[y]=r[y]||h(l.width,l.height),r[y]}function m(y=0){if(!o)return;let x=null,b=null,w=!1;e===0?x=t:x=f(n).texture||null,e++,a&&!(y&d.INTERMEDIATE)?(b=null,w=e%2===0):(n=(n+1)%2,b=f(n).fbo||null),c.bindTexture(c.TEXTURE_2D,x),c.bindFramebuffer(c.FRAMEBUFFER,b),c.uniform1f(o.uniform.flipY,w?-1:1),c.drawArrays(c.TRIANGLES,0,6)}function g(y){if(u[y])return o=u[y],c.useProgram((o?o.id:null)||null),o;if(o=new yde(c,cde,y),!o)return ae("filter: could not get webgl program"),null;let x=Float32Array.BYTES_PER_ELEMENT,b=4*x;return c.enableVertexAttribArray(o.attribute.pos),c.vertexAttribPointer(o.attribute.pos,2,c.FLOAT,!1,b,0*x),c.enableVertexAttribArray(o.attribute.uv),c.vertexAttribPointer(o.attribute.uv,2,c.FLOAT,!1,b,2*x),u[y]=o,o}let A={colorMatrix:y=>{let x=new Float32Array(y);x[4]/=255,x[9]/=255,x[14]/=255,x[19]/=255;let b=x[18]===1&&x[3]===0&&x[8]===0&&x[13]===0&&x[15]===0&&x[16]===0&&x[17]===0&&x[19]===0?fde:hde,w=g(b);!w||(c.uniform1fv(w.uniform.m,x),m())},brightness:y=>{let x=(y||0)+1;A.colorMatrix([x,0,0,0,0,0,x,0,0,0,0,0,x,0,0,0,0,0,1,0])},saturation:y=>{let x=(y||0)*2/3+1,b=(x-1)*-.5;A.colorMatrix([x,b,b,0,0,b,x,b,0,0,b,b,x,0,0,0,0,0,1,0])},desaturate:()=>{A.saturation(-1)},contrast:y=>{let x=(y||0)+1,b=-128*(x-1);A.colorMatrix([x,0,0,0,b,0,x,0,0,b,0,0,x,0,b,0,0,0,1,0])},negative:()=>{A.contrast(-2)},hue:y=>{y=(y||0)/180*Math.PI;let x=Math.cos(y),b=Math.sin(y),w=.213,S=.715,N=.072;A.colorMatrix([w+x*(1-w)+b*-w,S+x*-S+b*-S,N+x*-N+b*(1-N),0,0,w+x*-w+b*.143,S+x*(1-S)+b*.14,N+x*-N+b*-.283,0,0,w+x*-w+b*-(1-w),S+x*-S+b*S,N+x*(1-N)+b*N,0,0,0,0,0,1,0])},desaturateLuminance:()=>{A.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{A.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{A.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{A.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{A.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{A.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{A.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{A.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:y=>{let x=new Float32Array(y),b=1/l.width,w=1/l.height,S=g(Ade);!S||(c.uniform1fv(S.uniform.m,x),c.uniform2f(S.uniform.px,b,w),m())},detectEdges:()=>{A.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{A.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{A.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:y=>{let x=y||1;A.convolution.call(this,[0,-1*x,0,-1*x,1+4*x,-1*x,0,-1*x,0])},emboss:y=>{let x=y||1;A.convolution.call(this,[-2*x,-1*x,0,-1*x,1,1*x,0,1*x,2*x])},blur:y=>{let x=y/7/l.width,b=y/7/l.height,w=g(gde);!w||(c.uniform2f(w.uniform.px,0,b),m(d.INTERMEDIATE),c.uniform2f(w.uniform.px,x,0),m())},pixelate:y=>{let x=y/l.width,b=y/l.height,w=g(mde);!w||(c.uniform2f(w.uniform.size,x,b),m())}};this.add=function(y){let x=Array.prototype.slice.call(arguments,1),b=A[y];s.push({func:b,args:x})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(y){p(y.width,y.height),e=0,t||(t=c.createTexture()),c.bindTexture(c.TEXTURE_2D,t),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,y);for(let x=0;x<s.length;x++){a=x===s.length-1;let b=s[x];b.func.apply(this,b.args||[])}return l},this.draw=function(y){return this.add("brightness",0),this.apply(y)}}async function P4(e){let t=e.shape.length===4?it(e):e,a=Gn(t,3,2),n=[Hs(a[0]),Hs(a[1]),Hs(a[2])],r=[hn(a[0]),hn(a[1]),hn(a[2])],s=await Promise.all(r.map(h=>h.data())),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[we(a[0],n[0]),we(a[1],n[1]),we(a[2],n[2])],l=[we(r[0],n[0]),we(r[1],n[1]),we(r[2],n[2])],u=[Ne(i,l[0]),Ne(i,l[1]),Ne(i,l[2])],d=[ie(o[0],u[0]),ie(o[1],u[1]),ie(o[2],u[2])],c=en([d[0],d[1],d[2]],2),p=te(c,[1,t.shape[0]||0,t.shape[1]||0,3]);return le([...a,...n,...r,...o,...l,...u,...d,c,t]),p}var Gp=3840,Bt=null,Vt=null,Ro=null,ht,Ka={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function jy(){Ka.inputSum=0,Ka.cacheDiff=1,Ka.sumMethod=0,Ka.inputTensor=void 0}function Or(e,t){let a;if(he.browser)if(he.worker){if(typeof OffscreenCanvas>"u")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");a=new OffscreenCanvas(e,t)}else{if(typeof document>"u")throw new Error("canvas error: attempted to run in browser but DOM is not defined");a=document.createElement("canvas"),a.width=e,a.height=t}else typeof he.Canvas<"u"?a=new he.Canvas(e,t):typeof globalThis.Canvas<"u"&&(a=new globalThis.Canvas(e,t));return a}function Hp(e,t){let a=t||Or(e.width,e.height);return a.getContext("2d").drawImage(e,0,0),a}async function Yf(e,t,a=!0){var n,r;if(!e)return t.debug&&ae("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof ft)&&!(typeof Image<"u"&&e instanceof Image)&&!(typeof he.Canvas<"u"&&e instanceof he.Canvas)&&!(typeof globalThis.Canvas<"u"&&e instanceof globalThis.Canvas)&&!(typeof ImageData<"u"&&e instanceof ImageData)&&!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement<"u"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof ft){let f=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)f=Pa(e,0);else if(e.shape[2]===4){let m=Nc(e,[0,0,0],[-1,-1,3]);f=Pa(m,0),le(m)}}else e.shape.length===4&&(e.shape[3]===3?f=Ca(e):e.shape[3]===4&&(f=jg(e,[0,0,0,0],[-1,-1,-1,3])));if(f==null||f.shape.length!==4||f.shape[0]!==1||f.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if(f.dtype==="int32"){let m=Xe(f,"float32");le(f),f=m}return{tensor:f,canvas:t.filter.return?Vt:null}}if(typeof e.readyState<"u"&&e.readyState<=2)return t.debug&&ae("input stream is not ready"),{tensor:null,canvas:Bt};let s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,i=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!i)return t.debug&&ae("cannot determine input dimensions"),{tensor:null,canvas:Bt};let o=s,l=i;if(o>Gp&&(o=Gp,l=Math.trunc(o*i/s)),l>Gp&&(l=Gp,o=Math.trunc(l*s/i)),(((n=t.filter)==null?void 0:n.width)||0)>0?o=t.filter.width:(((r=t.filter)==null?void 0:r.height)||0)>0&&(o=s*((t.filter.height||0)/i)),(t.filter.height||0)>0?l=t.filter.height:(t.filter.width||0)>0&&(l=i*((t.filter.width||0)/s)),!o||!l)throw new Error("input error: cannot determine dimension");(!Bt||Bt.width!==o||Bt.height!==l)&&(Bt=Or(o,l));let u=Bt.getContext("2d");if(typeof ImageData<"u"&&e instanceof ImageData?u.putImageData(e,0,0):t.filter.flip&&typeof u.translate<"u"?(u.translate(s,0),u.scale(-1,1),u.drawImage(e,0,0,s,i,0,0,Bt.width,Bt.height),u.setTransform(1,0,0,1,0,0)):u.drawImage(e,0,0,s,i,0,0,Bt.width,Bt.height),(!Vt||Bt.width!==Vt.width||Bt.height!==Vt.height)&&(Vt=Or(Bt.width,Bt.height)),t.filter.enabled&&he.webgl.supported?(ht||(ht=he.browser?new xde:null),he.filter=!!ht,ht?.add?(ht.reset(),t.filter.brightness!==0&&ht.add("brightness",t.filter.brightness),t.filter.contrast!==0&&ht.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&ht.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&ht.add("blur",t.filter.blur),t.filter.saturation!==0&&ht.add("saturation",t.filter.saturation),t.filter.hue!==0&&ht.add("hue",t.filter.hue),t.filter.negative&&ht.add("negative"),t.filter.sepia&&ht.add("sepia"),t.filter.vintage&&ht.add("brownie"),t.filter.sepia&&ht.add("sepia"),t.filter.kodachrome&&ht.add("kodachrome"),t.filter.technicolor&&ht.add("technicolor"),t.filter.polaroid&&ht.add("polaroid"),t.filter.pixelate!==0&&ht.add("pixelate",t.filter.pixelate),ht.get()>0?Vt=ht.apply(Bt):Vt=ht.draw(Bt)):(t.debug&&ae("input process error: cannot initialize filters"),he.webgl.supported=!1,t.filter.enabled=!1,Hp(Bt,Vt))):(Hp(Bt,Vt),ht&&(ht=null),he.filter=!!ht),!a)return{tensor:null,canvas:Vt};if(!Vt)throw new Error("canvas error: cannot create output");let d,c=3;if(typeof ImageData<"u"&&e instanceof ImageData||e.data&&e.width&&e.height)if(he.browser&&Ir)d=Ir?Ir.fromPixels(e):null;else{c=e.data.length/e.height/e.width;let f=new Uint8Array(e.data.buffer);d=Be(f,[e.height,e.width,c],"int32")}else if((!Ro||Vt.width!==Ro.width||Vt.height!==Ro.height)&&(Ro=Or(Vt.width,Vt.height)),Ir&&he.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?d=Ir.fromPixels(Vt):(Ro=Hp(Vt),d=Ir.fromPixels(Ro));else{let g=Hp(Vt).getContext("2d").getImageData(0,0,o,l);c=g.data.length/o/l;let A=new Uint8Array(g.data.buffer);d=Be(A,[o,l,c])}if(c===4){let f=Nc(d,[0,0,0],[-1,-1,3]);le(d),d=f}if(!d)throw new Error("input error: cannot create tensor");let p=Xe(d,"float32"),h=t.filter.equalization?await P4(p):Pa(p,0);return le([d,p]),{tensor:h,canvas:t.filter.return?Vt:null}}async function bde(e,t){let a=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>2048||t.shape[2]>2048)return a;if(!Ka.inputTensor)Ka.inputTensor=Ca(t);else if(Ka.inputTensor.shape[1]!==t.shape[1]||Ka.inputTensor.shape[2]!==t.shape[2])le(Ka.inputTensor),Ka.inputTensor=Ca(t);else{let n={};n.diff=we(t,Ka.inputTensor),n.squared=ie(n.diff,n.diff),n.sum=at(n.squared);let s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;le([Ka.inputTensor,n.diff,n.squared,n.sum]),Ka.inputTensor=Ca(t),a=s<=(e.cacheSensitivity||0)}return a}async function vde(e,t,a){let n={};if(!t||!a||t.shape.length!==4||t.shape.length!==a.shape.length)return e.debug||ae("invalid input tensor or tensor shapes do not match:",t.shape,a.shape),0;if(t.shape[0]!==1||a.shape[0]!==1||t.shape[3]!==3||a.shape[3]!==3)return e.debug||ae("input tensors must be of shape [1, height, width, 3]:",t.shape,a.shape),0;n.input1=Ca(t),n.input2=t.shape[1]!==a.shape[1]||t.shape[2]!==a.shape[2]?Ue.resizeBilinear(a,[t.shape[1],t.shape[2]]):Ca(a),n.diff=we(n.input1,n.input2),n.squared=ie(n.diff,n.diff),n.sum=at(n.squared);let s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return le([n.input1,n.input2,n.diff,n.squared,n.sum]),s}var wde=class{constructor(){if(ue(this,"browser"),ue(this,"node"),ue(this,"worker"),ue(this,"platform",""),ue(this,"agent",""),ue(this,"backends",[]),ue(this,"initial"),ue(this,"filter"),ue(this,"tfjs"),ue(this,"offscreen"),ue(this,"perfadd",!1),ue(this,"tensorflow",{version:void 0,gpu:void 0}),ue(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),ue(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),ue(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),ue(this,"cpu",{model:void 0,flags:[]}),ue(this,"kernels",[]),ue(this,"Canvas"),ue(this,"Image"),ue(this,"ImageData"),this.browser=typeof navigator<"u",this.node=typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u",this.tfjs={version:X1["tfjs-core"]},this.offscreen=typeof OffscreenCanvas<"u",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope<"u":void 0,typeof navigator<"u"){let e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e?.[0]){let t=e[0].match(/\(([^()]+)\)/g);this.platform=t?.[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process<"u"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Dt().registryFactory),this.tensorflow={version:Nr().binding?Nr().binding.TF_Version:void 0,gpu:Nr().binding?Nr().binding.isUsingGpuDevice():void 0},this.wasm.supported=typeof WebAssembly<"u",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&Xt()==="wasm"&&(this.wasm.simd=B().get("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=B().get("WASM_HAS_MULTITHREAD_SUPPORT"));let e=Or(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=typeof t<"u",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&(Xt()==="webgl"||Xt()==="humangl")){let a=Nr(),n=typeof a.gpgpu<"u"?a.getGPGPUContext().gl:null;n&&(this.webgl.version=n.getParameter(n.VERSION),this.webgl.renderer=n.getParameter(n.RENDERER))}this.webgpu.supported=this.browser&&typeof navigator.gpu<"u",this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){let a=await navigator.gpu.requestAdapter();this.webgpu.adapter=a?a.name:void 0}}catch{this.webgpu.supported=!1}try{this.kernels=Ks(Xt()).map(a=>a.kernelName.toLowerCase())}catch{}}updateCPU(){let e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},he=new wde,kde=class{constructor(){ue(this,"config"),ue(this,"element"),ue(this,"stream"),ue(this,"start",async e=>{if(e?.debug&&(this.config.debug=e?.debug),e?.crop&&(this.config.crop=e?.crop),e?.mode&&(this.config.mode=e?.mode),e?.width&&(this.config.width=e?.width),e?.height&&(this.config.height=e?.height),e?.element)if(typeof e.element=="string"){let n=document.getElementById(e.element);if(n&&n instanceof HTMLVideoElement)this.element=n;else{this.config.debug&&ae("webcam","cannot get dom element",e.element);return}}else if(e.element instanceof HTMLVideoElement)this.element=e.element;else{this.config.debug&&ae("webcam","unknown dom element",e.element);return}else this.element=document.createElement("video");let t={audio:!1,video:{facingMode:this.config.mode==="front"?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none",width:{ideal:this.config.width>0?this.config.width:window.innerWidth},height:{ideal:this.config.height>0?this.config.height:window.innerHeight}}};if(this.element.addEventListener("play",()=>{this.config.debug&&ae("webcam","play")}),this.element.addEventListener("pause",()=>{this.config.debug&&ae("webcam","pause")}),this.element.addEventListener("click",async()=>{!this.element||!this.stream||(this.element.paused?await this.element.play():this.element.pause())}),!navigator?.mediaDevices){this.config.debug&&ae("webcam","no devices");return}try{this.stream=await navigator.mediaDevices.getUserMedia(t)}catch(n){ae("webcam",n);return}if(!this.stream){this.config.debug&&ae("webcam","no stream");return}this.element.srcObject=this.stream,await new Promise(n=>{this.element?this.element.onloadeddata=()=>n(!0):n(!1)}),await this.element.play(),this.config.debug&&ae("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities})}),ue(this,"pause",()=>{this.element&&this.element.pause()}),ue(this,"play",async()=>{this.element&&await this.element.play()}),ue(this,"stop",()=>{this.config.debug&&ae("webcam","stop"),this.track&&this.track.stop()}),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(!!this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(!!this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(!!this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;let e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return((e=this.element)==null?void 0:e.paused)||!1}get width(){var e;return((e=this.element)==null?void 0:e.videoWidth)||0}get height(){var e;return((e=this.element)==null?void 0:e.videoHeight)||0}},D4={};jr(D4,{age:()=>Z4,"anti-spoofing":()=>E8,antispoof:()=>z4,blazeface:()=>L4,"blazeface-back":()=>Y4,"blazeface-front":()=>J4,"blazepose-detect":()=>C8,"blazepose-detector2d":()=>Q4,"blazepose-detector3d":()=>e8,"blazepose-full":()=>t8,"blazepose-heavy":()=>a8,"blazepose-lite":()=>n8,default:()=>Ide,efficientpose:()=>r8,"efficientpose-i-lite":()=>R8,"efficientpose-ii-lite":()=>_8,"efficientpose-iv":()=>$8,emotion:()=>W4,faceboxes:()=>s8,facemesh:()=>B4,"facemesh-attention":()=>o8,"facemesh-attention-alt":()=>i8,"facemesh-detection-full":()=>l8,"facemesh-detection-short":()=>u8,"facemesh-orig":()=>d8,faceres:()=>V4,"faceres-deep":()=>p8,gear:()=>c8,gender:()=>f8,"gender-ssrnet-imdb":()=>h8,handdetect:()=>m8,"handlandmark-full":()=>U4,"handlandmark-lite":()=>g8,"handlandmark-sparse":()=>A8,handskeleton:()=>y8,handtrack:()=>G4,"insightface-efficientnet-b0":()=>M8,"insightface-ghostnet-strides1":()=>F8,"insightface-ghostnet-strides2":()=>O8,"insightface-mobilenet-emore":()=>P8,"insightface-mobilenet-swish":()=>D8,iris:()=>H4,liveness:()=>j4,"mb3-centernet":()=>q4,meet:()=>x8,mobileface:()=>b8,mobilefacenet:()=>v8,models:()=>X4,"movenet-lightning":()=>K4,"movenet-multipose":()=>w8,"movenet-thunder":()=>k8,nanodet:()=>I8,"nanodet-e":()=>z8,"nanodet-g":()=>L8,"nanodet-m":()=>W8,"nanodet-t":()=>B8,posenet:()=>S8,rvm:()=>T8,selfie:()=>N8});var z4=853098,L4=538928,W4=820516,B4=1477958,V4=6978814,U4=5431368,G4=2964837,H4=2599092,j4=592976,q4=4030290,X4=0,K4=4650216,Z4=161240,Y4=538928,J4=402048,Q4=7499400,e8=5928856,t8=6338290,a8=27501554,n8=2725490,r8=5651240,s8=2013002,i8=2387598,o8=2382414,l8=1026192,u8=201268,d8=2955780,p8=13957620,c8=1498916,h8=161236,f8=201808,m8=3515612,g8=2023432,A8=5286322,y8=5502280,x8=372228,b8=2183192,v8=5171976,w8=9448838,k8=12477112,I8=7574558,S8=5032780,T8=3739355,N8=212886,C8=5928804,E8=853098,R8=2269064,_8=5651240,$8=25643252,M8=13013224,F8=8093408,O8=8049584,P8=6938536,D8=12168584,z8=12319156,L8=7574558,W8=1887474,B8=5294216,Ide={antispoof:z4,blazeface:L4,emotion:W4,facemesh:B4,faceres:V4,"handlandmark-full":U4,handtrack:G4,iris:H4,liveness:j4,"mb3-centernet":q4,models:X4,"movenet-lightning":K4,age:Z4,"blazeface-back":Y4,"blazeface-front":J4,"blazepose-detector2d":Q4,"blazepose-detector3d":e8,"blazepose-full":t8,"blazepose-heavy":a8,"blazepose-lite":n8,efficientpose:r8,faceboxes:s8,"facemesh-attention-alt":i8,"facemesh-attention":o8,"facemesh-detection-full":l8,"facemesh-detection-short":u8,"facemesh-orig":d8,"faceres-deep":p8,gear:c8,"gender-ssrnet-imdb":h8,gender:f8,handdetect:m8,"handlandmark-lite":g8,"handlandmark-sparse":A8,handskeleton:y8,meet:x8,mobileface:b8,mobilefacenet:v8,"movenet-multipose":w8,"movenet-thunder":k8,nanodet:I8,posenet:S8,rvm:T8,selfie:N8,"blazepose-detect":C8,"anti-spoofing":E8,"efficientpose-i-lite":R8,"efficientpose-ii-lite":_8,"efficientpose-iv":$8,"insightface-efficientnet-b0":M8,"insightface-ghostnet-strides1":F8,"insightface-ghostnet-strides2":O8,"insightface-mobilenet-emore":P8,"insightface-mobilenet-swish":D8,"nanodet-e":z8,"nanodet-g":L8,"nanodet-m":W8,"nanodet-t":B8},oa={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},vn={};async function Sde(e,t){return oa.debug&&ae("load model fetch:",e,t),fetch(e,t)}function Tde(e){oa.cacheModels=e.cacheModels,oa.verbose=e.debug,oa.modelBasePath=e.modelBasePath}async function ct(e){var t,a,n,r;let s=pde(oa.modelBasePath,e||"");s.toLowerCase().endsWith(".json")||(s+=".json");let i=s.includes("/")?s.split("/"):s.split("\\"),o=i[i.length-1].replace(".json",""),l="indexeddb://"+o;vn[o]={name:o,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:D4[o],inCache:!1},oa.cacheSupported=typeof indexedDB<"u";let u={};try{u=oa.cacheSupported&&oa.cacheModels?await er.listModels():{}}catch{oa.cacheSupported=!1}vn[o].inCache=oa.cacheSupported&&oa.cacheModels&&Object.keys(u).includes(l);let d=typeof fetch>"u"?{}:{fetchFunc:(h,f)=>Sde(h,f)},c=new Dh(vn[o].inCache?l:s,d),p=!1;try{c.findIOHandler(),oa.debug&&ae("model load handler:",c.handler)}catch(h){ae("error finding model i/o handler:",s,h)}try{let h=await((t=c.handler)==null?void 0:t.load())||null;vn[o].sizeFromManifest=((a=h?.weightData)==null?void 0:a.byteLength)||0,h?c.loadSync(h):c=await o7(vn[o].inCache?l:s,d),vn[o].sizeLoadedWeights=((r=(n=c.artifacts)==null?void 0:n.weightData)==null?void 0:r.byteLength)||0,oa.verbose&&ae("load:",{model:o,url:c.modelUrl,bytes:vn[o].sizeLoadedWeights}),p=!0}catch(h){ae("error loading model:",s,h)}if(p&&oa.cacheModels&&oa.cacheSupported&&!vn[o].inCache)try{let h=await c.save(l);oa.debug&&ae("model saved:",l,h)}catch(h){ae("error saving model:",s,h)}return c}var qy="3.0.0",V8={};jr(V8,{Models:()=>yI,getModelStats:()=>xI,load:()=>bI,reset:()=>Q1,validate:()=>$2,validateModel:()=>eA});var la,jp=[],Jf=Number.MAX_SAFE_INTEGER,Xy=0,Ky=0;async function Nde(e){var t;return he.initial&&(la=null),la?e.debug&&ae("cached model:",la.modelUrl):la=await ct((t=e.face.antispoof)==null?void 0:t.modelPath),la}async function Zy(e,t,a,n){var r,s;if(!la||!la?.executor)return 0;let i=(((r=t.face.antispoof)==null?void 0:r.skipTime)||0)>oe()-Ky,o=Jf<(((s=t.face.antispoof)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&Xy===n&&jp[a]?(Jf++,jp[a]):(Jf=0,new Promise(async l=>{let u=Ue.resizeBilinear(e,[la?.inputs[0].shape?la.inputs[0].shape[2]:0,la?.inputs[0].shape?la.inputs[0].shape[1]:0],!1),d=la?.execute(u),c=(await d.data())[0];jp[a]=Math.round(100*c)/100,Xy=n,Ky=oe(),le([u,d]),l(jp[a])}))}var lr={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Yy={count:468,mouth:13,symmetryLine:[13,lr.midwayBetweenEyes[0]]},Eu={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Jy=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],Kh=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Ru=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],Cde=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],Ede=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Rde=[33,133,362,263,1,78,308],qhe=Cde.map(e=>Kh[e]),Xhe=Ede.map(e=>Kh[e]),Khe=Rde.map(e=>Kh[e]);function vr(e){let t=e.map(a=>a[0]);return t.push(e[e.length-1][1]),t}var _de=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],$de=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Mde=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Fde=[[474,475],[475,476],[476,477],[477,474]],Ode=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Pde=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Dde=[[469,470],[470,471],[471,472],[472,469]],zde=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Zhe={lips:vr(_de),leftEye:vr($de),leftEyebrow:vr(Mde),leftIris:vr(Fde),rightEye:vr(Ode),rightEyebrow:vr(Pde),rightIris:vr(Dde),faceOval:vr(zde)},et={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function Lde(){et.tf255=$e(255,"float32"),et.tf1=$e(1,"float32"),et.tf2=$e(2,"float32"),et.tf05=$e(.5,"float32"),et.tf127=$e(127.5,"float32"),et.rgb=na([.2989,.587,.114],"float32")}var ip=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],Zh=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Qf=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],em=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],Wde=(e,t)=>{let a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],n=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]];return{startPoint:a,endPoint:n,landmarks:e.landmarks,confidence:e.confidence}},tm=(e,t,a)=>{let n=t.shape[1],r=t.shape[2],s=[e.startPoint[1]/n,e.startPoint[0]/r,e.endPoint[1]/n,e.endPoint[0]/r],i=Ue.cropAndResize(t,[s],[0],a),o=Ne(i,et.tf255);return le(i),o},U8=(e,t)=>{let a=Zh(e),n=ip(e),r=[t*n[0]/2,t*n[1]/2];return{startPoint:[a[0]-r[0],a[1]-r[1]],endPoint:[a[0]+r[0],a[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},G8=e=>{let t=Zh(e),a=ip(e),n=Math.max(...a)/2;return{startPoint:[Math.round(t[0]-n),Math.round(t[1]-n)],endPoint:[Math.round(t[0]+n),Math.round(t[1]+n)],landmarks:e.landmarks,confidence:e.confidence}},Bde=e=>{let t=e.map(n=>n[0]),a=e.map(n=>n[1]);return{startPoint:[Math.min(...t),Math.min(...a)],endPoint:[Math.max(...t),Math.max(...a)],landmarks:e}},N2=[[1,0,0],[0,1,0],[0,0,1]],Vde=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Ude=(e,t)=>Vde(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),Qy=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],ri=(e,t)=>{let a=0;for(let n=0;n<e.length;n++)a+=e[n]*t[n];return a},Gde=(e,t)=>{let a=[];for(let n=0;n<e.length;n++)a.push(e[n][t]);return a},ex=(e,t)=>{let a=[],n=e.length;for(let r=0;r<n;r++){a.push([]);for(let s=0;s<n;s++)a[r].push(ri(e[r],Gde(t,s)))}return a},H8=(e,t)=>{let a=Math.cos(e),n=Math.sin(e),r=[[a,-n,0],[n,a,0],[0,0,1]],s=Qy(t[0],t[1]),i=ex(s,r),o=Qy(-t[0],-t[1]);return ex(i,o)},Hde=e=>{let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],n=[-ri(t[0],a),-ri(t[1],a)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]},jde=(e,t)=>[ri(e,t[0]),ri(e,t[1])];function qde(e){let t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},a=[];for(let n=0;n<t.strides.length;n++){let r=t.strides[n],s=Math.floor((e+r-1)/r),i=Math.floor((e+r-1)/r),o=t.anchors[n];for(let l=0;l<s;l++){let u=r*(l+.5);for(let d=0;d<i;d++){let c=r*(d+.5);for(let p=0;p<o;p++)a.push([c,u])}}}return a}function Xde(e,t,a,n,r){let s=ip(t),i=e.map(h=>[s[0]/r*(h[0]-r/2),s[1]/r*(h[1]-r/2),h[2]||0]),o=a&&a!==0&&Math.abs(a)>.2,l=o?H8(a,[0,0]):N2,u=o?i.map(h=>[...jde(h,l),h[2]]):i,d=o?Hde(n):N2,c=Zh(t),p=[ri(c,d[0]),ri(c,d[1])];return u.map(h=>[Math.trunc(h[0]+p[0]),Math.trunc(h[1]+p[1]),Math.trunc(h[2]||0)])}function Kde(e,t,a,n){let r=t.landmarks.length>=Yy.count?Yy.symmetryLine:Eu.symmetryLine,s=0,i=N2,o;if(e&&he.kernels.includes("rotatewithoffset"))if(s=Ude(t.landmarks[r[0]],t.landmarks[r[1]]),s&&s!==0&&Math.abs(s)>.2){let u=Zh(t),d=[u[0]/a.shape[2],u[1]/a.shape[1]],c=Ue.rotateWithOffset(a,s,0,[d[0],d[1]]);i=H8(-s,u),o=tm(t,c,[n,n]),le(c)}else o=tm(t,a,[n,n]);else o=tm(t,a,[n,n]);return[s,i,o]}var Zde=e=>{let t=e.map(n=>n[0]),a=e.map(n=>n[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...a)+(Math.max(...a)-Math.min(...a))/2]},Yde=(e,t)=>{let a=Zde(e),n=ip(t);return{startPoint:[a[0]-n[0]/2,a[1]-n[1]/2],endPoint:[a[0]+n[0]/2,a[1]+n[1]/2]}},tx=6,Jde=1.4,Fn,C2=null,_r=0,Oo=null,Au=()=>_r;async function Qde(e){var t;return he.initial&&(Fn=null),Fn?e.debug&&ae("cached model:",Fn.modelUrl):Fn=await ct((t=e.face.detector)==null?void 0:t.modelPath),_r=Fn.executor&&Fn.inputs[0].shape?Fn.inputs[0].shape[2]:256,Oo=$e(_r,"int32"),C2=Fr(qde(_r)),Fn}function epe(e){if(!C2||!Oo)return Nn([0,0]);let t={};t.boxStarts=Ve(e,[0,1],[-1,2]),t.centers=ke(t.boxStarts,C2),t.boxSizes=Ve(e,[0,3],[-1,2]),t.boxSizesNormalized=Ne(t.boxSizes,Oo),t.centersNormalized=Ne(t.centers,Oo),t.halfBoxSize=Ne(t.boxSizesNormalized,et.tf2),t.starts=we(t.centersNormalized,t.halfBoxSize),t.ends=ke(t.centersNormalized,t.halfBoxSize),t.startNormalized=ie(t.starts,Oo),t.endNormalized=ie(t.ends,Oo);let a=yh([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(n=>le(t[n])),a}async function tpe(e,t){var a,n,r,s;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];let i={};i.resized=Ue.resizeBilinear(e,[_r,_r]),i.div=Ne(i.resized,et.tf127),i.normalized=we(i.div,et.tf05);let o=Fn?.execute(i.normalized);if(Array.isArray(o)&&o.length>2){let c=o.sort((p,h)=>p.size-h.size);i.concat384=ut([c[0],c[2]],2),i.concat512=ut([c[1],c[3]],2),i.concat=ut([i.concat512,i.concat384],1),i.batch=it(i.concat,[0])}else Array.isArray(o)?i.batch=it(o[0]):i.batch=it(o);le(o),i.boxes=epe(i.batch),i.logits=Ve(i.batch,[0,0],[-1,1]),i.sigmoid=Wn(i.logits),i.scores=it(i.sigmoid),i.nms=await Ue.nonMaxSuppressionAsync(i.boxes,i.scores,((a=t.face.detector)==null?void 0:a.maxDetected)||0,((n=t.face.detector)==null?void 0:n.iouThreshold)||0,((r=t.face.detector)==null?void 0:r.minConfidence)||0);let l=await i.nms.array(),u=[],d=await i.scores.data();for(let c=0;c<l.length;c++){let p=d[l[c]];if(p>(((s=t.face.detector)==null?void 0:s.minConfidence)||0)){let h={};h.bbox=Ve(i.boxes,[l[c],0],[1,-1]),h.slice=Ve(i.batch,[l[c],tx-1],[1,-1]),h.squeeze=it(h.slice),h.landmarks=te(h.squeeze,[tx,-1]);let f=await h.bbox.data(),m={startPoint:[f[0],f[1]],endPoint:[f[2],f[3]],landmarks:await h.landmarks.array(),confidence:p},g=Wde(m,[(e.shape[2]||0)/_r,(e.shape[1]||0)/_r]),A=U8(g,t.face.scale||Jde),y=G8(A);u.push(y),Object.keys(h).forEach(x=>le(h[x]))}}return Object.keys(i).forEach(c=>le(i[c])),u}var j8={};jr(j8,{connected:()=>X8,kpt:()=>q8});var q8=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],X8={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},ax=224,ape,npe=5,qp=[8,16,32,32,32];function rpe(){let e=[],t=0;for(;t<npe;){let a=0,n=t;for(;n<qp.length&&qp[n]===qp[t];)a+=2,n++;let r=qp[t],s=Math.ceil(ax/r),i=Math.ceil(ax/r);for(let o=0;o<s;++o)for(let l=0;l<i;++l)for(let u=0;u<a;++u)e.push({x:(l+.5)/i,y:(o+.5)/s});t=n}ape={x:na(e.map(a=>a.x)),y:na(e.map(a=>a.y))}}function op(e,t=[1,1]){let a=[e.map(o=>o[0]),e.map(o=>o[1])],n=[Math.min(...a[0]),Math.min(...a[1])],r=[Math.max(...a[0]),Math.max(...a[1])],s=[n[0],n[1],r[0]-n[0],r[1]-n[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function spe(e,t=[1,1]){let a=[e.map(u=>u[0]),e.map(u=>u[1])],n=[Math.min(...a[0]),Math.min(...a[1])],r=[Math.max(...a[0]),Math.max(...a[1])],s=[(n[0]+r[0])/2,(n[1]+r[1])/2],i=Math.max(s[0]-n[0],s[1]-n[1],-s[0]+r[0],-s[1]+r[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],l=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:l}}function E2(e,t){let a=[e[2]*t,e[3]*t];return[e[0]-(a[0]-e[2])/2,e[1]-(a[1]-e[3])/2,a[0],a[1]]}var K8={initial:!0},ta={detector:null,landmarks:null},rl={detector:[224,224],landmarks:[256,256]},am=Number.MAX_SAFE_INTEGER,ipe={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],detector:[]},Xp=null,Wu,Sr=[[0,0],[0,0],[0,0],[0,0]],nx=0,rx=e=>1-1/(1+Math.exp(e));async function ope(e){var t;if(K8.initial&&(ta.detector=null),!ta.detector&&e.body.detector&&e.body.detector.modelPath){ta.detector=await ct(e.body.detector.modelPath);let a=(t=ta.detector)!=null&&t.executor?Object.values(ta.detector.modelSignature.inputs):void 0;rl.detector[0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,rl.detector[1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}else e.debug&&ta.detector&&ae("cached model:",ta.detector.modelUrl);return rpe(),ta.detector}async function lpe(e){var t;if(K8.initial&&(ta.landmarks=null),ta.landmarks)e.debug&&ae("cached model:",ta.landmarks.modelUrl);else{ta.landmarks=await ct(e.body.modelPath);let a=(t=ta.landmarks)!=null&&t.executor?Object.values(ta.landmarks.modelSignature.inputs):void 0;rl.landmarks[0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,rl.landmarks[1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return ta.landmarks}function upe(e,t){var a,n;let r={};if(!((a=e?.shape)!=null&&a[1])||!((n=e?.shape)!=null&&n[2]))return e;let s;if(Wu&&(r.cropped=Ue.cropAndResize(e,[Wu],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){let i=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],o=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Sr=[[0,0],i,o,[0,0]],r.pad=gs(r.cropped||e,Sr),r.resize=Ue.resizeBilinear(r.pad,[t,t]),s=Ne(r.resize,et.tf255)}else e.shape[1]!==t?(r.resize=Ue.resizeBilinear(r.cropped||e,[t,t]),s=Ne(r.resize,et.tf255)):s=Ne(r.cropped||e,et.tf255);return Object.keys(r).forEach(i=>le(r[i])),s}function dpe(e,t){for(let a of e)a.position=[Math.trunc(a.position[0]*(t[0]+Sr[2][0]+Sr[2][1])/t[0]-Sr[2][0]),Math.trunc(a.position[1]*(t[1]+Sr[1][0]+Sr[1][1])/t[1]-Sr[1][0]),a.position[2]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1],2*a.position[2]/(t[0]+t[1])];if(Wu)for(let a of e)a.positionRaw=[a.positionRaw[0]+Wu[1],a.positionRaw[1]+Wu[0],a.positionRaw[2]],a.position=[Math.trunc(a.positionRaw[0]*t[0]),Math.trunc(a.positionRaw[1]*t[1]),a.positionRaw[2]];return e}function ppe(e){let t=e.find(o=>o.part==="leftPalm"),a=e.find(o=>o.part==="leftWrist"),n=e.find(o=>o.part==="leftIndex");t.position[2]=((a.position[2]||0)+(n.position[2]||0))/2;let r=e.find(o=>o.part==="rightPalm"),s=e.find(o=>o.part==="rightWrist"),i=e.find(o=>o.part==="rightIndex");r.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}async function cpe(e,t,a){var n,r;if(!((n=ta.landmarks)!=null&&n.executor))return null;let s={};[s.ld,s.segmentation,s.heatmap,s.world,s.poseflag]=(r=ta.landmarks)==null?void 0:r.execute(e,ipe.landmarks);let i=(await s.poseflag.data())[0],o=await s.ld.data(),l=await s.world.data();Object.keys(s).forEach(g=>le(s[g]));let u=[],d=5;for(let g=0;g<o.length/d;g++){let A=rx(o[d*g+3]),y=rx(o[d*g+4]),x=Math.trunc(100*A*y*i)/100,b=[o[d*g+0]/rl.landmarks[0],o[d*g+1]/rl.landmarks[1],o[d*g+2]+0],w=[Math.trunc(a[0]*b[0]),Math.trunc(a[1]*b[1]),b[2]],S=[l[d*g+0],l[d*g+1],l[d*g+2]+0];u.push({part:q8[g],positionRaw:b,position:w,distance:S,score:x})}if(i<(t.body.minConfidence||0))return null;ppe(u);let c=dpe(u,a),p=c.map(g=>g.position),h=op(p,[a[0],a[1]]),f={};for(let[g,A]of Object.entries(X8)){let y=[];for(let x=0;x<A.length-1;x++){let b=c.find(S=>S.part===A[x]),w=c.find(S=>S.part===A[x+1]);b&&w&&y.push([b.position,w.position])}f[g]=y}return{id:0,score:Math.trunc(100*i)/100,box:h.box,boxRaw:h.boxRaw,keypoints:c,annotations:f}}async function sx(e,t){let a=[e.shape[2]||0,e.shape[1]||0],n=(t.body.skipTime||0)>oe()-nx,r=am<(t.body.skipFrames||0);if(t.skipAllowed&&n&&r&&Xp!==null)am++;else{let s={};s.landmarks=upe(e,256),Xp=await cpe(s.landmarks,t,a),Object.keys(s).forEach(i=>le(s[i])),nx=oe(),am=0}return Xp?[Xp]:[]}var hc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],dn,Vs=0,nm=[],ix=0,rm=Number.MAX_SAFE_INTEGER;async function hpe(e){if(he.initial&&(dn=null),dn)e.debug&&ae("cached model:",dn.modelUrl);else{dn=await ct(e.object.modelPath);let t=dn?.executor?Object.values(dn.modelSignature.inputs):void 0;Vs=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return dn}async function fpe(e,t,a){if(!e)return[];let n={},r=[],s=await e.array();n.squeeze=it(e);let i=Gn(n.squeeze,6,1);n.stack=en([i[1],i[0],i[3],i[2]],1),n.boxes=it(n.stack),n.scores=it(i[4]),n.classes=it(i[5]),le([e,...i]),n.nms=await Ue.nonMaxSuppressionAsync(n.boxes,n.scores,a.object.maxDetected||0,a.object.iouThreshold,a.object.minConfidence||0);let o=await n.nms.data(),l=0;for(let u of Array.from(o)){let d=Math.trunc(100*s[0][u][4])/100,c=s[0][u][5];if(Number.isNaN(c))continue;let p=hc[c].label,[h,f]=[s[0][u][0]/Vs,s[0][u][1]/Vs],m=[h,f,s[0][u][2]/Vs-h,s[0][u][3]/Vs-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:l++,score:d,class:c,label:p,box:g,boxRaw:m})}return Object.keys(n).forEach(u=>le(n[u])),r}async function ox(e,t){if(!dn?.executor)return[];let a=(t.object.skipTime||0)>oe()-ix,n=rm<(t.object.skipFrames||0);return t.skipAllowed&&a&&n&&nm.length>0?(rm++,nm):(rm=0,new Promise(async r=>{let s=[e.shape[2]||0,e.shape[1]||0],i=Ue.resizeBilinear(e,[Vs,Vs]),o=t.object.enabled?dn?.execute(i,["tower_0/detections"]):null;ix=oe(),le(i);let l=await fpe(o,s,t);nm=l,r(l)}))}var Z8={};jr(Z8,{connected:()=>J8,kpt:()=>Y8});var Y8=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],J8={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Ut,lx=0,ia={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},sm=Number.MAX_SAFE_INTEGER;async function mpe(e){return he.initial&&(Ut=null),Ut?e.debug&&ae("cached model:",Ut.modelUrl):Ut=await ct(e.body.modelPath),Ut}async function gpe(e,t){let[a,n]=e.shape,r=te(e,[n*a]),s=hn(r,0),i=(await s.data())[0];if(i>t){let o=Bl(r,0),l=kh(o,a),u=(await l.data())[0],d=Ne(o,a),c=(await d.data())[0];return le([r,s,o,l,d]),[u,c,i]}return le([r,s]),[0,0,i]}async function ux(e,t){if(!Ut?.executor||!Ut?.inputs[0].shape)return[];let a=(t.body.skipTime||0)>oe()-lx,n=sm<(t.body.skipFrames||0);return t.skipAllowed&&a&&n&&Object.keys(ia.keypoints).length>0?(sm++,[ia]):(sm=0,new Promise(async r=>{let s=De(()=>{var c,p;let h=Ue.resizeBilinear(e,[((c=Ut?.inputs[0].shape)==null?void 0:c[2])||0,((p=Ut?.inputs[0].shape)==null?void 0:p[1])||0],!1),f=ie(h,et.tf2);return we(f,et.tf1)}),i;if(t.body.enabled&&(i=Ut?.execute(s)),lx=oe(),le(s),i){ia.keypoints.length=0;let c=it(i);le(i);let p=gn(c,2);le(c);for(let h=0;h<p.length;h++){let[f,m,g]=await gpe(p[h],t.body.minConfidence);g>(t.body.minConfidence||0)&&ia.keypoints.push({score:Math.round(100*g)/100,part:Y8[h],positionRaw:[f/Ut.inputs[0].shape[2],m/Ut.inputs[0].shape[1]],position:[Math.round(e.shape[2]*f/Ut.inputs[0].shape[2]),Math.round(e.shape[1]*m/Ut.inputs[0].shape[1])]})}p.forEach(h=>le(h))}ia.score=ia.keypoints.reduce((c,p)=>p.score>c?p.score:c,0);let o=ia.keypoints.map(c=>c.position[0]),l=ia.keypoints.map(c=>c.position[1]);ia.box=[Math.min(...o),Math.min(...l),Math.max(...o)-Math.min(...o),Math.max(...l)-Math.min(...l)];let u=ia.keypoints.map(c=>c.positionRaw[0]),d=ia.keypoints.map(c=>c.positionRaw[1]);ia.boxRaw=[Math.min(...u),Math.min(...d),Math.max(...u)-Math.min(...u),Math.max(...d)-Math.min(...d)];for(let[c,p]of Object.entries(J8)){let h=[];for(let f=0;f<p.length-1;f++){let m=ia.keypoints.find(A=>A.part===p[f]),g=ia.keypoints.find(A=>A.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}ia.annotations[c]=h}r([ia])}))}var Ape=["angry","disgust","fear","happy","sad","surprise","neutral"],kn,Kp=[],dx=0,px=0,im=Number.MAX_SAFE_INTEGER;async function ype(e){var t;return he.initial&&(kn=null),kn?e.debug&&ae("cached model:",kn.modelUrl):kn=await ct((t=e.face.emotion)==null?void 0:t.modelPath),kn}async function cx(e,t,a,n){var r,s;if(!kn)return[];let i=im<(((r=t.face.emotion)==null?void 0:r.skipFrames)||0),o=(((s=t.face.emotion)==null?void 0:s.skipTime)||0)>oe()-px;return t.skipAllowed&&o&&i&&dx===n&&Kp[a]&&Kp[a].length>0?(im++,Kp[a]):(im=0,new Promise(async l=>{var u;let d=[];if((u=t.face.emotion)!=null&&u.enabled){let c={},p=kn?.inputs[0].shape?kn.inputs[0].shape[2]:0;c.resize=Ue.resizeBilinear(e,[p,p],!1),c.channels=ie(c.resize,et.rgb),c.grayscale=at(c.channels,3,!0),c.grayscaleSub=we(c.grayscale,et.tf05),c.grayscaleMul=ie(c.grayscaleSub,et.tf2),c.emotion=kn?.execute(c.grayscaleMul),px=oe();let h=await c.emotion.data();for(let f=0;f<h.length;f++)h[f]>(t.face.emotion.minConfidence||0)&&d.push({score:Math.min(.99,Math.trunc(100*h[f])/100),emotion:Ape[f]});d.sort((f,m)=>m.score-f.score),Object.keys(c).forEach(f=>le(c[f]))}Kp[a]=d,dx=n,l(d)}))}var ln,Pr=0,xpe=2.3,om=lr.leftEyeLower0,lm=lr.rightEyeLower0,Do={leftBounds:[om[0],om[om.length-1]],rightBounds:[lm[0],lm[lm.length-1]]},sl={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function bpe(e){var t,a;return he.initial&&(ln=null),ln?e.debug&&ae("cached model:",ln.modelUrl):ln=await ct((t=e.face.iris)==null?void 0:t.modelPath),Pr=ln?.executor&&((a=ln.inputs)==null?void 0:a[0].shape)?ln.inputs[0].shape[2]:0,Pr===-1&&(Pr=64),ln}function Zp(e,t,a,n){for(let r=0;r<Jy.length;r++){let{key:s,indices:i}=Jy[r],o=lr[`${a}${s}`];if(!n||n.includes(s))for(let l=0;l<i.length;l++){let u=i[l];e[o[l]]=[t[u][0],t[u][1],(t[u][2]+e[o[l]][2])/2]}}}var vpe=e=>{let t=e[Do.leftBounds[0]][2],a=e[Do.rightBounds[0]][2];return t-a},hx=(e,t,a,n,r,s=!1)=>{let i=G8(U8(Bde([e[a],e[n]]),xpe)),o=ip(i),l=Ue.cropAndResize(t,[[i.startPoint[1]/r,i.startPoint[0]/r,i.endPoint[1]/r,i.endPoint[0]/r]],[0],[Pr,Pr]);if(s&&he.kernels.includes("flipleftright")){let u=Ue.flipLeftRight(l);le(l),l=u}return{box:i,boxSize:o,crop:l}},fx=(e,t,a,n=!1)=>{let r=[];for(let s=0;s<sl.numCoordinates;s++){let i=e[s*3],o=e[s*3+1],l=e[s*3+2];r.push([(n?1-i/Pr:i/Pr)*a[0]+t.startPoint[0],o/Pr*a[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(sl.index)}},mx=(e,t,a)=>{let n=e[lr[`${a}EyeUpper0`][sl.upperCenter]][2],r=e[lr[`${a}EyeLower0`][sl.lowerCenter]][2],s=(n+r)/2;return t.map((i,o)=>{let l=s;return o===2?l=n:o===4&&(l=r),[i[0],i[1],l]})};async function wpe(e,t,a){if(!ln?.executor)return e;let{box:n,boxSize:r,crop:s}=hx(e,t,Do.leftBounds[0],Do.leftBounds[1],a,!0),{box:i,boxSize:o,crop:l}=hx(e,t,Do.rightBounds[0],Do.rightBounds[1],a,!0),u=ut([s,l]);le(s),le(l);let d=ln.execute(u);le(u);let c=await d.data();le(d);let p=c.slice(0,sl.numCoordinates*3),{rawCoords:h,iris:f}=fx(p,n,r,!0),m=c.slice(sl.numCoordinates*3),{rawCoords:g,iris:A}=fx(m,i,o,!1),y=vpe(e);Math.abs(y)<30?(Zp(e,h,"left",null),Zp(e,g,"right",null)):y<1?Zp(e,h,"left",["EyeUpper0","EyeLower0"]):Zp(e,g,"right",["EyeUpper0","EyeLower0"]);let x=mx(e,f,"left"),b=mx(e,A,"right");return e.concat(x).concat(b)}var kpe=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Ipe=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Spe=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Tpe=[[474,475],[475,476],[476,477],[477,474]],Npe=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Cpe=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Epe=[[469,470],[470,471],[471,472],[472,469]],Rpe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function wr(e){let t=e.map(a=>a[0]);return t.push(e[e.length-1][1]),t}var _pe={lips:wr(kpe),leftEye:wr(Ipe),leftEyebrow:wr(Spe),leftIris:wr(Tpe),rightEye:wr(Npe),rightEyebrow:wr(Cpe),rightIris:wr(Epe),faceOval:wr(Rpe)},$pe=Object.entries(_pe).map(([e,t])=>t.map(a=>[a,e])).flat(),Yhe=new Map($pe),R2=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],_u=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],$u=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];async function Mpe(e,t){var a,n,r,s,i,o,l,u,d,c;let p={lips:await((n=(a=t.filter(m=>m.size===160))==null?void 0:a[0])==null?void 0:n.data()),irisL:await((s=(r=t.filter(m=>m.size===10))==null?void 0:r[0])==null?void 0:s.data()),eyeL:await((o=(i=t.filter(m=>m.size===142))==null?void 0:i[0])==null?void 0:o.data()),irisR:await((u=(l=t.filter(m=>m.size===10))==null?void 0:l[1])==null?void 0:u.data()),eyeR:await((c=(d=t.filter(m=>m.size===142))==null?void 0:d[1])==null?void 0:c.data())};for(let m of Object.values(p))if(!m)return e;let h=_u.reduce((m,g)=>m+=e[g][2],0)/_u.length;for(let m=0;m<p.irisL.length/2;m++)e.push([p.irisL[2*m+0],p.irisL[2*m+1],h]);let f=$u.reduce((m,g)=>m+=e[g][2],0)/$u.length;for(let m=0;m<p.irisR.length/2;m++)e.push([p.irisR[2*m+0],p.irisR[2*m+1],f]);for(let m=0;m<p.eyeL.length/2;m++)e[_u[m]]=[p.eyeL[2*m+0],p.eyeL[2*m+1],e[_u[m]][2]];for(let m=0;m<p.eyeR.length/2;m++)e[$u[m]]=[p.eyeR[2*m+0],p.eyeR[2*m+1],e[$u[m]][2]];for(let m=0;m<p.lips.length/2;m++)e[R2[m]]=[p.lips[2*m+0],p.lips[2*m+1],e[R2[m]][2]];return e}var Mn={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Pt=null,Mu=0;async function Fpe(e,t){var a,n,r,s,i,o,l,u,d,c;if(!Pt?.executor)return[];let p=(((a=t.face.detector)==null?void 0:a.skipTime)||0)>oe()-Mn.timestamp,h=Mn.skipped<(((n=t.face.detector)==null?void 0:n.skipFrames)||0);!t.skipAllowed||!p||!h||Mn.boxes.length===0?(Mn.boxes=await tpe(e,t),Mn.timestamp=oe(),Mn.skipped=0):Mn.skipped++;let f=[],m=[],g=0,A=Mu;for(let y=0;y<Mn.boxes.length;y++){let x=Mn.boxes[y],b=0,w,S={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([b,w,S.tensor]=Kde((r=t.face.detector)==null?void 0:r.rotation,x,e,(s=t.face.mesh)!=null&&s.enabled?Mu:Au()),t.filter.equalization){let N=S.tensor?await P4(S.tensor):void 0;le(S.tensor),N&&(S.tensor=N)}if(S.boxScore=Math.round(100*x.confidence)/100,(i=t.face.mesh)!=null&&i.enabled)if(!Pt)t.debug&&ae("face mesh detection requested, but model is not loaded");else{if(((o=t.face.attention)==null?void 0:o.enabled)&&!he.kernels.includes("atan2"))return t.face.attention.enabled=!1,le(S.tensor),f;let N=Pt.execute(S.tensor),M=await N.find($=>$.shape[$.shape.length-1]===1).data();if(S.faceScore=Math.round(100*M[0])/100,S.faceScore<(((l=t.face.detector)==null?void 0:l.minConfidence)||1)){if(x.confidence=S.faceScore,t.face.mesh.keepInvalid){S.box=Qf(x,e),S.boxRaw=em(x,e),S.score=S.boxScore,S.mesh=x.landmarks.map($=>[(x.startPoint[0]+x.endPoint[0])/2+(x.endPoint[0]+x.startPoint[0])*$[0]/Au(),(x.startPoint[1]+x.endPoint[1])/2+(x.endPoint[1]+x.startPoint[1])*$[1]/Au()]),S.meshRaw=S.mesh.map($=>[$[0]/(e.shape[2]||1),$[1]/(e.shape[1]||1),($[2]||0)/A]);for(let $ of Object.keys(Eu))S.annotations[$]=[S.mesh[Eu[$]]]}}else{let $=N.find(P=>P.shape[P.shape.length-1]===1404),E=te($,[-1,3]),I=await E.array();le(E),(u=t.face.attention)!=null&&u.enabled?I=await Mpe(I,N):(d=t.face.iris)!=null&&d.enabled&&(I=await wpe(I,S.tensor,Mu)),S.mesh=Xde(I,x,b,w,Mu),S.meshRaw=S.mesh.map(P=>[P[0]/(e.shape[2]||0),P[1]/(e.shape[1]||0),(P[2]||0)/A]);for(let P of Object.keys(lr))S.annotations[P]=lr[P].map(D=>S.mesh[D]);S.score=S.faceScore;let R={...Yde(S.mesh,x),confidence:x.confidence,landmarks:x.landmarks};S.box=Qf(R,e),S.boxRaw=em(R,e),m.push(R)}le(N)}else{S.box=Qf(x,e),S.boxRaw=em(x,e),S.score=S.boxScore,S.mesh=x.landmarks.map(N=>[(x.startPoint[0]+x.endPoint[0])/2+(x.endPoint[0]+x.startPoint[0])*N[0]/Au(),(x.startPoint[1]+x.endPoint[1])/2+(x.endPoint[1]+x.startPoint[1])*N[1]/Au()]),S.meshRaw=S.mesh.map(N=>[N[0]/(e.shape[2]||0),N[1]/(e.shape[1]||0),(N[2]||0)/A]);for(let N of Object.keys(Eu))S.annotations[N]=[S.mesh[Eu[N]]]}S.score>(((c=t.face.detector)==null?void 0:c.minConfidence)||1)?f.push(S):le(S.tensor)}return Mn.boxes=m,f}async function Ope(e){var t,a,n,r,s,i;return he.initial&&(Pt=null),((t=e.face.attention)==null?void 0:t.enabled)&&Pt?.signature&&Object.keys(((a=Pt?.signature)==null?void 0:a.outputs)||{}).length<6&&(Pt=null),Pt?e.debug&&ae("cached model:",Pt.modelUrl):(n=e.face.attention)!=null&&n.enabled?Pt=await ct(e.face.attention.modelPath):Pt=await ct((r=e.face.mesh)==null?void 0:r.modelPath),Mu=Pt.executor&&((s=Pt?.inputs)==null?void 0:s[0].shape)?(i=Pt?.inputs)==null?void 0:i[0].shape[2]:256,Pt}var Ppe=Ru,Dpe=Kh,La,_o=[],gx=0,Ax=0,um=Number.MAX_SAFE_INTEGER;async function zpe(e){var t;return he.initial&&(La=null),La?e.debug&&ae("cached model:",La.modelUrl):La=await ct((t=e.face.description)==null?void 0:t.modelPath),La}function Q8(e){let t=e.image||e.tensor||e;if(!La?.inputs[0].shape)return t;let a=Ue.resizeBilinear(t,[La.inputs[0].shape[2],La.inputs[0].shape[1]],!1),n=ie(a,et.tf255);return le(a),n}async function yx(e,t,a,n){var r,s,i,o;let l={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!La?.executor)return l;let u=um<(((r=t.face.description)==null?void 0:r.skipFrames)||0),d=(((s=t.face.description)==null?void 0:s.skipTime)||0)>oe()-gx;return t.skipAllowed&&u&&d&&Ax===n&&((i=_o?.[a])==null?void 0:i.age)>0&&((o=_o?.[a])==null?void 0:o.genderScore)>0?(um++,_o[a]):(um=0,new Promise(async c=>{var p;if((p=t.face.description)!=null&&p.enabled){let h=Q8(e),f=La?.execute(h);gx=oe(),le(h);let g=await f.find(C=>C.shape[1]===1).data(),A=Math.trunc(200*Math.abs(g[0]-.5))/100;A>(t.face.description.minConfidence||0)&&(l.gender=g[0]<=.5?"female":"male",l.genderScore=Math.min(.99,A));let y=Bl(f.find(C=>C.shape[1]===100),1),x=(await y.data())[0];le(y);let w=await f.find(C=>C.shape[1]===100).data();l.age=Math.round(w[x-1]>w[x+1]?10*x-100*w[x-1]:10*x+100*w[x+1])/10,(Number.isNaN(g[0])||Number.isNaN(w[0]))&&ae("faceres error:",{model:La,result:f});let S=f.find(C=>C.shape[1]===1024),N=S?await S.data():[];l.descriptor=Array.from(N),f.forEach(C=>le(C))}_o[a]=l,Ax=n,c(l)}))}var In,dm=[],Lpe=["white","black","asian","indian","other"],Wpe=[15,23,28,35.5,45.5,55.5,65],xx=0,bx=0,pm=Number.MAX_SAFE_INTEGER;async function Bpe(e){var t;return he.initial&&(In=null),In?e.debug&&ae("cached model:",In.modelUrl):In=await ct((t=e.face.gear)==null?void 0:t.modelPath),In}async function vx(e,t,a,n){var r,s;if(!In)return{age:0,gender:"unknown",genderScore:0,race:[]};let i=pm<(((r=t.face.gear)==null?void 0:r.skipFrames)||0),o=(((s=t.face.gear)==null?void 0:s.skipTime)||0)>oe()-bx;return t.skipAllowed&&o&&i&&xx===n&&dm[a]?(pm++,dm[a]):(pm=0,new Promise(async l=>{var u,d;if(!In?.inputs[0].shape)return;let c={},p=[[0,.1,.9,.9]];c.resize=Ue.cropAndResize(e,p,[0],[In.inputs[0].shape[2],In.inputs[0].shape[1]]);let h={age:0,gender:"unknown",genderScore:0,race:[]};(u=t.face.gear)!=null&&u.enabled&&([c.age,c.gender,c.race]=In.execute(c.resize,["age_output","gender_output","race_output"]));let f=await c.gender.data();h.gender=f[0]>f[1]?"male":"female",h.genderScore=Math.round(100*(f[0]>f[1]?f[0]:f[1]))/100;let m=await c.race.data();for(let x=0;x<m.length;x++)m[x]>(((d=t.face.gear)==null?void 0:d.minConfidence)||.2)&&h.race.push({score:Math.round(100*m[x])/100,race:Lpe[x]});h.race.sort((x,b)=>b.score-x.score);let A=Array.from(await c.age.data()).map((x,b)=>[Wpe[b],x]).sort((x,b)=>b[1]-x[1]),y=A[0][0];for(let x=1;x<A.length;x++)y+=A[x][1]*(A[x][0]-y);h.age=Math.round(10*y)/10,Object.keys(c).forEach(x=>le(c[x])),dm[a]=h,xx=n,bx=oe(),l(h)}))}function K1(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Wc(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function Vpe(e,t,a){let n=t.shape[1],r=t.shape[2],s=[[e.startPoint[1]/n,e.startPoint[0]/r,e.endPoint[1]/n,e.endPoint[0]/r]];return Ue.cropAndResize(t,s,[0],a)}function Upe(e,t){let a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],n=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(s=>[s[0]*t[0],s[1]*t[1]]);return{startPoint:a,endPoint:n,palmLandmarks:r,confidence:e.confidence}}function cm(e,t=1.5){let a=Wc(e),n=K1(e),r=[t*n[0]/2,t*n[1]/2],s=[a[0]-r[0],a[1]-r[1]],i=[a[0]+r[0],a[1]+r[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function hm(e){let t=Wc(e),a=K1(e),r=Math.max(...a)/2,s=[t[0]-r,t[1]-r],i=[t[0]+r,t[1]+r];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function Gpe(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function Hpe(e,t){let a=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return Gpe(a)}var wx=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function si(e,t){let a=0;for(let n=0;n<e.length;n++)a+=e[n]*t[n];return a}function jpe(e,t){let a=[];for(let n=0;n<e.length;n++)a.push(e[n][t]);return a}function kx(e,t){let a=[],n=e.length;for(let r=0;r<n;r++){a.push([]);for(let s=0;s<n;s++)a[r].push(si(e[r],jpe(t,s)))}return a}function Ix(e,t){let a=Math.cos(e),n=Math.sin(e),r=[[a,-n,0],[n,a,0],[0,0,1]],s=wx(t[0],t[1]),i=kx(s,r),o=wx(-t[0],-t[1]);return kx(i,o)}function qpe(e){let t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],n=[-si(t[0],a),-si(t[1],a)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]}function Sx(e,t){return[si(e,t[0]),si(e,t[1])]}var Xpe=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],Kpe=class{constructor(e){ue(this,"model"),ue(this,"anchors"),ue(this,"anchorsTensor"),ue(this,"inputSize"),ue(this,"inputSizeTensor"),ue(this,"doubleInputSizeTensor");var t,a,n,r;this.model=e,this.anchors=Xpe.map(s=>[s.x,s.y]),this.anchorsTensor=Fr(this.anchors),this.inputSize=((r=(n=(a=(t=this==null?void 0:this.model)==null?void 0:t.inputs)==null?void 0:a[0])==null?void 0:n.shape)==null?void 0:r[2])||0,this.inputSizeTensor=na([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=na([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){let t={};t.boxOffsets=Ve(e,[0,0],[-1,2]),t.boxSizes=Ve(e,[0,2],[-1,2]),t.div=Ne(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ke(t.div,this.anchorsTensor),t.halfBoxSizes=Ne(t.boxSizes,this.doubleInputSizeTensor),t.sub=we(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=ie(t.sub,this.inputSizeTensor),t.add=ke(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=ie(t.add,this.inputSizeTensor);let a=yh([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(n=>le(t[n])),a}normalizeLandmarks(e,t){let a={};a.reshape=te(e,[-1,7,2]),a.div=Ne(a.reshape,this.inputSizeTensor),a.landmarks=ke(a.div,this.anchors[t]?this.anchors[t]:0);let n=ie(a.landmarks,this.inputSizeTensor);return Object.keys(a).forEach(r=>le(a[r])),n}async predict(e,t){var a;let n={};n.resize=Ue.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=Ne(n.resize,et.tf127),n.image=we(n.div,et.tf1),n.batched=this.model.execute(n.image),n.predictions=it(n.batched),n.slice=Ve(n.predictions,[0,0],[-1,1]),n.sigmoid=Wn(n.slice),n.scores=it(n.sigmoid);let r=await n.scores.data();n.boxes=Ve(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await Ue.nonMaxSuppressionAsync(n.norm,n.scores,3*(((a=t.hand)==null?void 0:a.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);let s=await n.nms.array(),i=[];for(let o of s){let l={};l.box=Ve(n.norm,[o,0],[1,-1]),l.slice=Ve(n.predictions,[o,5],[1,14]),l.norm=this.normalizeLandmarks(l.slice,o),l.palmLandmarks=te(l.norm,[-1,2]);let u=await l.box.data(),d=u.slice(0,2),c=u.slice(2,4),p=await l.palmLandmarks.array(),h={startPoint:d,endPoint:c,palmLandmarks:p,confidence:r[o]},f=Upe(h,[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);i.push(f),Object.keys(l).forEach(m=>le(l[m]))}return Object.keys(n).forEach(o=>le(n[o])),i}},Zpe=5,Tx=1.65,Nx=[0,5,9,13,17,1,2],Ype=0,Jpe=2,Cx=0,Qpe=class{constructor(e,t){ue(this,"handDetector"),ue(this,"handPoseModel"),ue(this,"inputSize"),ue(this,"storedBoxes"),ue(this,"skipped"),ue(this,"detectedHands");var a,n,r;this.handDetector=e,this.handPoseModel=t,this.inputSize=((r=(n=(a=this.handPoseModel)==null?void 0:a.inputs)==null?void 0:n[0].shape)==null?void 0:r[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){let t=e.map(s=>s[0]),a=e.map(s=>s[1]),n=[Math.min(...t),Math.min(...a)],r=[Math.max(...t),Math.max(...a)];return{startPoint:n,endPoint:r}}getBoxForPalmLandmarks(e,t){let a=e.map(r=>Sx([...r,1],t)),n=this.calculateLandmarksBoundingBox(a);return cm(hm(n),Zpe)}getBoxForHandLandmarks(e){let t=this.calculateLandmarksBoundingBox(e),a=cm(hm(t),Tx);a.palmLandmarks=[];for(let n=0;n<Nx.length;n++)a.palmLandmarks.push(e[Nx[n]].slice(0,2));return a}transformRawCoords(e,t,a,n){let r=K1(t),s=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],i=e.map(p=>[s[0]*(p[0]-this.inputSize/2),s[1]*(p[1]-this.inputSize/2),s[2]*p[2]]),o=Ix(a,[0,0]),l=i.map(p=>[...Sx(p,o),p[2]]),u=qpe(n),d=[...Wc(t),1],c=[si(d,u[0]),si(d,u[1])];return l.map(p=>[Math.trunc(p[0]+c[0]),Math.trunc(p[1]+c[1]),Math.trunc(p[2])])}async estimateHands(e,t){let a=!1,n,r=(t.hand.skipTime||0)>oe()-Cx,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&s&&(n=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));let i=[];for(let o=0;o<this.storedBoxes.length;o++){let l=this.storedBoxes[o];if(!!l)if(t.hand.landmarks){let u=t.hand.rotation?Hpe(l.palmLandmarks[Ype],l.palmLandmarks[Jpe]):0,d=Wc(l),c=[d[0]/e.shape[2],d[1]/e.shape[1]],p=t.hand.rotation&&he.kernels.includes("rotatewithoffset")?Ue.rotateWithOffset(e,u,0,c):e.clone(),h=Ix(-u,d),f=a?this.getBoxForPalmLandmarks(l.palmLandmarks,h):l,m=Vpe(f,p,[this.inputSize,this.inputSize]),g=Ne(m,et.tf255);le(m),le(p);let[A,y]=this.handPoseModel.execute(g);Cx=oe(),le(g);let x=(await A.data())[0];if(le(A),x>=t.hand.minConfidence/4){let b=te(y,[-1,3]),w=await b.array();le(y),le(b);let S=this.transformRawCoords(w,f,u,h),N=this.getBoxForHandLandmarks(S);this.storedBoxes[o]={...N,confidence:x};let C={landmarks:S,confidence:x,boxConfidence:l.confidence,fingerConfidence:x,box:{topLeft:N.startPoint,bottomRight:N.endPoint}};i.push(C)}else this.storedBoxes[o]=null;le(y)}else{let u=cm(hm(l),Tx),d={confidence:l.confidence,boxConfidence:l.confidence,fingerConfidence:0,box:{topLeft:u.startPoint,bottomRight:u.endPoint},landmarks:[]};i.push(d)}}return this.storedBoxes=this.storedBoxes.filter(o=>o!==null),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},Wa={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Wa.nameMapping[e],getPoints:e=>Wa.pointsMapping[e]},Go={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>Go.nameMapping[e]},Tt={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Tt.nameMapping[e]},lp=class{constructor(e){ue(this,"name"),ue(this,"curls"),ue(this,"directions"),ue(this,"weights"),ue(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,a){typeof this.curls[e]>"u"&&(this.curls[e]=[]),this.curls[e].push([t,a])}direction(e,t,a){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,a])}weight(e,t){this.weights[e]=t;let a=this.weights.reduce((n,r)=>n+r,0);this.weightsRelative=this.weights.map(n=>n*5/a)}matchAgainst(e,t){let a=0;for(let n in e){let r=e[n],s=this.curls[n];if(typeof s>"u"){a+=this.weightsRelative[n];continue}for(let[i,o]of s)if(r===i){a+=o*this.weightsRelative[n];break}}for(let n in t){let r=t[n],s=this.directions[n];if(typeof s>"u"){a+=this.weightsRelative[n];continue}for(let[i,o]of s)if(r===i){a+=o*this.weightsRelative[n];break}}return a/10}},{thumb:En,index:mr,middle:gr,ring:po,pinky:co}=Wa,{none:Rn,half:ece,full:_n}=Go,{verticalUp:au,verticalDown:Jhe,horizontalLeft:Z1,horizontalRight:tce,diagonalUpRight:ace,diagonalUpLeft:nu,diagonalDownRight:Qhe,diagonalDownLeft:e0e}=Tt,Dr=new lp("thumbs up");Dr.curl(En,Rn,1);Dr.direction(En,au,1);Dr.direction(En,nu,.25);Dr.direction(En,ace,.25);for(let e of[Wa.index,Wa.middle,Wa.ring,Wa.pinky])Dr.curl(e,_n,1),Dr.direction(e,Z1,1),Dr.direction(e,tce,1);var Ot=new lp("victory");Ot.curl(En,ece,.5);Ot.curl(En,Rn,.5);Ot.direction(En,au,1);Ot.direction(En,nu,1);Ot.curl(mr,Rn,1);Ot.direction(mr,au,.75);Ot.direction(mr,nu,1);Ot.curl(gr,Rn,1);Ot.direction(gr,au,1);Ot.direction(gr,nu,.75);Ot.curl(po,_n,1);Ot.direction(po,au,.2);Ot.direction(po,nu,1);Ot.direction(po,Z1,.2);Ot.curl(co,_n,1);Ot.direction(co,au,.2);Ot.direction(co,nu,1);Ot.direction(co,Z1,.2);Ot.weight(mr,2);Ot.weight(gr,2);var ws=new lp("point");ws.curl(En,_n,1);ws.curl(mr,Rn,.5);ws.curl(gr,_n,.5);ws.curl(po,_n,.5);ws.curl(co,_n,.5);ws.weight(mr,2);ws.weight(gr,2);var ks=new lp("middle finger");ks.curl(En,Rn,1);ks.curl(mr,_n,.5);ks.curl(gr,_n,.5);ks.curl(po,_n,.5);ks.curl(co,_n,.5);ks.weight(mr,2);ks.weight(gr,2);var ru=new lp("open palm");ru.curl(En,Rn,.75);ru.curl(mr,Rn,.75);ru.curl(gr,Rn,.75);ru.curl(po,Rn,.75);ru.curl(co,Rn,.75);var nce=[Dr,Ot,ws,ks,ru],rce=.7,Ls={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function Ex(e,t,a,n){let r=(t-n)/(e-a),s=Math.atan(r)*180/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function eI(e,t){if(!e||!t)return[0,0];let a=Ex(e[0],e[1],t[0],t[1]);if(e.length===2)return a;let n=Ex(e[1],e[2],t[1],t[2]);return[a,n]}function Rx(e,t=1){let a=0,n=0,r=0;return e>=75&&e<=105?a=1*t:e>=25&&e<=155?n=1*t:r=1*t,[a,n,r]}function sce(e,t,a){let n=e[0]-t[0],r=e[0]-a[0],s=t[0]-a[0],i=e[1]-t[1],o=e[1]-a[1],l=t[1]-a[1],u=e[2]-t[2],d=e[2]-a[2],c=t[2]-a[2],p=Math.sqrt(n*n+i*i+u*u),h=Math.sqrt(r*r+o*o+d*d),f=Math.sqrt(s*s+l*l+c*c),m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let A;return g>Ls.NO_CURL_START_LIMIT?A=Go.none:g>Ls.HALF_CURL_START_LIMIT?A=Go.half:A=Go.full,A}function tI(e,t,a,n){let r;return n===Math.abs(e)?e>0?r=Tt.horizontalLeft:r=Tt.horizontalRight:n===Math.abs(t)?t>0?r=Tt.horizontalLeft:r=Tt.horizontalRight:a>0?r=Tt.horizontalLeft:r=Tt.horizontalRight,r}function aI(e,t,a,n){let r;return n===Math.abs(e)?e<0?r=Tt.verticalDown:r=Tt.verticalUp:n===Math.abs(t)?t<0?r=Tt.verticalDown:r=Tt.verticalUp:a<0?r=Tt.verticalDown:r=Tt.verticalUp,r}function ice(e,t,a,n,r,s,i,o){let l,u=aI(e,t,a,n),d=tI(r,s,i,o);return u===Tt.verticalUp?d===Tt.horizontalLeft?l=Tt.diagonalUpLeft:l=Tt.diagonalUpRight:d===Tt.horizontalLeft?l=Tt.diagonalDownLeft:l=Tt.diagonalDownRight,l}function oce(e,t,a,n){let r=e[0]-t[0],s=e[0]-a[0],i=t[0]-a[0],o=e[1]-t[1],l=e[1]-a[1],u=t[1]-a[1],d=Math.max(Math.abs(r),Math.abs(s),Math.abs(i)),c=Math.max(Math.abs(o),Math.abs(l),Math.abs(u)),p=0,h=0,f=0,m=c/(d+1e-5);m>1.5?p+=Ls.DISTANCE_VOTE_POWER:m>.66?h+=Ls.DISTANCE_VOTE_POWER:f+=Ls.DISTANCE_VOTE_POWER;let g=Math.sqrt(r*r+o*o),A=Math.sqrt(s*s+l*l),y=Math.sqrt(i*i+u*u),x=Math.max(g,A,y),b=e[0],w=e[1],S=a[0],N=a[1];x===g?(S=a[0],N=a[1]):x===y&&(b=t[0],w=t[1]);let $=eI([b,w],[S,N]),E=Rx($,Ls.TOTAL_ANGLE_VOTE_POWER);p+=E[0],h+=E[1],f+=E[2];for(let R of n){let P=Rx(R,Ls.SINGLE_ANGLE_VOTE_POWER);p+=P[0],h+=P[1],f+=P[2]}let I;return p===Math.max(p,h,f)?I=aI(l,o,u,c):f===Math.max(h,f)?I=tI(s,r,i,d):I=ice(l,o,u,c,s,r,i,d),I}function nI(e){let t=[],a=[],n=[],r=[];if(!e)return{curls:n,directions:r};for(let s of Wa.all){let i=Wa.getPoints(s),o=[],l=[];for(let u of i){let d=e[u[0]],c=e[u[1]],p=eI(d,c),h=p[0],f=p[1];o.push(h),l.push(f)}t.push(o),a.push(l)}for(let s of Wa.all){let i=s===Wa.thumb?1:0,o=Wa.getPoints(s),l=e[o[i][0]],u=e[o[i+1][1]],d=e[o[3][1]],c=sce(l,u,d),p=oce(l,u,d,t[s].slice(i));n[s]=c,r[s]=p}return{curls:n,directions:r}}function rI(e){if(!e||e.length===0)return null;let t=nI(e),a={};for(let n of Wa.all)a[Wa.getName(n)]={curl:Go.getName(t.curls[n]),direction:Tt.getName(t.directions[n])};return a}function lce(e){let t=[];if(!e||e.length===0)return t;let a=nI(e);for(let n of nce){let r=n.matchAgainst(a.curls,a.directions);r>=rce&&t.push({name:n.name,confidence:r})}return t}var _x={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Es,Rs,sI;async function $x(e,t){let a=await sI.estimateHands(e,t);if(!a)return[];let n=[];for(let r=0;r<a.length;r++){let s={};if(a[r].landmarks)for(let d of Object.keys(_x))s[d]=_x[d].map(c=>a[r].landmarks[c]);let i=a[r].landmarks,o=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],l=[0,0,0,0];if(i&&i.length>0){for(let d of i)d[0]<o[0]&&(o[0]=d[0]),d[1]<o[1]&&(o[1]=d[1]),d[0]>o[2]&&(o[2]=d[0]),d[1]>o[3]&&(o[3]=d[1]);o[2]-=o[0],o[3]-=o[1],l=[o[0]/(e.shape[2]||0),o[1]/(e.shape[1]||0),o[2]/(e.shape[2]||0),o[3]/(e.shape[1]||0)]}else o=a[r].box?[Math.trunc(Math.max(0,a[r].box.topLeft[0])),Math.trunc(Math.max(0,a[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,a[r].box.bottomRight[0])-Math.max(0,a[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,a[r].box.bottomRight[1])-Math.max(0,a[r].box.topLeft[1]))]:[0,0,0,0],l=[a[r].box.topLeft[0]/(e.shape[2]||0),a[r].box.topLeft[1]/(e.shape[1]||0),(a[r].box.bottomRight[0]-a[r].box.topLeft[0])/(e.shape[2]||0),(a[r].box.bottomRight[1]-a[r].box.topLeft[1])/(e.shape[1]||0)];let u=rI(i);n.push({id:r,score:Math.round(100*a[r].confidence)/100,boxScore:Math.round(100*a[r].boxConfidence)/100,fingerScore:Math.round(100*a[r].fingerConfidence)/100,label:"hand",box:o,boxRaw:l,keypoints:i,annotations:s,landmarks:u})}return n}async function Mx(e){var t,a;he.initial&&(Es=null,Rs=null),!Es||!Rs?[Es,Rs]=await Promise.all([e.hand.enabled?ct((t=e.hand.detector)==null?void 0:t.modelPath):null,e.hand.landmarks?ct((a=e.hand.skeleton)==null?void 0:a.modelPath):null]):(e.debug&&ae("cached model:",Es.modelUrl),e.debug&&ae("cached model:",Rs.modelUrl));let n=Es?new Kpe(Es):void 0;return n&&Rs&&(sI=new Qpe(n,Rs)),[Es,Rs]}var Nt=[null,null],uce=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],$r=[[0,0],[0,0]],dce=["hand","fist","pinch","point","face","tip","pinchtip"],Fx=4,Ox=1.6,pce=512,cce=1.4,Yp=Number.MAX_SAFE_INTEGER,fm=0,ar=[0,0],It={boxes:[],hands:[]},Px={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function hce(e){var t;if(he.initial&&(Nt[0]=null),Nt[0])e.debug&&ae("cached model:",Nt[0].modelUrl);else{vI(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Nt[0]=await ct((t=e.hand.detector)==null?void 0:t.modelPath);let a=Nt[0].executor?Object.values(Nt[0].modelSignature.inputs):void 0;$r[0][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,$r[0][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Nt[0]}async function fce(e){var t;if(he.initial&&(Nt[1]=null),Nt[1])e.debug&&ae("cached model:",Nt[1].modelUrl);else{Nt[1]=await ct((t=e.hand.skeleton)==null?void 0:t.modelPath);let a=Nt[1].executor?Object.values(Nt[1].modelSignature.inputs):void 0;$r[1][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,$r[1][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Nt[1]}async function mce(e,t){let a=[];if(!e||!Nt[0])return a;let n={},r=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(Math.round((e.shape[1]||0)/8)*8,pce),i=Math.round(s*r/8)*8;n.resize=Ue.resizeBilinear(e,[s,i]),n.cast=Xe(n.resize,"int32"),[n.rawScores,n.rawBoxes]=await Nt[0].executeAsync(n.cast,uce),n.boxes=it(n.rawBoxes,[0,2]),n.scores=it(n.rawScores,[0]);let o=gn(n.scores,1);le(o[Fx]),o.splice(Fx,1),n.filtered=en(o,1),le(o),n.max=hn(n.filtered,1),n.argmax=Bl(n.filtered,1);let l=0;n.nms=await Ue.nonMaxSuppressionAsync(n.boxes,n.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);let u=await n.nms.data(),d=await n.max.data(),c=await n.argmax.data();for(let p of Array.from(u)){let h=Ve(n.boxes,p,1),f=await h.data();le(h);let m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=E2(m,cce),A=[Math.trunc(m[0]*ar[0]),Math.trunc(m[1]*ar[1]),Math.trunc(m[2]*ar[0]),Math.trunc(m[3]*ar[1])],y=d[p],x=dce[c[p]],b={id:l++,score:y,box:A,boxRaw:g,label:x};a.push(b)}return Object.keys(n).forEach(p=>le(n[p])),a.sort((p,h)=>h.score-p.score),a.length>(t.hand.maxDetected||1)&&(a.length=t.hand.maxDetected||1),a}async function mm(e,t,a){let n={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Nt[1]&&a.hand.landmarks&&t.score>(a.hand.minConfidence||0)){let r={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Ue.cropAndResize(e,[s],[0],[$r[1][0],$r[1][1]],"bilinear"),r.div=Ne(r.crop,et.tf255),[r.score,r.keypoints]=Nt[1].execute(r.div,["Identity_1","Identity"]);let i=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(a.hand.minConfidence||0)){n.fingerScore=o,r.reshaped=te(r.keypoints,[-1,3]);let d=(await r.reshaped.array()).map(c=>[c[0]/$r[1][1],c[1]/$r[1][0],c[2]||0]).map(c=>[c[0]*t.boxRaw[2],c[1]*t.boxRaw[3],c[2]||0]);n.keypoints=d.map(c=>[ar[0]*(c[0]+t.boxRaw[0]),ar[1]*(c[1]+t.boxRaw[1]),c[2]||0]),n.landmarks=rI(n.keypoints);for(let c of Object.keys(Px))n.annotations[c]=Px[c].map(p=>n.landmarks&&n.keypoints[p]?n.keypoints[p]:null)}Object.keys(r).forEach(l=>le(r[l]))}return n}async function Dx(e,t){var a,n;if(!((a=Nt[0])!=null&&a.executor)||!((n=Nt[1])!=null&&n.executor)||!Nt[0].inputs[0].shape||!Nt[1].inputs[0].shape)return[];ar=[e.shape[2]||0,e.shape[1]||0],Yp++;let r=(t.hand.skipTime||0)>oe()-fm,s=Yp<(t.hand.skipFrames||0);return t.skipAllowed&&r&&s?It.hands:new Promise(async i=>{let o=3*(t.hand.skipTime||0)>oe()-fm,l=Yp<3*(t.hand.skipFrames||0);t.skipAllowed&&It.hands.length===t.hand.maxDetected?It.hands=await Promise.all(It.boxes.map(d=>mm(e,d,t))):t.skipAllowed&&o&&l&&It.hands.length>0?It.hands=await Promise.all(It.boxes.map(d=>mm(e,d,t))):(It.boxes=await mce(e,t),fm=oe(),It.hands=await Promise.all(It.boxes.map(d=>mm(e,d,t))),Yp=0);let u=[...It.boxes];if(It.boxes.length=0,t.cacheSensitivity>0)for(let d=0;d<It.hands.length;d++){let c=spe(It.hands[d].keypoints,ar);if(c.box[2]/(e.shape[2]||1)>.05&&c.box[3]/(e.shape[1]||1)>.05&&It.hands[d].fingerScore&&It.hands[d].fingerScore>(t.hand.minConfidence||0)){let p=E2(c.box,Ox),h=E2(c.boxRaw,Ox);It.boxes.push({...u[d],box:p,boxRaw:h})}}for(let d=0;d<It.hands.length;d++){let c=op(It.hands[d].keypoints,ar);It.hands[d].box=c.box,It.hands[d].boxRaw=c.boxRaw}i(It.hands)})}var pn,gm=[],zx=0,Lx=0,Wx=Number.MAX_SAFE_INTEGER;async function gce(e){return he.initial&&(pn=null),pn?e.debug&&ae("cached model:",pn.modelUrl):pn=await ct(e.face.insightface.modelPath),pn}async function Bx(e,t,a,n){var r,s;if(!pn?.executor)return[];let i=Wx<(((r=t.face.insightface)==null?void 0:r.skipFrames)||0),o=(((s=t.face.insightface)==null?void 0:s.skipTime)||0)>oe()-Lx;return t.skipAllowed&&o&&i&&zx===n&&gm[a]?(Wx++,gm[a]):new Promise(async l=>{var u;let d=[];if(((u=t.face.insightface)==null?void 0:u.enabled)&&pn?.inputs[0].shape){let c={};c.crop=Ue.resizeBilinear(e,[pn.inputs[0].shape[2],pn.inputs[0].shape[1]],!1),c.data=pn.execute(c.crop);let p=await c.data.data();d=Array.from(p),Object.keys(c).forEach(h=>le(c[h]))}gm[a]=d,zx=n,Lx=oe(),l(d)})}var Ta,Jp=[],Am=Number.MAX_SAFE_INTEGER,Vx=0,Ux=0;async function Ace(e){var t;return he.initial&&(Ta=null),Ta?e.debug&&ae("cached model:",Ta.modelUrl):Ta=await ct((t=e.face.liveness)==null?void 0:t.modelPath),Ta}async function Gx(e,t,a,n){var r,s;if(!Ta?.executor)return 0;let i=(((r=t.face.liveness)==null?void 0:r.skipTime)||0)>oe()-Ux,o=Am<(((s=t.face.liveness)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&Vx===n&&Jp[a]?(Am++,Jp[a]):(Am=0,new Promise(async l=>{let u=Ue.resizeBilinear(e,[Ta?.inputs[0].shape?Ta.inputs[0].shape[2]:0,Ta?.inputs[0].shape?Ta.inputs[0].shape[1]:0],!1),d=Ta?.execute(u),c=(await d.data())[0];Jp[a]=Math.round(100*c)/100,Vx=n,Ux=oe(),le([u,d]),l(Jp[a])}))}var Ia;async function iI(e){return!Ia||he.initial?Ia=await ct(e.segmentation.modelPath):e.debug&&ae("cached model:",Ia.modelUrl),Ia}async function yce(e,t){var a;if(Ia||(Ia=await iI(t)),!Ia?.executor||!((a=Ia?.inputs)!=null&&a[0].shape))return null;let n={};n.resize=Ue.resizeBilinear(e,[Ia.inputs[0].shape?Ia.inputs[0].shape[1]:0,Ia.inputs[0].shape?Ia.inputs[0].shape[2]:0],!1),n.norm=Ne(n.resize,et.tf255),n.res=Ia.execute(n.norm),n.squeeze=it(n.res,[0]),[n.bgRaw,n.fgRaw]=gn(n.squeeze,2),n.fg=qg(n.fgRaw),n.mul=ie(n.fg,et.tf255),n.expand=Pa(n.mul,2),n.output=Ue.resizeBilinear(n.expand,[e.shape[1]||0,e.shape[2]||0]);let r;switch(t.segmentation.mode||"default"){case"default":n.input=it(e),n.concat=ut([n.input,n.output],-1),r=Xe(n.concat,"int32");break;case"alpha":r=Xe(n.output,"int32");break;default:r=Be(0)}return Object.keys(n).forEach(s=>le(n[s])),r}var cn,ym=[],Hx=0,jx=0,qx=Number.MAX_SAFE_INTEGER;async function xce(e){var t;return he.initial&&(cn=null),cn?e.debug&&ae("cached model:",cn.modelUrl):cn=await ct((t=e.face.mobilefacenet)==null?void 0:t.modelPath),cn}async function Xx(e,t,a,n){var r,s;if(!cn?.executor)return[];let i=qx<(((r=t.face.mobilefacenet)==null?void 0:r.skipFrames)||0),o=(((s=t.face.mobilefacenet)==null?void 0:s.skipTime)||0)>oe()-jx;return t.skipAllowed&&o&&i&&Hx===n&&ym[a]?(qx++,ym[a]):new Promise(async l=>{var u;let d=[];if(((u=t.face.mobilefacenet)==null?void 0:u.enabled)&&cn?.inputs[0].shape){let c={};c.crop=Ue.resizeBilinear(e,[cn.inputs[0].shape[2],cn.inputs[0].shape[1]],!1),c.data=cn.execute(c.crop);let p=await c.data.data();d=Array.from(p),Object.keys(c).forEach(h=>le(c[h]))}ym[a]=d,Hx=n,jx=oe(),l(d)})}var oI={};jr(oI,{connected:()=>J1,horizontal:()=>lI,kpt:()=>Y1,relative:()=>dI,vertical:()=>uI});var Y1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],lI=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],uI=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],dI=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],J1={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Kx=.005,Da={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function pI(e){for(let t of lI){let a=e.keypoints.findIndex(r=>r.part===t[0]),n=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[a]&&e.keypoints[n]&&e.keypoints[a].position[0]<e.keypoints[n].position[0]){let r=e.keypoints[a];e.keypoints[a]=e.keypoints[n],e.keypoints[n]=r}}for(let t of uI){let a=e.keypoints.findIndex(r=>r&&r.part===t[0]),n=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[a]&&e.keypoints[n]&&e.keypoints[a].position[1]<e.keypoints[n].position[1]&&e.keypoints.splice(a,1)}for(let[t,a]of dI){let n=e.keypoints.findIndex(u=>u&&u.part===t[0]),r=e.keypoints.findIndex(u=>u&&u.part===t[1]),s=e.keypoints.findIndex(u=>u&&u.part===a[0]),i=e.keypoints.findIndex(u=>u&&u.part===a[1]);if(!e.keypoints[s]||!e.keypoints[i])continue;let o=e.keypoints[n]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[n].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[n].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){let u=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=u}}}function bce(e){for(let t=0;t<e.length;t++)if(e[t]&&Da.keypoints[t]){let a=[Math.abs(e[t].positionRaw[0]-Da.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-Da.keypoints[t].positionRaw[1])];a[0]<Kx&&a[1]<Kx?e[t]=Da.keypoints[t]:Da.keypoints[t]=e[t]}else Da.keypoints[t]=e[t];return e}function vce(e,t){var a,n;let r={};if(!((a=e?.shape)!=null&&a[1])||!((n=e?.shape)!=null&&n[2]))return e;Da.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=gs(e,Da.padding),r.resize=Ue.resizeBilinear(r.pad,[t,t]);let s=Xe(r.resize,"int32");return Object.keys(r).forEach(i=>le(r[i])),s}function wce(e,t){e.keypoints=e.keypoints.filter(n=>n?.position);for(let n of e.keypoints)n.position=[n.position[0]*(t[0]+Da.padding[2][0]+Da.padding[2][1])/t[0]-Da.padding[2][0],n.position[1]*(t[1]+Da.padding[1][0]+Da.padding[1][1])/t[1]-Da.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];let a=op(e.keypoints.map(n=>n.position),t);return e.box=a.box,e.boxRaw=a.boxRaw,e}var ua,fc=0,xm=Number.MAX_SAFE_INTEGER,_s={boxes:[],bodies:[],last:0};async function kce(e){var t;return he.initial&&(ua=null),ua?e.debug&&ae("cached model:",ua.modelUrl):(vI(["size"],e),ua=await ct(e.body.modelPath)),fc=ua?.executor&&((t=ua?.inputs)==null?void 0:t[0].shape)?ua.inputs[0].shape[2]:0,fc<64&&(fc=256),ua}function Ice(e,t,a){let n=e[0][0],r=[],s=0;for(let d=0;d<n.length;d++)if(s=n[d][2],s>t.body.minConfidence){let c=[n[d][1],n[d][0]];r.push({score:Math.round(100*s)/100,part:Y1[d],positionRaw:c,position:[Math.round((a.shape[2]||0)*c[0]),Math.round((a.shape[1]||0)*c[1])]})}s=r.reduce((d,c)=>c.score>d?c.score:d,0);let i=[],o=op(r.map(d=>d.position),[a.shape[2],a.shape[1]]),l={};for(let[d,c]of Object.entries(J1)){let p=[];for(let h=0;h<c.length-1;h++){let f=r.find(g=>g.part===c[h]),m=r.find(g=>g.part===c[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&p.push([f.position,m.position])}l[d]=p}let u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:l};return pI(u),i.push(u),i}function Sce(e,t,a){let n=[];for(let r=0;r<e[0].length;r++){let s=e[0][r],i=Math.round(100*s[51+4])/100;if(i>t.body.minConfidence){let o=[];for(let c=0;c<17;c++){let p=s[3*c+2];if(p>t.body.minConfidence){let h=[s[3*c+1],s[3*c+0]];o.push({part:Y1[c],score:Math.round(100*p)/100,positionRaw:h,position:[Math.round((a.shape[2]||0)*h[0]),Math.round((a.shape[1]||0)*h[1])]})}}let l=op(o.map(c=>c.position),[a.shape[2],a.shape[1]]),u={};for(let[c,p]of Object.entries(J1)){let h=[];for(let f=0;f<p.length-1;f++){let m=o.find(A=>A.part===p[f]),g=o.find(A=>A.part===p[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}u[c]=h}let d={id:r,score:i,box:l.box,boxRaw:l.boxRaw,keypoints:[...o],annotations:u};pI(d),n.push(d)}}return n.sort((r,s)=>s.score-r.score),n.length>t.body.maxDetected&&(n.length=t.body.maxDetected),n}async function Zx(e,t){var a;if(!ua?.executor||!((a=ua?.inputs)!=null&&a[0].shape))return[];t.skipAllowed||(_s.boxes.length=0),xm++;let n=(t.body.skipTime||0)>oe()-_s.last,r=xm<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?_s.bodies:new Promise(async s=>{let i={};xm=0,i.input=vce(e,fc),i.res=ua?.execute(i.input),_s.last=oe();let o=await i.res.array();_s.bodies=i.res.shape[2]===17?Ice(o,t,e):Sce(o,t,e);for(let l of _s.bodies)wce(l,[e.shape[2]||1,e.shape[1]||1]),bce(l.keypoints);Object.keys(i).forEach(l=>le(i[l])),s(_s.bodies)})}var On,Qp=[],Yx=0,bm=Number.MAX_SAFE_INTEGER,Bc=0,ec=2.5;async function Tce(e){if(!On||he.initial){On=await ct(e.object.modelPath);let t=On?.executor?Object.values(On.modelSignature.inputs):void 0;Bc=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&ae("cached model:",On.modelUrl);return On}async function Nce(e,t,a){var n,r;let s=0,i=[],o=Bc;for(let c of[1,2,4]){let p=c*13,h=it(e.find(x=>x.shape[1]===p**2&&(x.shape[2]||0)===hc.length)),f=await h.array(),m=it(e.find(x=>x.shape[1]===p**2&&(x.shape[2]||0)<hc.length)),g=te(m,[-1,4,(((n=m.shape)==null?void 0:n[1])||0)/4]),A=Bl(g,2),y=await A.array();for(let x=0;x<h.shape[0];x++)for(let b=0;b<(((r=h.shape)==null?void 0:r[1])||0);b++){let w=f[x][b];if(w>(a.object.minConfidence||0)&&b!==61){let S=(.5+Math.trunc(x%p))/p,N=(.5+Math.trunc(x/p))/p,C=y[x].map(W=>W*(p/c/o)),[M,$]=[S-ec/c*C[0],N-ec/c*C[1]],[E,I]=[S+ec/c*C[2]-M,N+ec/c*C[3]-$],R=[M,$,E,I];R=R.map(W=>Math.max(0,Math.min(W,1)));let P=[R[0]*t[0],R[1]*t[1],R[2]*t[0],R[3]*t[1]],D={id:s++,score:Math.round(100*w)/100,class:b+1,label:hc[b].label,box:P.map(W=>Math.trunc(W)),boxRaw:R};i.push(D)}}le([h,m,g,A])}let l=i.map(c=>[c.boxRaw[1],c.boxRaw[0],c.boxRaw[3],c.boxRaw[2]]),u=i.map(c=>c.score),d=[];if(l&&l.length>0){let c=await Ue.nonMaxSuppressionAsync(l,u,a.object.maxDetected||0,a.object.iouThreshold,a.object.minConfidence);d=Array.from(await c.data()),le(c)}return i=i.filter((c,p)=>d.includes(p)).sort((c,p)=>p.score-c.score),i}async function Jx(e,t){if(!On?.executor)return[];let a=(t.object.skipTime||0)>oe()-Yx,n=bm<(t.object.skipFrames||0);return t.skipAllowed&&a&&n&&Qp.length>0?(bm++,Qp):(bm=0,!he.kernels.includes("mod")||!he.kernels.includes("sparsetodense")?Qp:new Promise(async r=>{let s=[e.shape[2]||0,e.shape[1]||0],i=Ue.resizeBilinear(e,[Bc,Bc],!1),o=Ne(i,et.tf255),l=Ko(o,[0,3,1,2]),u;t.object.enabled&&(u=On.execute(l)),Yx=oe();let d=await Nce(u,s,t);Qp=d,le([i,o,l,...u]),r(d)}))}var Yh=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Cce=Yh.length,Vc=Yh.reduce((e,t,a)=>(e[t]=a,e),{}),Ece=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]],t0e=Ece.map(([e,t])=>[Vc[e],Vc[t]]),Rce=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function _ce(e){let t=e.reduce(({maxX:a,maxY:n,minX:r,minY:s},{position:{x:i,y:o}})=>({maxX:Math.max(a,i),maxY:Math.max(n,o),minX:Math.min(r,i),minY:Math.min(s,o)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function $ce(e,[t,a],[n,r]){let s=t/n,i=a/r,o=(u,d)=>({id:d,score:u.score,boxRaw:[u.box[0]/r,u.box[1]/n,u.box[2]/r,u.box[3]/n],box:[Math.trunc(u.box[0]*i),Math.trunc(u.box[1]*s),Math.trunc(u.box[2]*i),Math.trunc(u.box[3]*s)],keypoints:u.keypoints.map(({score:c,part:p,position:h})=>({score:c,part:p,position:[Math.trunc(h.x*i),Math.trunc(h.y*s)],positionRaw:[h.x/n,h.y/n]})),annotations:{}});return e.map((u,d)=>o(u,d))}var Mce=class{constructor(e,t){ue(this,"priorityQueue"),ue(this,"numberOfElements"),ue(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){let e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){let a=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=a}};function cI(e,t,a,n){return{y:n.get(e,t,a),x:n.get(e,t,a+Cce)}}function hI(e,t,a){let{heatmapY:n,heatmapX:r,id:s}=e,{y:i,x:o}=cI(n,r,s,a);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function Qx(e,t,a){return e<t?t:e>a?a:e}function Fce(e,t,a,n){let r=a-e,s=n-t;return r*r+s*s}function e5(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Za,Oce=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],tc=1,zo=16,Pce=50**2;function t5(e,t,a,n,r,s,i=2){let o=A=>({y:s.get(A.y,A.x,e),x:s.get(A.y,A.x,s.shape[2]/2+e)}),l=(A,y,x)=>({y:Qx(Math.round(A.y/zo),0,y-1),x:Qx(Math.round(A.x/zo),0,x-1)}),[u,d]=n.shape,c=l(t.position,u,d),p=o(c),f=e5(t.position,p);for(let A=0;A<i;A++){let y=l(f,u,d),x=cI(y.y,y.x,a,r);f=e5({x:y.x*zo,y:y.y*zo},{x:x.x,y:x.y})}let m=l(f,u,d),g=n.get(m.y,m.x,a);return{position:f,part:Yh[a],score:g}}function Dce(e,t,a,n,r){let s=Rce.map(([p,h])=>[Vc[p],Vc[h]]),i=s.map(([,p])=>p),o=s.map(([p])=>p),l=t.shape[2],u=i.length,d=new Array(l),c=hI(e.part,zo,a);d[e.part.id]={score:e.score,part:Yh[e.part.id],position:c};for(let p=u-1;p>=0;--p){let h=i[p],f=o[p];d[h]&&!d[f]&&(d[f]=t5(p,d[h],f,t,a,r))}for(let p=0;p<u;++p){let h=o[p],f=i[p];d[h]&&!d[f]&&(d[f]=t5(p,d[h],f,t,a,n))}return d}function zce(e,t,a,n,r){let[s,i]=r.shape,o=!0,l=Math.max(a-tc,0),u=Math.min(a+tc+1,s);for(let d=l;d<u;++d){let c=Math.max(n-tc,0),p=Math.min(n+tc+1,i);for(let h=c;h<p;++h)if(r.get(d,h,e)>t){o=!1;break}if(!o)break}return o}function Lce(e,t){let[a,n,r]=t.shape,s=new Mce(a*n*r,({score:i})=>i);for(let i=0;i<a;++i)for(let o=0;o<n;++o)for(let l=0;l<r;++l){let u=t.get(i,o,l);u<e||zce(l,u,i,o,t)&&s.enqueue({score:u,part:{heatmapY:i,heatmapX:o,id:l}})}return s}function fI(e,{x:t,y:a},n){return e.some(({keypoints:r})=>{var s;let i=(s=r[n])==null?void 0:s.position;return i?Fce(a,t,i.y,i.x)<=Pce:!1})}function Wce(e,t){return t.reduce((n,{position:r,score:s},i)=>(fI(e,r,i)||(n+=s),n),0)/t.length}function Bce(e,t,a,n,r,s){let i=[],o=Lce(s,t);for(;i.length<r&&!o.empty();){let l=o.dequeue(),u=hI(l.part,zo,e);if(fI(i,u,l.part.id))continue;let d=Dce(l,t,e,a,n);d=d.filter(h=>h.score>s);let c=Wce(i,d),p=_ce(d);c>s&&i.push({keypoints:d,box:p,score:Math.round(100*c)/100})}return i}async function a5(e,t){if(!Za?.executor)return[];let a=De(()=>{if(!Za.inputs[0].shape)return[];let i=Ue.resizeBilinear(e,[Za.inputs[0].shape[2],Za.inputs[0].shape[1]]),o=we(Ne(Xe(i,"float32"),127.5),1),u=Za.execute(o,Oce).map(d=>it(d,[0]));return u[1]=Wn(u[1]),u}),n=await Promise.all(a.map(i=>i.buffer()));for(let i of a)le(i);let r=Bce(n[0],n[1],n[2],n[3],t.body.maxDetected,t.body.minConfidence);return Za.inputs[0].shape?$ce(r,[e.shape[1],e.shape[2]],[Za.inputs[0].shape[2],Za.inputs[0].shape[1]]):[]}async function Vce(e){return!Za||he.initial?Za=await ct(e.body.modelPath):e.debug&&ae("cached model:",Za.modelUrl),Za}var Qn,Uce=["fgr","pha","r1o","r2o","r3o","r4o"],$t={},_2=0;function mI(e){le([$t.r1i,$t.r2i,$t.r3i,$t.r4i,$t.downsample_ratio]),$t.r1i=Be(0),$t.r2i=Be(0),$t.r3i=Be(0),$t.r4i=Be(0),_2=e.segmentation.ratio||.5,$t.downsample_ratio=Be(_2)}async function gI(e){return!Qn||he.initial?Qn=await ct(e.segmentation.modelPath):e.debug&&ae("cached model:",Qn.modelUrl),mI(e),Qn}var n5=e=>De(()=>{let t=it(e,[0]),a=ie(t,et.tf255);return Xe(a,"int32")});function vm(e,t){let a=e?n5(e):ir([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),n=t?n5(t):ir([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),r=ut([a,n],-1);return le([a,n]),r}function Gce(e){return De(()=>{let t={};return t.unstack=gn(e,-1),t.concat=ut(t.unstack,1),t.split=Gn(t.concat,4,1),t.stack=ut(t.split,2),t.squeeze=it(t.stack,[0]),t.expand=Pa(t.squeeze,-1),t.add=ke(t.expand,1),t.mul=ie(t.add,127.5),t.cast=Xe(t.mul,"int32"),t.tile=js(t.cast,[1,1,3]),t.alpha=ir([t.tile.shape[0]||0,t.tile.shape[1]||0,1],255,"int32"),ut([t.tile,t.alpha],-1)})}async function Hce(e,t){if(Qn||(Qn=await gI(t)),!Qn?.executor)return null;$t.src=Ne(e,255),_2!==t.segmentation.ratio&&mI(t);let[a,n,r,s,i,o]=await Qn.executeAsync($t,Uce),l;switch(t.segmentation.mode||"default"){case"default":l=vm(a,n);break;case"alpha":l=vm(null,n);break;case"foreground":l=vm(a,null);break;case"state":l=Gce(r);break;default:l=Be(0)}return le([$t.src,a,n,$t.r1i,$t.r2i,$t.r3i,$t.r4i]),[$t.r1i,$t.r2i,$t.r3i,$t.r4i]=[r,s,i,o],l}var Sa;async function AI(e){return!Sa||he.initial?Sa=await ct(e.segmentation.modelPath):e.debug&&ae("cached model:",Sa.modelUrl),Sa}async function jce(e,t){var a;if(Sa||(Sa=await AI(t)),!Sa?.executor||!((a=Sa?.inputs)!=null&&a[0].shape))return null;let n={};n.resize=Ue.resizeBilinear(e,[Sa.inputs[0].shape?Sa.inputs[0].shape[1]:0,Sa.inputs[0].shape?Sa.inputs[0].shape[2]:0],!1),n.norm=Ne(n.resize,et.tf255),n.res=Sa.execute(n.norm),n.squeeze=it(n.res,[0]),n.alpha=Ue.resizeBilinear(n.squeeze,[e.shape[1]||0,e.shape[2]||0]),n.mul=ie(n.alpha,et.tf255);let r;switch(t.segmentation.mode||"default"){case"default":n.input=it(e),n.concat=ut([n.input,n.mul],-1),r=Xe(n.concat,"int32");break;case"alpha":r=Xe(n.mul,"int32");break;default:r=Be(0)}return Object.keys(n).forEach(s=>le(n[s])),r}var Ya,ac=[],r5=0,s5=0,wm=Number.MAX_SAFE_INTEGER;async function qce(e){return he.initial&&(Ya=null),Ya?e.debug&&ae("cached model:",Ya.modelUrl):Ya=await ct(e.face.ssrnet.modelPathAge),Ya}async function i5(e,t,a,n){var r,s,i,o;if(!Ya)return{age:0};let l=wm<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),u=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>oe()-s5;return t.skipAllowed&&l&&u&&r5===n&&((i=ac[a])==null?void 0:i.age)&&((o=ac[a])==null?void 0:o.age)>0?(wm++,ac[a]):(wm=0,new Promise(async d=>{var c;if(!Ya?.inputs||!Ya.inputs[0]||!Ya.inputs[0].shape)return;let p={};p.resize=Ue.resizeBilinear(e,[Ya.inputs[0].shape[2],Ya.inputs[0].shape[1]],!1),p.enhance=ie(p.resize,et.tf255);let h={age:0};if((c=t.face.ssrnet)!=null&&c.enabled&&(p.age=Ya.execute(p.enhance)),p.age){let f=await p.age.data();h.age=Math.trunc(10*f[0])/10}Object.keys(p).forEach(f=>le(p[f])),ac[a]=h,r5=n,s5=oe(),d(h)}))}var Sn,nc=[],o5=0,l5=0,km=Number.MAX_SAFE_INTEGER,Im=[.2989,.587,.114];async function Xce(e){var t;return he.initial&&(Sn=null),Sn?e.debug&&ae("cached model:",Sn.modelUrl):Sn=await ct((t=e.face.ssrnet)==null?void 0:t.modelPathGender),Sn}async function u5(e,t,a,n){var r,s,i,o;if(!Sn)return{gender:"unknown",genderScore:0};let l=km<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),u=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>oe()-l5;return t.skipAllowed&&l&&u&&o5===n&&((i=nc[a])==null?void 0:i.gender)&&((o=nc[a])==null?void 0:o.genderScore)>0?(km++,nc[a]):(km=0,new Promise(async d=>{var c;if(!Sn?.inputs[0].shape)return;let p={};p.resize=Ue.resizeBilinear(e,[Sn.inputs[0].shape[2],Sn.inputs[0].shape[1]],!1),p.enhance=De(()=>{let[m,g,A]=Gn(p.resize,3,3),y=ie(m,Im[0]),x=ie(g,Im[1]),b=ie(A,Im[2]),w=gg([y,x,b]);return ie(we(w,et.tf05),2)});let h={gender:"unknown",genderScore:0};(c=t.face.ssrnet)!=null&&c.enabled&&(p.gender=Sn.execute(p.enhance));let f=await p.gender.data();h.gender=f[0]>f[1]?"female":"male",h.genderScore=f[0]>f[1]?Math.trunc(100*f[0])/100:Math.trunc(100*f[1])/100,Object.keys(p).forEach(m=>le(p[m])),nc[a]=h,o5=n,l5=oe(),d(h)}))}var yI=class{constructor(){ue(this,"ssrnetage",null),ue(this,"gear",null),ue(this,"blazeposedetect",null),ue(this,"blazepose",null),ue(this,"centernet",null),ue(this,"efficientpose",null),ue(this,"mobilefacenet",null),ue(this,"insightface",null),ue(this,"emotion",null),ue(this,"facedetect",null),ue(this,"faceiris",null),ue(this,"facemesh",null),ue(this,"faceres",null),ue(this,"ssrnetgender",null),ue(this,"handpose",null),ue(this,"handskeleton",null),ue(this,"handtrack",null),ue(this,"liveness",null),ue(this,"meet",null),ue(this,"movenet",null),ue(this,"nanodet",null),ue(this,"posenet",null),ue(this,"selfie",null),ue(this,"rvm",null),ue(this,"antispoof",null)}},q,xI=e=>{e&&(q=e),q||ae("instance not registred");let t=0,a=0,n=0;for(let s of Object.values(vn))t+=s.sizeFromManifest,a+=s.sizeLoadedWeights,n+=s.sizeDesired;let r=n>0?a/n:0;return{numLoadedModels:Object.values(vn).length,numDefinedModels:Object.keys(q.models).length,percentageLoaded:r,totalSizeFromManifest:t,totalSizeWeights:a,totalSizeLoading:n,totalSizeEnabled:void 0,modelStats:Object.values(vn)}};function Q1(e){e&&(q=e);for(let t of Object.keys(q.models))q.models[t]=null}async function bI(e){var t,a,n,r,s,i,o,l,u,d,c,p,h,f,m,g,A,y,x,b,w,S,N,C,M,$,E,I,R;e&&(q=e),q||ae("instance not registred"),he.initial&&Q1(q),q.config.hand.enabled&&(!q.models.handpose&&((a=(t=q.config.hand.detector)==null?void 0:t.modelPath)==null?void 0:a.includes("handdetect"))&&([q.models.handpose,q.models.handskeleton]=await Mx(q.config)),!q.models.handskeleton&&q.config.hand.landmarks&&((r=(n=q.config.hand.detector)==null?void 0:n.modelPath)==null?void 0:r.includes("handdetect"))&&([q.models.handpose,q.models.handskeleton]=await Mx(q.config))),q.config.body.enabled&&!q.models.blazepose&&((s=q.config.body.modelPath)==null?void 0:s.includes("blazepose"))&&(q.models.blazepose=lpe(q.config)),q.config.body.enabled&&!q.models.blazeposedetect&&q.config.body.detector&&q.config.body.detector.modelPath&&(q.models.blazeposedetect=ope(q.config)),q.config.body.enabled&&!q.models.efficientpose&&((i=q.config.body.modelPath)==null?void 0:i.includes("efficientpose"))&&(q.models.efficientpose=mpe(q.config)),q.config.body.enabled&&!q.models.movenet&&((o=q.config.body.modelPath)==null?void 0:o.includes("movenet"))&&(q.models.movenet=kce(q.config)),q.config.body.enabled&&!q.models.posenet&&((l=q.config.body.modelPath)==null?void 0:l.includes("posenet"))&&(q.models.posenet=Vce(q.config)),q.config.face.enabled&&!q.models.facedetect&&(q.models.facedetect=Qde(q.config)),q.config.face.enabled&&((u=q.config.face.antispoof)==null?void 0:u.enabled)&&!q.models.antispoof&&(q.models.antispoof=Nde(q.config)),q.config.face.enabled&&((d=q.config.face.liveness)==null?void 0:d.enabled)&&!q.models.liveness&&(q.models.liveness=Ace(q.config)),q.config.face.enabled&&((c=q.config.face.description)==null?void 0:c.enabled)&&!q.models.faceres&&(q.models.faceres=zpe(q.config)),q.config.face.enabled&&((p=q.config.face.emotion)==null?void 0:p.enabled)&&!q.models.emotion&&(q.models.emotion=ype(q.config)),q.config.face.enabled&&((h=q.config.face.iris)==null?void 0:h.enabled)&&!((f=q.config.face.attention)!=null&&f.enabled)&&!q.models.faceiris&&(q.models.faceiris=bpe(q.config)),q.config.face.enabled&&((m=q.config.face.mesh)==null?void 0:m.enabled)&&!q.models.facemesh&&(q.models.facemesh=Ope(q.config)),q.config.face.enabled&&((g=q.config.face.gear)==null?void 0:g.enabled)&&!q.models.gear&&(q.models.gear=Bpe(q.config)),q.config.face.enabled&&((A=q.config.face.ssrnet)==null?void 0:A.enabled)&&!q.models.ssrnetage&&(q.models.ssrnetage=qce(q.config)),q.config.face.enabled&&((y=q.config.face.ssrnet)==null?void 0:y.enabled)&&!q.models.ssrnetgender&&(q.models.ssrnetgender=Xce(q.config)),q.config.face.enabled&&((x=q.config.face.mobilefacenet)==null?void 0:x.enabled)&&!q.models.mobilefacenet&&(q.models.mobilefacenet=xce(q.config)),q.config.face.enabled&&((b=q.config.face.insightface)==null?void 0:b.enabled)&&!q.models.insightface&&(q.models.insightface=gce(q.config)),q.config.hand.enabled&&!q.models.handtrack&&((S=(w=q.config.hand.detector)==null?void 0:w.modelPath)==null?void 0:S.includes("handtrack"))&&(q.models.handtrack=hce(q.config)),q.config.hand.enabled&&q.config.hand.landmarks&&!q.models.handskeleton&&((C=(N=q.config.hand.detector)==null?void 0:N.modelPath)==null?void 0:C.includes("handtrack"))&&(q.models.handskeleton=fce(q.config)),q.config.object.enabled&&!q.models.centernet&&((M=q.config.object.modelPath)==null?void 0:M.includes("centernet"))&&(q.models.centernet=hpe(q.config)),q.config.object.enabled&&!q.models.nanodet&&(($=q.config.object.modelPath)==null?void 0:$.includes("nanodet"))&&(q.models.nanodet=Tce(q.config)),q.config.segmentation.enabled&&!q.models.selfie&&((E=q.config.segmentation.modelPath)==null?void 0:E.includes("selfie"))&&(q.models.selfie=AI(q.config)),q.config.segmentation.enabled&&!q.models.meet&&((I=q.config.segmentation.modelPath)==null?void 0:I.includes("meet"))&&(q.models.meet=iI(q.config)),q.config.segmentation.enabled&&!q.models.rvm&&((R=q.config.segmentation.modelPath)==null?void 0:R.includes("rvm"))&&(q.models.rvm=gI(q.config));for await(let P of Object.keys(q.models))q.models[P]&&typeof q.models[P]<"u"&&(q.models[P]=await q.models[P])}function eA(e,t,a){var n,r;if(!t||(e&&(q=e),q||ae("instance not registred"),!((n=q?.config)!=null&&n.validateModels)))return null;let s=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],i=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],o=[],l=[],u=t.modelUrl,d=t.executor;if((r=d?.graph)!=null&&r.nodes)for(let c of Object.values(d.graph.nodes)){let p=c.op.toLowerCase();o.includes(p)||o.push(p)}else!d&&q.config.debug&&ae("model not loaded",a);for(let c of o)!s.includes(c)&&!i.includes(c)&&!q.env.kernels.includes(c)&&!q.env.kernels.includes(c.replace("_",""))&&!q.env.kernels.includes(c.replace("native",""))&&!q.env.kernels.includes(c.replace("v2",""))&&l.push(c);return q.config.debug&&l.length>0&&ae("model validation failed:",a,l),l.length>0?{name:a,missing:l,ops:o,url:u}:null}function $2(e){e&&(q=e),q||ae("instance not registred");let t=[];for(let a of Object.keys(e.models)){let n=e.models[a];if(!n)continue;let r=eA(e,n,a);r&&t.push(r)}return t}var xt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function Kce(){let e=xt.gl;!e||(xt.extensions=e.getSupportedExtensions())}function Zce(e){var t;if(e.config.backend==="humangl"&&(xt.name in Dt().registry&&!((t=xt?.gl)!=null&&t.getParameter(xt.gl.VERSION))&&(ae("humangl error: backend invalid context"),Q1(e)),!rb(xt.name))){try{xt.canvas=Or(100,100)}catch(r){ae("humangl error: cannot create canvas:",r);return}try{if(xt.gl=xt.canvas.getContext("webgl2",xt.webGLattr),!xt.gl){ae("humangl error: cannot get webgl context");return}if(!xt.gl.getParameter(xt.gl.VERSION).includes("2.0")){ae("backend override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}xt.canvas&&(xt.canvas.addEventListener("webglcontextlost",s=>{throw ae("humangl error:",s.type),ae("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),xt.canvas.addEventListener("webglcontextrestored",s=>{ae("humangl error: context restored:",s)}),xt.canvas.addEventListener("webglcontextcreationerror",s=>{ae("humangl error: context create:",s)}))}catch(r){ae("humangl error: cannot get webgl context:",r);return}try{x1(2,xt.gl)}catch(r){ae("humangl error: cannot set webgl context:",r);return}try{let r=new Pu(xt.gl);Wl(xt.name,()=>new Jd(r),xt.priority)}catch(r){ae("humangl error: cannot register webgl backend:",r);return}try{Ks("webgl").forEach(s=>{let i={...s,backendName:xt.name};Tn(i)})}catch(r){ae("humangl error: cannot update webgl backend registration:",r);return}try{B().flagRegistry.WEBGL_VERSION&&B().set("WEBGL_VERSION",2)}catch(r){ae("humangl error: cannot set WebGL backend flags:",r);return}Kce();let a=Nr(),n=typeof a.gpgpu<"u"?a.getGPGPUContext().gl:null;n?e.config.debug&&ae("humangl backend registered:",{webgl:n.getParameter(n.VERSION),renderer:n.getParameter(n.RENDERER)}):ae("humangl error: no current gl context:",n,xt.gl)}}function Yce(e){let t=[];if(!he.kernels.includes("mod")){let a={kernelName:"Mod",backendName:Xt(),kernelFunc:n=>De(()=>we(n.inputs.a,ie(Ne(n.inputs.a,n.inputs.b),n.inputs.b)))};Tn(a),he.kernels.push("mod"),t.push("mod")}if(!he.kernels.includes("floormod")){let a={kernelName:"FloorMod",backendName:Xt(),kernelFunc:n=>De(()=>ke(ie(Ah(n.inputs.a,n.inputs.b),n.inputs.b),kh(n.inputs.a,n.inputs.b)))};Tn(a),he.kernels.push("floormod"),t.push("floormod")}if(!he.kernels.includes("rotatewithoffset")&&e.softwareKernels){let a={kernelName:"RotateWithOffset",backendName:Xt(),kernelFunc:n=>De(()=>{let r=Xt();Ic("cpu");let s=Ue.rotateWithOffset(n.inputs.image,n.attrs.radians,n.attrs.fillValue,n.attrs.center);return Ic(r),s})};Tn(a),he.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")}t.length>0&&e.debug&&ae("registered kernels:",t)}var d5={};async function M2(e,t=!1){if(e.state="backend",t||he.initial||e.config.backend&&e.config.backend.length>0&&Xt()!==e.config.backend){let a=oe();if(e.config.backend&&e.config.backend.length>0){if(typeof window>"u"&&typeof WorkerGlobalScope<"u"&&e.config.debug&&e.config.debug&&ae("running inside web worker"),he.browser&&e.config.backend==="tensorflow"&&(e.config.debug&&ae("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),he.node&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&(e.config.debug&&ae(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),he.browser&&e.config.backend==="webgpu")if(typeof navigator>"u"||typeof navigator.gpu>"u")ae("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{let r=await navigator.gpu.requestAdapter();if(e.config.debug&&ae("enumerated webgpu adapter:",r),!r)ae("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl";else{let s="requestAdapterInfo"in r?await r.requestAdapterInfo():void 0;ae("webgpu adapter info:",s)}}let n=Object.keys(Dt().registryFactory);if(e.config.backend==="humangl"&&!n.includes("humangl")&&(Zce(e),n=Object.keys(Dt().registryFactory)),e.config.debug&&ae("available backends:",n),n.includes(e.config.backend)||(ae(`error: backend ${e.config.backend} not found in registry`),e.config.backend=he.node?"tensorflow":"webgl",e.config.debug&&ae(`override: setting backend ${e.config.backend}`)),e.config.debug&&ae("setting backend:",[e.config.backend]),e.config.backend==="wasm"){if(B().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&B().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&ae("wasm path:",e.config.wasmPath),typeof x2<"u")x2(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let r=!1,s=!1;try{r=await B().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),s=await B().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&ae(`wasm execution: ${s?"simd":"no simd"} ${r?"multithreaded":"singlethreaded"}`),e.config.debug&&!s&&ae("warning: wasm simd support is not enabled")}catch{ae("wasm detection failed")}}try{await Ic(e.config.backend),await og()}catch(r){return ae("error: cannot set backend:",e.config.backend,r),!1}e.config.debug&&(d5=JSON.parse(JSON.stringify(B().flags)))}if((Xt()==="humangl"||Xt()==="webgl")&&(B().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&B().set("WEBGL_USE_SHAPES_UNIFORMS",!0),B().flagRegistry.WEBGL_EXP_CONV&&B().set("WEBGL_EXP_CONV",!0),e.config.debug&&typeof e.config.deallocate<"u"&&e.config.deallocate&&(ae("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),B().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),Xt(),e.config.debug){let n=B().flags,r={};for(let s of Object.keys(n))d5[s]!==n[s]&&(r[s]=n[s]);e.config.debug&&Object.keys(r).length>0&&ae("backend:",Xt(),"flags:",r)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&ae("flags:",e.config.flags);for(let[n,r]of Object.entries(e.config.flags))B().set(n,r)}nb(),Lde(),e.performance.initBackend=Math.trunc(oe()-a),e.config.backend=Xt(),await he.updateBackend(),Yce(e.config),he.initial=!1}return!0}function vI(e,t){for(let a of e){let n={kernelName:a,backendName:t.backend,kernelFunc:r=>{var s;return t.debug&&ae("kernelFunc",a,t.backend,r),(s=r?.inputs)==null?void 0:s.info}};Tn(n)}he.kernels=Ks(Xt()).map(a=>a.kernelName.toLowerCase())}var Jce={};jr(Jce,{all:()=>SI,body:()=>aA,canvas:()=>II,face:()=>tA,gesture:()=>sA,hand:()=>nA,init:()=>TI,object:()=>rA,options:()=>pa,person:()=>kI});var ho=e=>{if(!e)ae("draw error: invalid canvas");else if(!e.getContext)ae("draw error: canvas context not defined");else{let t=e.getContext("2d");if(!t)ae("draw error: cannot get canvas context");else return t}return null},Lo=e=>Math.round(e*180/Math.PI),wt=(e,t,a)=>e.replace(t,typeof a=="number"?a.toFixed(1):a),id=(e,t)=>{if(!t.useDepth||typeof e>"u")return t.color;let a=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${a[0]}, ${a[1]}, ${a[2]}, ${t.alpha})`};function ii(e,t,a,n,r){let s=t.replace(/\[.*\]/g,"").split(`
`).map(o=>o.trim()),i=Math.max(0,a);for(let o=s.length-1;o>=0;o--){let l=o*r.lineHeight+n;r.shadowColor&&r.shadowColor!==""&&(e.fillStyle=r.shadowColor,e.fillText(s[o],i+5,l+16)),e.fillStyle=r.labelColor,e.fillText(s[o],i+4,l+15)}}function Wo(e,t,a,n,r){e.fillStyle=id(n,r),e.beginPath(),e.arc(t,a,r.pointSize,0,2*Math.PI),e.fill()}function up(e,t,a,n,r,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){let i=(t+t+n)/2,o=(a+a+r)/2;e.ellipse(i,o,n/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,a),e.lineTo(t+n-s.roundRect,a),e.quadraticCurveTo(t+n,a,t+n,a+s.roundRect),e.lineTo(t+n,a+r-s.roundRect),e.quadraticCurveTo(t+n,a+r,t+n-s.roundRect,a+r),e.lineTo(t+s.roundRect,a+r),e.quadraticCurveTo(t,a+r,t,a+r-s.roundRect),e.lineTo(t,a+s.roundRect),e.quadraticCurveTo(t,a,t+s.roundRect,a),e.closePath();e.stroke()}function wI(e,t,a){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(let n of t)e.strokeStyle=id(n[2]||0,a),e.lineTo(Math.trunc(n[0]),Math.trunc(n[1]));e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function Qce(e,t,a){if(!(t.length<2)){if(e.lineWidth=a.lineWidth,!a.useCurves||t.length<=2){wI(e,t,a);return}e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){let r=(t[n][0]+t[n+1][0])/2,s=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],r,s)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function p5(e,t,a,n=5){let r,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(a[0],a[1]),r=Math.atan2(a[1]-t[1],a[0]-t[0]),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.moveTo(s,i),r+=1/3*(2*Math.PI),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.lineTo(s,i),r+=1/3*(2*Math.PI),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}var pa={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},tt;function ehe(e,t){var a,n,r,s,i,o,l,u,d;if(!tt.drawLabels||((a=tt.faceLabels)==null?void 0:a.length)===0)return;let c=tt.faceLabels.slice();if(e.score&&(c=wt(c,"[score]",100*e.score)),e.gender&&(c=wt(c,"[gender]",e.gender)),e.genderScore&&(c=wt(c,"[genderScore]",100*e.genderScore)),e.age&&(c=wt(c,"[age]",e.age)),e.iris&&(c=wt(c,"[distance]",e.iris)),e.real&&(c=wt(c,"[real]",100*e.real)),e.live&&(c=wt(c,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){let p=e.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);p.length>3&&(p.length=3),c=wt(c,"[emotions]",p.join(" "))}(r=(n=e.rotation)==null?void 0:n.angle)!=null&&r.roll&&(c=wt(c,"[roll]",Lo(e.rotation.angle.roll))),(i=(s=e.rotation)==null?void 0:s.angle)!=null&&i.yaw&&(c=wt(c,"[yaw]",Lo(e.rotation.angle.yaw))),(l=(o=e.rotation)==null?void 0:o.angle)!=null&&l.pitch&&(c=wt(c,"[pitch]",Lo(e.rotation.angle.pitch))),(d=(u=e.rotation)==null?void 0:u.gaze)!=null&&d.bearing&&(c=wt(c,"[gaze]",Lo(e.rotation.gaze.bearing))),ii(t,c,e.box[0],e.box[1],tt)}function the(e,t){var a,n,r,s;if(((a=e.annotations)==null?void 0:a.leftEyeIris)&&((n=e.annotations)==null?void 0:n.leftEyeIris[0])){t.strokeStyle=tt.useDepth?"rgba(255, 200, 255, 0.3)":tt.color,t.beginPath();let i=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,o=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],i,o,0,0,2*Math.PI),t.stroke(),tt.fillPolygons&&(t.fillStyle=tt.useDepth?"rgba(255, 255, 200, 0.3)":tt.color,t.fill())}if(((r=e.annotations)==null?void 0:r.rightEyeIris)&&((s=e.annotations)==null?void 0:s.rightEyeIris[0])){t.strokeStyle=tt.useDepth?"rgba(255, 200, 255, 0.3)":tt.color,t.beginPath();let i=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,o=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],i,o,0,0,2*Math.PI),t.stroke(),tt.fillPolygons&&(t.fillStyle=tt.useDepth?"rgba(255, 255, 200, 0.3)":tt.color,t.fill())}}function ahe(e,t){var a;if(tt.drawGaze&&((a=e.rotation)==null?void 0:a.angle)&&typeof Path2D<"u"){t.strokeStyle="pink";let n=e.box[0]+e.box[2]/2-e.box[3]*Lo(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*Lo(e.rotation.angle.pitch)/90,s=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${n} ${e.box[1]},
        ${n} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),i=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(i),t.stroke(s)}}function nhe(e,t){var a;if(tt.drawGaze&&((a=e.rotation)==null?void 0:a.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";let n=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];p5(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[n[0],n[1]],4);let r=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];p5(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[r[0],r[1]],4)}}function rhe(e,t){if(tt.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let a=0;a<Ru.length/3;a++){let n=[Ru[a*3+0],Ru[a*3+1],Ru[a*3+2]].map(r=>e.mesh[r]);wI(t,n,tt)}the(e,t)}}function she(e,t){if(tt.drawPoints&&e.mesh.length>=468)for(let a=0;a<e.mesh.length;a++)Wo(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2],tt),tt.drawAttention&&(R2.includes(a)&&Wo(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]+127,tt),_u.includes(a)&&Wo(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]-127,tt),$u.includes(a)&&Wo(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]-127,tt))}function ihe(e,t){tt.drawBoxes&&up(t,e.box[0],e.box[1],e.box[2],e.box[3],tt)}function tA(e,t,a){if(tt=da(pa,a),!t||!e)return;let n=ho(e);if(!!n){n.font=tt.font,n.strokeStyle=tt.color,n.fillStyle=tt.color;for(let r of t)ihe(r,n),ehe(r,n),r.mesh&&r.mesh.length>0&&(she(r,n),rhe(r,n),ahe(r,n),nhe(r,n))}}function aA(e,t,a){var n,r;let s=da(pa,a);if(!t||!e)return;let i=ho(e);if(!!i){i.lineJoin="round";for(let o=0;o<t.length;o++){if(i.strokeStyle=s.color,i.fillStyle=s.color,i.lineWidth=s.lineWidth,i.font=s.font,s.drawBoxes&&t[o].box&&t[o].box.length===4&&(up(i,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&((n=s.bodyLabels)==null?void 0:n.length)>0)){let l=s.bodyLabels.slice();l=wt(l,"[score]",100*t[o].score),ii(i,l,t[o].box[0],t[o].box[1],s)}if(s.drawPoints&&t[o].keypoints)for(let l=0;l<t[o].keypoints.length;l++)!t[o].keypoints[l].score||t[o].keypoints[l].score===0||(i.fillStyle=id(t[o].keypoints[l].position[2],s),Wo(i,t[o].keypoints[l].position[0],t[o].keypoints[l].position[1],0,s));if(s.drawLabels&&((r=s.bodyPartLabels)==null?void 0:r.length)>0&&t[o].keypoints){i.font=s.font;for(let l of t[o].keypoints){if(!l.score||l.score===0)continue;let u=s.bodyPartLabels.slice();u=wt(u,"[label]",l.part),u=wt(u,"[score]",100*l.score),ii(i,u,l.position[0],l.position[1],s)}}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(let l of Object.values(t[o].annotations))for(let u of l)Qce(i,u,s)}}}function nA(e,t,a){var n,r;let s=da(pa,a);if(!t||!e)return;let i=ho(e);if(!!i){i.lineJoin="round",i.font=s.font;for(let o of t){if(s.drawBoxes){if(i.strokeStyle=s.color,i.fillStyle=s.color,up(i,o.box[0],o.box[1],o.box[2],o.box[3],s),s.drawLabels&&((n=s.handLabels)==null?void 0:n.length)>0){let l=s.handLabels.slice();l=wt(l,"[label]",o.label),l=wt(l,"[score]",100*o.score),ii(i,l,o.box[0],o.box[1],s)}i.stroke()}if(s.drawPoints&&o.keypoints&&o.keypoints.length>0)for(let l of o.keypoints)i.fillStyle=id(l[2],s),Wo(i,l[0],l[1],0,s);if(s.drawLabels&&o.annotations&&((r=s.fingerLabels)==null?void 0:r.length)>0)for(let[l,u]of Object.entries(o.annotations)){let d=s.fingerLabels.slice();d=wt(d,"[label]",l),ii(i,d,u[u.length-1][0],u[u.length-1][1],s)}if(s.drawPolygons&&o.annotations){let l=u=>{if(!(!u||u.length===0||!u[0]))for(let d=0;d<u.length;d++){i.beginPath();let c=u[d][2]||0;i.strokeStyle=id(d*c,s),i.moveTo(u[d>0?d-1:0][0],u[d>0?d-1:0][1]),i.lineTo(u[d][0],u[d][1]),i.stroke()}};i.lineWidth=s.lineWidth,l(o.annotations.index),l(o.annotations.middle),l(o.annotations.ring),l(o.annotations.pinky),l(o.annotations.thumb)}}}}function rA(e,t,a){var n;let r=da(pa,a);if(!t||!e)return;let s=ho(e);if(!!s){s.lineJoin="round",s.font=r.font;for(let i of t)if(r.drawBoxes){if(s.strokeStyle=r.color,s.fillStyle=r.color,up(s,i.box[0],i.box[1],i.box[2],i.box[3],r),r.drawLabels&&((n=r.objectLabels)==null?void 0:n.length)>0){let o=r.objectLabels.slice();o=wt(o,"[label]",i.label),o=wt(o,"[score]",100*i.score),ii(s,o,i.box[0],i.box[1],r)}s.stroke()}}}function sA(e,t,a){var n;let r=da(pa,a);if(!(!t||!e)&&r.drawGestures&&((n=r.gestureLabels)==null?void 0:n.length)>0){let s=ho(e);if(!s)return;s.font=r.font,s.fillStyle=r.color;let i=1;for(let o=0;o<t.length;o++){let[l,u]=Object.entries(t[o]);if(u.length>1&&u[1].length>0){let d=l[1]>0?`#${l[1]}`:"",c=r.gestureLabels.slice();c=wt(c,"[where]",l[0]),c=wt(c,"[who]",d),c=wt(c,"[what]",u[1]),ii(s,c,8,2+i*r.lineHeight,r),i+=1}}}}var $s={face:`face
    confidence: [score]%
    [gender] [genderScore]%
    age: [age] years
    distance: [distance]cm
    real: [real]%
    live: [live]%
    [emotions]
    roll: [roll]\xB0 yaw:[yaw]\xB0 pitch:[pitch]\xB0
    gaze: [gaze]\xB0`,body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},Sm=0;function kI(e,t,a){let n=da(pa,a);if(!t||!e)return;let r=ho(e);if(!!r){r.lineJoin="round",r.font=n.font;for(let s=0;s<t.length;s++)if(n.drawBoxes){if(r.strokeStyle=n.color,r.fillStyle=n.color,up(r,t[s].box[0],t[s].box[1],t[s].box[2],t[s].box[3],n),n.drawLabels){let i=`person #${s}`;n.shadowColor&&n.shadowColor!==""&&(r.fillStyle=n.shadowColor,r.fillText(i,t[s].box[0]+3,1+t[s].box[1]+n.lineHeight,t[s].box[2])),r.fillStyle=n.labelColor,r.fillText(i,t[s].box[0]+2,0+t[s].box[1]+n.lineHeight,t[s].box[2])}r.stroke()}}}function II(e,t){if(!e||!t)return;let a=ho(t);!a||a.drawImage(e,0,0)}async function SI(e,t,a){if(!t?.performance||!e)return null;let n=oe(),r=da(pa,a),s=Promise.all([tA(e,t.face,r),aA(e,t.body,r),nA(e,t.hand,r),rA(e,t.object,r),sA(e,t.gesture,r)]);return Sm=he.perfadd?Sm+Math.round(oe()-n):Math.round(oe()-n),t.performance.draw=Sm,s}function TI(){pa.faceLabels=$s.face,pa.bodyLabels=$s.body,pa.bodyPartLabels=$s.bodyPart,pa.handLabels=$s.hand,pa.fingerLabels=$s.finger,pa.objectLabels=$s.object,pa.gestureLabels=$s.gesture}var $o=.1,Tm=.5;function ohe(e,t,a){let n=!1,r=a.length-1;for(let s=0;s<a.length;r=s++)a[s].y>t!=a[r].y>t&&e<(a[r].x-a[s].x)*(t-a[s].y)/(a[r].y-a[s].y)+a[s].x&&(n=!n);return n}async function lhe(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;let t=e.tensor.shape[2]||0,a=e.tensor.shape[1]||0,n=await e.tensor.buffer(),r=[];for(let i of lr.silhouette)r.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});$o&&$o>0&&(r=r.map(i=>({x:i.x>.5?i.x+$o:i.x-$o,y:i.y>.5?i.y+$o:i.y-$o})));for(let i=0;i<t;i++)for(let o=0;o<a;o++)ohe(i/t,o/t,r)||(n.set(Tm*n.get(0,o,i,0),0,o,i,0),n.set(Tm*n.get(0,o,i,1),0,o,i,1),n.set(Tm*n.get(0,o,i,2),0,o,i,2));return n.toTensor()}var uhe=e=>{let t=(c,p)=>Math.atan2(c[1]-p[1],c[0]-p[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};let a=[0,-.1],n=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),s=r?e.mesh[473]:e.mesh[468],i=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],o=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],l=[(i[0]-s[0])/o[0]-a[0],n*(s[1]-i[1])/o[1]-a[1]],u=Math.sqrt(l[0]*l[0]+l[1]*l[1]);return u=Math.min(u,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],l)+Math.PI/2)%Math.PI,strength:u}},dhe=(e,t)=>{let a=m=>{let g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},n=(m,g)=>{let A=m[0]-g[0],y=m[1]-g[1],x=m[2]-g[2];return[A,y,x]},r=(m,g)=>{let A=m[1]*g[2]-m[2]*g[1],y=m[2]*g[0]-m[0]*g[2],x=m[0]*g[1]-m[1]*g[0];return[A,y,x]},s=m=>{let[g,A,y,x,b,w,S,N,C]=m,M,$,E;return x<1?x>-1?(E=Math.asin(x),$=Math.atan2(-S,g),M=Math.atan2(-w,b)):(E=-Math.PI/2,$=-Math.atan2(N,C),M=0):(E=Math.PI/2,$=Math.atan2(N,C),M=0),Number.isNaN(M)&&(M=0),Number.isNaN($)&&($=0),Number.isNaN(E)&&(E=0),{pitch:2*-M,yaw:2*-$,roll:2*-E}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};let o=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,l=[i[10],i[152],i[234],i[454]].map(m=>[m[0]*t[0]/o,m[1]*t[1]/o,m[2]]),u=a(n(l[1],l[0])),d=a(n(l[3],l[2])),c=a(r(d,u));d=r(u,c);let p=[d[0],d[1],d[2],u[0],u[1],u[2],c[0],c[1],c[2]],h=s(p),f=i.length===478?uhe(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:f}},c5=async(e,t)=>{var a,n,r,s,i,o,l,u,d,c,p,h,f,m,g,A,y,x,b,w,S,N,C,M,$,E,I,R,P;let D=oe(),W,V,G,U,H,Z,Q,Y,ee,ne=[];e.state="run:face";let J=await Fpe(t,e.config);if(e.performance.face=he.perfadd?(e.performance.face||0)+Math.trunc(oe()-D):Math.trunc(oe()-D),!t.shape||t.shape.length!==4)return[];if(!J)return[];for(let X=0;X<J.length;X++){if(e.analyze("Get Face"),!J[X].tensor||J[X].tensor.isDisposedInternal){ae("Face object is disposed:",J[X].tensor);continue}if((a=e.config.face.detector)!=null&&a.mask){let Pe=await lhe(J[X]);le(J[X].tensor),Pe&&(J[X].tensor=Pe)}let fe=J[X].mesh&&J[X].mesh.length>200?dhe(J[X],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?U=(n=e.config.face.emotion)!=null&&n.enabled?cx(J[X].tensor||Be([]),e.config,X,J.length):[]:(e.state="run:emotion",D=oe(),U=(r=e.config.face.emotion)!=null&&r.enabled?await cx(J[X].tensor||Be([]),e.config,X,J.length):[],e.performance.emotion=he.perfadd?(e.performance.emotion||0)+Math.trunc(oe()-D):Math.trunc(oe()-D)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?Q=(s=e.config.face.antispoof)!=null&&s.enabled?Zy(J[X].tensor||Be([]),e.config,X,J.length):0:(e.state="run:antispoof",D=oe(),Q=(i=e.config.face.antispoof)!=null&&i.enabled?await Zy(J[X].tensor||Be([]),e.config,X,J.length):0,e.performance.antispoof=he.perfadd?(e.performance.antispoof||0)+Math.trunc(oe()-D):Math.trunc(oe()-D)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?Y=(o=e.config.face.liveness)!=null&&o.enabled?Gx(J[X].tensor||Be([]),e.config,X,J.length):0:(e.state="run:liveness",D=oe(),Y=(l=e.config.face.liveness)!=null&&l.enabled?await Gx(J[X].tensor||Be([]),e.config,X,J.length):0,e.performance.liveness=he.perfadd?(e.performance.antispoof||0)+Math.trunc(oe()-D):Math.trunc(oe()-D)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?V=(u=e.config.face.gear)!=null&&u.enabled?vx(J[X].tensor||Be([]),e.config,X,J.length):null:(e.state="run:gear",D=oe(),V=(d=e.config.face.gear)!=null&&d.enabled?await vx(J[X].tensor||Be([]),e.config,X,J.length):null,e.performance.gear=Math.trunc(oe()-D)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(W=(c=e.config.face.ssrnet)!=null&&c.enabled?i5(J[X].tensor||Be([]),e.config,X,J.length):null,G=(p=e.config.face.ssrnet)!=null&&p.enabled?u5(J[X].tensor||Be([]),e.config,X,J.length):null):(e.state="run:ssrnet",D=oe(),W=(h=e.config.face.ssrnet)!=null&&h.enabled?await i5(J[X].tensor||Be([]),e.config,X,J.length):null,G=(f=e.config.face.ssrnet)!=null&&f.enabled?await u5(J[X].tensor||Be([]),e.config,X,J.length):null,e.performance.ssrnet=Math.trunc(oe()-D)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?H=(m=e.config.face.mobilefacenet)!=null&&m.enabled?Xx(J[X].tensor||Be([]),e.config,X,J.length):null:(e.state="run:mobilefacenet",D=oe(),H=(g=e.config.face.mobilefacenet)!=null&&g.enabled?await Xx(J[X].tensor||Be([]),e.config,X,J.length):null,e.performance.mobilefacenet=Math.trunc(oe()-D)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?Z=(A=e.config.face.insightface)!=null&&A.enabled?Bx(J[X].tensor||Be([]),e.config,X,J.length):null:(e.state="run:mobilefacenet",D=oe(),Z=(y=e.config.face.insightface)!=null&&y.enabled?await Bx(J[X].tensor||Be([]),e.config,X,J.length):null,e.performance.mobilefacenet=Math.trunc(oe()-D)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?ee=yx(J[X].tensor||Be([]),e.config,X,J.length):(e.state="run:description",D=oe(),ee=await yx(J[X].tensor||Be([]),e.config,X,J.length),e.performance.description=he.perfadd?(e.performance.description||0)+Math.trunc(oe()-D):Math.trunc(oe()-D)),e.analyze("End Description:"),e.config.async&&([W,G,U,H,Z,ee,V,Q,Y]=await Promise.all([W,G,U,H,Z,ee,V,Q,Y])),e.analyze("Finish Face:"),((x=e.config.face.ssrnet)==null?void 0:x.enabled)&&W&&G&&(ee={...ee,age:W.age,gender:G.gender,genderScore:G.genderScore}),((b=e.config.face.gear)==null?void 0:b.enabled)&&V&&(ee={...ee,age:V.age,gender:V.gender,genderScore:V.genderScore,race:V.race}),((w=e.config.face.mobilefacenet)==null?void 0:w.enabled)&&H&&(ee.descriptor=H),((S=e.config.face.insightface)==null?void 0:S.enabled)&&Z&&(ee.descriptor=Z),(N=e.config.face.iris)!=null&&N.enabled;let Ae=(($=(M=(C=J[X])==null?void 0:C.annotations)==null?void 0:M.leftEyeIris)==null?void 0:$[0])&&((R=(I=(E=J[X])==null?void 0:E.annotations)==null?void 0:I.rightEyeIris)==null?void 0:R[0])&&J[X].annotations.leftEyeIris.length>0&&J[X].annotations.rightEyeIris.length>0&&J[X].annotations.leftEyeIris[0]!==null&&J[X].annotations.rightEyeIris[0]!==null?Math.max(Math.abs(J[X].annotations.leftEyeIris[3][0]-J[X].annotations.leftEyeIris[1][0]),Math.abs(J[X].annotations.rightEyeIris[4][1]-J[X].annotations.rightEyeIris[2][1]))/t.shape[2]:0,Te=(P=e.config.face.detector)!=null&&P.return?it(J[X].tensor):null;le(J[X].tensor),J[X].tensor&&delete J[X].tensor;let Ie={...J[X],id:X};ee.age&&(Ie.age=ee.age),ee.gender&&(Ie.gender=ee.gender),ee.genderScore&&(Ie.genderScore=ee.genderScore),ee.descriptor&&(Ie.embedding=ee.descriptor),ee.race&&(Ie.race=ee.race),U&&(Ie.emotion=U),Q&&(Ie.real=Q),Y&&(Ie.live=Y),Ae&&Ae!==0&&(Ie.iris=Math.trunc(500/Ae/11.7)/100),fe&&(Ie.rotation=fe),Te&&(Ie.tensor=Te),ne.push(Ie),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),ne},phe=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++){let n=e[a].keypoints.find(l=>l.part==="leftWrist"),r=e[a].keypoints.find(l=>l.part==="rightWrist"),s=e[a].keypoints.find(l=>l.part==="nose");s&&n&&r&&n.position[1]<s.position[1]&&r.position[1]<s.position[1]?t.push({body:a,gesture:"i give up"}):s&&n&&n.position[1]<s.position[1]?t.push({body:a,gesture:"raise left hand"}):s&&r&&r.position[1]<s.position[1]&&t.push({body:a,gesture:"raise right hand"});let i=e[a].keypoints.find(l=>l.part==="leftShoulder"),o=e[a].keypoints.find(l=>l.part==="rightShoulder");i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:a,gesture:`leaning ${i.position[1]>o.position[1]?"left":"right"}`})}return t},che=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++)if(e[a].mesh&&e[a].mesh.length>450){let n=(e[a].mesh[33][2]||0)-(e[a].mesh[263][2]||0),r=e[a].mesh[33][0]-e[a].mesh[263][0];Math.abs(n/r)<=.15?t.push({face:a,gesture:"facing center"}):t.push({face:a,gesture:`facing ${n<0?"left":"right"}`}),Math.abs(e[a].mesh[374][1]-e[a].mesh[386][1])/Math.abs(e[a].mesh[443][1]-e[a].mesh[450][1])<.2&&t.push({face:a,gesture:"blink left eye"}),Math.abs(e[a].mesh[145][1]-e[a].mesh[159][1])/Math.abs(e[a].mesh[223][1]-e[a].mesh[230][1])<.2&&t.push({face:a,gesture:"blink right eye"});let o=Math.min(100,500*Math.abs(e[a].mesh[13][1]-e[a].mesh[14][1])/Math.abs(e[a].mesh[10][1]-e[a].mesh[152][1]));o>10&&t.push({face:a,gesture:`mouth ${Math.trunc(o)}% open`});let l=e[a].mesh[152][2]||0;Math.abs(l)>10&&t.push({face:a,gesture:`head ${l<0?"up":"down"}`})}return t},hhe=e=>{var t,a,n,r;if(!e)return[];let s=[];for(let i=0;i<e.length;i++){if(!((a=(t=e[i].annotations)==null?void 0:t.leftEyeIris)!=null&&a[0])||!((r=(n=e[i].annotations)==null?void 0:n.rightEyeIris)!=null&&r[0]))continue;let o=e[i].annotations.leftEyeIris[3][0]-e[i].annotations.leftEyeIris[1][0],l=e[i].annotations.leftEyeIris[4][1]-e[i].annotations.leftEyeIris[2][1],u=Math.abs(o*l),d=e[i].annotations.rightEyeIris[3][0]-e[i].annotations.rightEyeIris[1][0],c=e[i].annotations.rightEyeIris[4][1]-e[i].annotations.rightEyeIris[2][1],p=Math.abs(d*c),h=!1;Math.abs(u-p)/Math.max(u,p)<.25&&(h=!0,s.push({iris:i,gesture:"facing center"}));let m=Math.abs(e[i].mesh[263][0]-e[i].annotations.leftEyeIris[0][0])/e[i].box[2],g=Math.abs(e[i].mesh[33][0]-e[i].annotations.rightEyeIris[0][0])/e[i].box[2];(m>.06||g>.06)&&(h=!1),m>g?m>.05&&s.push({iris:i,gesture:"looking right"}):g>.05&&s.push({iris:i,gesture:"looking left"});let A=Math.abs(e[i].mesh[145][1]-e[i].annotations.rightEyeIris[0][1])/e[i].box[3],y=Math.abs(e[i].mesh[374][1]-e[i].annotations.leftEyeIris[0][1])/e[i].box[3];(y<.01||A<.01||y>.022||A>.022)&&(h=!1),(y<.01||A<.01)&&s.push({iris:i,gesture:"looking down"}),(y>.022||A>.022)&&s.push({iris:i,gesture:"looking up"}),h&&s.push({iris:i,gesture:"looking center"})}return s},fhe=e=>{if(!e)return[];let t=[];for(let a=0;a<e.length;a++){let n=[];if(e[a].annotations)for(let[r,s]of Object.entries(e[a].annotations))r!=="palmBase"&&Array.isArray(s)&&s[0]&&n.push({name:r.toLowerCase(),position:s[0]});if(n&&n.length>0){let r=n.reduce((i,o)=>(i.position[2]||0)<(o.position[2]||0)?i:o);t.push({hand:a,gesture:`${r.name} forward`});let s=n.reduce((i,o)=>i.position[1]<o.position[1]?i:o);t.push({hand:a,gesture:`${s.name} up`})}if(e[a].keypoints){let r=lce(e[a].keypoints);for(let s of r)t.push({hand:a,gesture:s.name})}}return t},ge={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},Nm=0;function mhe(e,t){var a,n,r,s,i,o,l,u,d,c,p,h,f,m,g,A,y,x,b,w,S,N,C;let M=oe();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};let $=Date.now()-e.timestamp,E=$<1e3?8-Math.log($+1):1;if(e.canvas&&(ge.canvas=e.canvas),e.error&&(ge.error=e.error),!ge.body||e.body.length!==ge.body.length)ge.body=JSON.parse(JSON.stringify(e.body));else for(let R=0;R<e.body.length;R++){let P=e.body[R].box.map((U,H)=>((E-1)*ge.body[R].box[H]+U)/E),D=e.body[R].boxRaw.map((U,H)=>((E-1)*ge.body[R].boxRaw[H]+U)/E),W=e.body[R].keypoints.map((U,H)=>{var Z,Q,Y,ee,ne,J,X,fe,Ae;return{score:U.score,part:U.part,position:[ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].position[0]||0)+(U.position[0]||0))/E:U.position[0],ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].position[1]||0)+(U.position[1]||0))/E:U.position[1],ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].position[2]||0)+(U.position[2]||0))/E:U.position[2]],positionRaw:[ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].positionRaw[0]||0)+(U.positionRaw[0]||0))/E:U.positionRaw[0],ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].positionRaw[1]||0)+(U.positionRaw[1]||0))/E:U.positionRaw[1],ge.body[R].keypoints[H]?((E-1)*(ge.body[R].keypoints[H].positionRaw[2]||0)+(U.positionRaw[2]||0))/E:U.positionRaw[2]],distance:[ge.body[R].keypoints[H]?((E-1)*(((Z=ge.body[R].keypoints[H].distance)==null?void 0:Z[0])||0)+(((Q=U.distance)==null?void 0:Q[0])||0))/E:(Y=U.distance)==null?void 0:Y[0],ge.body[R].keypoints[H]?((E-1)*(((ee=ge.body[R].keypoints[H].distance)==null?void 0:ee[1])||0)+(((ne=U.distance)==null?void 0:ne[1])||0))/E:(J=U.distance)==null?void 0:J[1],ge.body[R].keypoints[H]?((E-1)*(((X=ge.body[R].keypoints[H].distance)==null?void 0:X[2])||0)+(((fe=U.distance)==null?void 0:fe[2])||0))/E:(Ae=U.distance)==null?void 0:Ae[2]]}}),V={},G={connected:{}};(a=t.body.modelPath)!=null&&a.includes("efficientpose")?G=Z8:(n=t.body.modelPath)!=null&&n.includes("blazepose")?G=j8:(r=t.body.modelPath)!=null&&r.includes("movenet")&&(G=oI);for(let[U,H]of Object.entries(G.connected)){let Z=[];for(let Q=0;Q<H.length-1;Q++){let Y=W.find(ne=>ne.part===H[Q]),ee=W.find(ne=>ne.part===H[Q+1]);Y&&ee&&Z.push([Y.position,ee.position])}V[U]=Z}ge.body[R]={...e.body[R],box:P,boxRaw:D,keypoints:W,annotations:V}}if(!ge.hand||e.hand.length!==ge.hand.length)ge.hand=JSON.parse(JSON.stringify(e.hand));else for(let R=0;R<e.hand.length;R++){let P=e.hand[R].box.map((G,U)=>((E-1)*ge.hand[R].box[U]+G)/E),D=e.hand[R].boxRaw.map((G,U)=>((E-1)*ge.hand[R].boxRaw[U]+G)/E);ge.hand[R].keypoints.length!==e.hand[R].keypoints.length&&(ge.hand[R].keypoints=e.hand[R].keypoints);let W=e.hand[R].keypoints&&e.hand[R].keypoints.length>0?e.hand[R].keypoints.map((G,U)=>G.map((H,Z)=>((E-1)*(ge.hand[R].keypoints[U][Z]||1)+(H||0))/E)):[],V={};if(Object.keys(ge.hand[R].annotations).length!==Object.keys(e.hand[R].annotations).length)ge.hand[R].annotations=e.hand[R].annotations,V=ge.hand[R].annotations;else if(e.hand[R].annotations)for(let G of Object.keys(e.hand[R].annotations))V[G]=(o=(i=(s=e.hand[R])==null?void 0:s.annotations)==null?void 0:i[G])!=null&&o[0]?e.hand[R].annotations[G].map((U,H)=>U.map((Z,Q)=>((E-1)*ge.hand[R].annotations[G][H][Q]+Z)/E)):null;ge.hand[R]={...e.hand[R],box:P,boxRaw:D,keypoints:W,annotations:V}}if(!ge.face||e.face.length!==ge.face.length)ge.face=JSON.parse(JSON.stringify(e.face));else for(let R=0;R<e.face.length;R++){let P=e.face[R].box.map((W,V)=>((E-1)*ge.face[R].box[V]+W)/E),D=e.face[R].boxRaw.map((W,V)=>((E-1)*ge.face[R].boxRaw[V]+W)/E);if(e.face[R].rotation){let W={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};W.matrix=(l=e.face[R].rotation)==null?void 0:l.matrix,W.angle={roll:((E-1)*(((d=(u=ge.face[R].rotation)==null?void 0:u.angle)==null?void 0:d.roll)||0)+(((p=(c=e.face[R].rotation)==null?void 0:c.angle)==null?void 0:p.roll)||0))/E,yaw:((E-1)*(((f=(h=ge.face[R].rotation)==null?void 0:h.angle)==null?void 0:f.yaw)||0)+(((g=(m=e.face[R].rotation)==null?void 0:m.angle)==null?void 0:g.yaw)||0))/E,pitch:((E-1)*(((y=(A=ge.face[R].rotation)==null?void 0:A.angle)==null?void 0:y.pitch)||0)+(((b=(x=e.face[R].rotation)==null?void 0:x.angle)==null?void 0:b.pitch)||0))/E},W.gaze={bearing:((E-1)*(((w=ge.face[R].rotation)==null?void 0:w.gaze.bearing)||0)+(((S=e.face[R].rotation)==null?void 0:S.gaze.bearing)||0))/E,strength:((E-1)*(((N=ge.face[R].rotation)==null?void 0:N.gaze.strength)||0)+(((C=e.face[R].rotation)==null?void 0:C.gaze.strength)||0))/E},ge.face[R]={...e.face[R],rotation:W,box:P,boxRaw:D}}else ge.face[R]={...e.face[R],box:P,boxRaw:D}}if(!ge.object||e.object.length!==ge.object.length)ge.object=JSON.parse(JSON.stringify(e.object));else for(let R=0;R<e.object.length;R++){let P=e.object[R].box.map((W,V)=>((E-1)*ge.object[R].box[V]+W)/E),D=e.object[R].boxRaw.map((W,V)=>((E-1)*ge.object[R].boxRaw[V]+W)/E);ge.object[R]={...e.object[R],box:P,boxRaw:D}}if(e.persons){let R=e.persons;if(!ge.persons||R.length!==ge.persons.length)ge.persons=JSON.parse(JSON.stringify(R));else for(let P=0;P<R.length;P++)ge.persons[P].box=R[P].box.map((D,W)=>((E-1)*ge.persons[P].box[W]+D)/E)}e.gesture&&(ge.gesture=e.gesture);let I=oe();return Nm=he.perfadd?Nm+Math.round(I-M):Math.round(I-M),e.performance&&(ge.performance={...e.performance,interpolate:Nm}),ge}var ghe={};jr(ghe,{distance:()=>Jh,match:()=>EI,similarity:()=>CI});function Jh(e,t,a={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let n=0;for(let r=0;r<e.length;r++){let s=!a.order||a.order===2?e[r]-t[r]:Math.abs(e[r]-t[r]);n+=!a.order||a.order===2?s*s:s**a.order}return(a.multiplier||20)*n}var NI=(e,t,a,n)=>{if(e===0)return 1;let s=(1-(t===2?Math.sqrt(e):e**(1/t))/100-a)/(n-a);return Math.max(Math.min(s,1),0)};function CI(e,t,a={order:2,multiplier:25,min:.2,max:.8}){let n=Jh(e,t,a);return NI(n,a.order||2,a.min||0,a.max||1)}function EI(e,t,a={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let n=Number.MAX_SAFE_INTEGER,r=-1;for(let i=0;i<t.length;i++){let o=t[i].length===e.length?Jh(e,t[i],a):Number.MAX_SAFE_INTEGER;if(o<n&&(n=o,r=i),n<(a.threshold||0))break}let s=NI(n,a.order||2,a.min||0,a.max||1);return{index:r,distance:n,similarity:s}}function Ahe(e,t,a,n,r){var s,i,o,l,u,d;let c=0,p=[];for(let h of e){let f={id:c++,face:h,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(let b of t)h.box[0]>b.box[0]&&h.box[0]<b.box[0]+b.box[2]&&h.box[1]+h.box[3]>b.box[1]&&h.box[1]+h.box[3]<b.box[1]+b.box[3]&&(f.body=b);if(f.body)for(let b of a)b.box[0]+b.box[2]>f.body.box[0]&&b.box[0]+b.box[2]<f.body.box[0]+f.body.box[2]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.left=b),b.box[0]<f.body.box[0]+f.body.box[2]&&b.box[0]>f.body.box[0]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.right=b);for(let b of n)(b.face!==void 0&&b.face===h.id||b.iris!==void 0&&b.iris===h.id||b.body!==void 0&&b.body===((s=f.body)==null?void 0:s.id)||b.hand!==void 0&&b.hand===((i=f.hands.left)==null?void 0:i.id)||b.hand!==void 0&&b.hand===((o=f.hands.right)==null?void 0:o.id))&&f.gestures.push(b);let m=[],g=[],A=b=>{b&&b.length===4&&(m.push(b[0],b[0]+b[2]),g.push(b[1],b[1]+b[3]))};A(f.face.box),A((l=f.body)==null?void 0:l.box),A((u=f.hands.left)==null?void 0:u.box),A((d=f.hands.right)==null?void 0:d.box);let y=Math.min(...m),x=Math.min(...g);f.box=[y,x,Math.max(...m)-y,Math.max(...g)-x],r?.[1]&&r?.[2]&&(f.boxRaw=[f.box[0]/r[2],f.box[1]/r[1],f.box[2]/r[2],f.box[3]/r[1]]),p.push(f)}return p}var iA=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,oA=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function yhe(e){let t=(r,s="application/octet-stream")=>fetch(`data:${s};base64,${r}`).then(i=>i.blob()),a,n;switch(e.config.warmup){case"face":a=await t(iA);break;case"body":case"full":a=await t(oA);break;default:a=null}if(a){let r=await createImageBitmap(a);n=await e.detect(r,e.config),r.close()}return n}async function xhe(e){return new Promise(t=>{let a;switch(e.config.warmup){case"face":a="data:image/jpeg;base64,"+iA;break;case"full":case"body":a="data:image/jpeg;base64,"+oA;break;default:a=""}let n;if(typeof Image<"u")n=new Image;else if(he.Image)n=new he.Image;else return;n.onload=async()=>{let r=Or(n.naturalWidth,n.naturalHeight);if(!r)ae("Warmup: Canvas not found"),t(void 0);else{let s=r.getContext("2d");s&&s.drawImage(n,0,0);let i=await e.image(r),o=i.tensor?await e.detect(i.tensor,e.config):void 0;t(o)}},a?n.src=a:t(void 0)})}async function bhe(e){let t=r=>Buffer.from(r,"base64"),a;e.config.warmup==="face"?a=t(iA):a=t(oA);let n;if("node"in O2&&Xt()==="tensorflow"){let r=(void 0).decodeJpeg(a),s=Pa(r,0);e.tf.dispose(r),n=await e.detect(s,e.config),e.tf.dispose(s)}else e.config.debug&&ae("Warmup tfjs-node not loaded");return n}async function vhe(e){let t;return typeof createImageBitmap=="function"?t=await yhe(e):typeof Image<"u"||he.Canvas!==void 0?t=await xhe(e):t=await bhe(e),t}async function whe(e){var t,a,n,r;if(!B().flagRegistry.ENGINE_COMPILE_ONLY)return;let s=Xt(),i=Nr();if(s!=="webgl"&&s!=="humangl"||!i?.checkCompileCompletion)return;B().set("ENGINE_COMPILE_ONLY",!0);let o=Dt().state.numTensors,l=[];for(let[c,p]of Object.entries(e.models).filter(([h,f])=>h!==null&&f!==null)){let h=(a=(t=p.inputs)==null?void 0:t[0])!=null&&a.shape?[...p.inputs[0].shape]:[1,64,64,3],f=(r=(n=p.inputs)==null?void 0:n[0])!=null&&r.dtype?p.inputs[0].dtype:"float32";for(let g=0;g<h.length;g++)h[g]===-1&&(h[g]=g===0?1:64);let m=Nn(h,f);try{let g=p.execute(m);l.push(c),Array.isArray(g)?g.forEach(A=>le(A)):le(g)}catch{e.config.debug&&ae("compile fail model:",c)}le(m)}let u=await i.checkCompileCompletionAsync();i.getUniformLocations(),e.config.debug&&ae("compile pass:",{models:l,kernels:u.length}),B().set("ENGINE_COMPILE_ONLY",!1);let d=Dt().state.numTensors;d-o>0&&ae("tensor leak:",d-o)}async function khe(e,t){await M2(e,!1);let a=oe();return e.state="warmup",t&&(e.config=da(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:oe(),persons:[],error:null}:new Promise(async n=>{await V8.load(e),await whe(e);let r=await vhe(e),s=oe();e.config.debug&&ae("warmup",e.config.warmup,Math.round(s-a),"ms"),e.emit("warmup"),n(r)})}var Fu,mc,gc,F2,Os,RI=class{constructor(e){ue(this,"version"),ue(this,"config"),ue(this,"result"),ue(this,"state"),ue(this,"process"),ue(this,"tf"),ue(this,"env"),ue(this,"draw"),ue(this,"models"),ue(this,"events"),ue(this,"faceTriangulation"),ue(this,"faceUVMap"),ue(this,"performance"),fu(this,Fu,void 0),fu(this,mc,void 0),fu(this,gc,void 0),ue(this,"gl"),ue(this,"analyze",(...n)=>{if(!Zn(this,mc))return;let r=this.tf.engine().state.numTensors,s=Zn(this,Fu);Pp(this,Fu,r);let i=r-s;i!==0&&ae(...n,i)}),fu(this,F2,n=>{if(!Zn(this,gc))return null;if(!n)return"input is not defined";if(this.env.node&&!(n instanceof ft))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),ue(this,"similarity",CI),ue(this,"distance",Jh),ue(this,"match",EI),ue(this,"webcam",new kde),ue(this,"emit",n=>{var r;(r=this.events)!=null&&r.dispatchEvent&&this.events.dispatchEvent(new Event(n))}),fu(this,Os,{}),this.env=he;let t=(X1.tfjs||wb).replace(/-(.*)/,"");Eo.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${t}/dist/`,Eo.modelBasePath=he.browser?"../models/":"file://models/",Eo.backend=he.browser?"webgl":"tensorflow",this.version=qy,Object.defineProperty(this,"version",{value:qy}),this.config=JSON.parse(JSON.stringify(Eo)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB<"u",e&&(this.config=da(this.config,e)),Tde(this.config),this.tf=O2,this.state="idle",Pp(this,Fu,0),Pp(this,mc,!1),Pp(this,gc,!1),this.performance={},this.events=typeof EventTarget<"u"?new EventTarget:void 0,this.models=new yI,TI(),this.draw={options:pa,canvas:(n,r)=>II(n,r),face:(n,r,s)=>tA(n,r,s),body:(n,r,s)=>aA(n,r,s),hand:(n,r,s)=>nA(n,r,s),gesture:(n,r,s)=>sA(n,r,s),object:(n,r,s)=>rA(n,r,s),person:(n,r,s)=>kI(n,r,s),all:(n,r,s)=>SI(n,r,s)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=Ppe,this.faceUVMap=Dpe,this.gl=xt,eA(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&ae(`version: ${this.version}`),this.config.debug&&ae(`tfjs version: ${this.tf.version["tfjs-core"]}`);let a=JSON.parse(JSON.stringify(this.env));delete a.kernels,delete a.initial,delete a.perfadd,this.config.debug&&ae("environment:",a)}reset(){let e=this.config.backend;this.config=JSON.parse(JSON.stringify(Eo)),this.config.backend=e,jy(),he.initial=!0}validate(e){let t=O4(Eo,e||this.config);return t.length===0&&(this.config=da(this.config,e)),t}check(){return $2(this)}now(){return oe()}image(e,t=!0){return Yf(e,this.config,t)}async segmentation(e,t){var a,n,r;if(t&&(this.config=da(this.config,t)),!this.config.segmentation.enabled)return null;let s=await Yf(e,this.config);if(!s.tensor)return null;let i=null;return(a=this.config.segmentation.modelPath)!=null&&a.includes("rvm")&&(i=await Hce(s.tensor,this.config)),(n=this.config.segmentation.modelPath)!=null&&n.includes("meet")&&(i=await yce(s.tensor,this.config)),(r=this.config.segmentation.modelPath)!=null&&r.includes("selfie")&&(i=await jce(s.tensor,this.config)),le(s.tensor),i}enhance(e){return Q8(e)}compare(e,t){return vde(this.config,e,t)}async init(){await M2(this,!0),await this.tf.ready(),jy()}async load(e){this.state="load";let t=oe(),a=Object.values(this.models).filter(s=>s).length;e&&(this.config=da(this.config,e)),this.env.initial&&(await M2(this,!1)||ae("error: backend check failed"),await og(),this.env.browser&&(this.config.debug&&ae("configuration:",this.config),this.config.debug&&ae("tf flags:",this.tf.ENV.flags))),await bI(this),this.env.initial&&this.config.debug&&ae("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter(s=>s).length!==a&&($2(this),this.emit("load"));let r=Math.trunc(oe()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(e=this.result){return mhe(e,this.config)}getModelStats(){return xI(this)}async warmup(e){let t=oe(),a=await khe(this,e),n=oe();return this.performance.warmup=Math.trunc(n-t),a}async profile(e,t){let a=await this.tf.profile(()=>this.detect(e,t)),n={},r=0;for(let i of a.kernels){let o=Number(i.kernelTimeMs)||0;n[i.name]?n[i.name]+=o:n[i.name]=o,r+=o}let s=[];Object.entries(n).forEach(i=>s.push({kernel:i[0],time:i[1],perc:0}));for(let i of s)i.perc=Math.round(1e3*i.time/r)/1e3,i.time=Math.round(1e3*i.time)/1e3;return s.sort((i,o)=>o.time-i.time),s.length=20,s}async detect(e,t){return this.state="detect",new Promise(async a=>{var n,r,s,i,o,l,u,d,c,p,h,f,m,g,A,y,x,b,w,S,N;this.state="config";let C;this.config=da(this.config,t),this.state="check";let M=Zn(this,F2).call(this,e);M&&(ae(M,e),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:oe(),persons:[],error:M}));let $=oe();await this.load(),C=oe(),this.state="image";let E=await Yf(e,this.config);if(this.process=E,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(oe()-C):Math.trunc(oe()-C),this.analyze("Get Image:"),!E.tensor){this.config.debug&&ae("could not convert input to tensor"),this.emit("error"),a({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:oe(),persons:[],error:"could not convert input to tensor"});return}this.emit("image"),C=oe(),this.config.skipAllowed=await bde(this.config,E.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(oe()-C):Math.trunc(oe()-C),this.analyze("Check Changed:");let I=[],R=[],P=[],D=[];this.state="detect:face",this.config.async?(I=this.config.face.enabled?c5(this,E.tensor):[],this.performance.face&&delete this.performance.face):(C=oe(),I=this.config.face.enabled?await c5(this,E.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(oe()-C):Math.trunc(oe()-C)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(I=await I),this.analyze("Start Body:"),this.state="detect:body";let W=this.config.body.maxDetected===-1?da(this.config,{body:{maxDetected:this.config.face.enabled?1*I.length:1}}):this.config;this.config.async?((n=this.config.body.modelPath)!=null&&n.includes("posenet")?R=this.config.body.enabled?a5(E.tensor,W):[]:(r=this.config.body.modelPath)!=null&&r.includes("blazepose")?R=this.config.body.enabled?sx(E.tensor,W):[]:(s=this.config.body.modelPath)!=null&&s.includes("efficientpose")?R=this.config.body.enabled?ux(E.tensor,W):[]:(i=this.config.body.modelPath)!=null&&i.includes("movenet")&&(R=this.config.body.enabled?Zx(E.tensor,W):[]),this.performance.body&&delete this.performance.body):(C=oe(),(o=this.config.body.modelPath)!=null&&o.includes("posenet")?R=this.config.body.enabled?await a5(E.tensor,W):[]:(l=this.config.body.modelPath)!=null&&l.includes("blazepose")?R=this.config.body.enabled?await sx(E.tensor,W):[]:(u=this.config.body.modelPath)!=null&&u.includes("efficientpose")?R=this.config.body.enabled?await ux(E.tensor,W):[]:(d=this.config.body.modelPath)!=null&&d.includes("movenet")&&(R=this.config.body.enabled?await Zx(E.tensor,W):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(oe()-C):Math.trunc(oe()-C)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";let V=this.config.hand.maxDetected===-1?da(this.config,{hand:{maxDetected:this.config.face.enabled?2*I.length:1}}):this.config;this.config.async?((p=(c=this.config.hand.detector)==null?void 0:c.modelPath)!=null&&p.includes("handdetect")?P=this.config.hand.enabled?$x(E.tensor,V):[]:(f=(h=this.config.hand.detector)==null?void 0:h.modelPath)!=null&&f.includes("handtrack")&&(P=this.config.hand.enabled?Dx(E.tensor,V):[]),this.performance.hand&&delete this.performance.hand):(C=oe(),(g=(m=this.config.hand.detector)==null?void 0:m.modelPath)!=null&&g.includes("handdetect")?P=this.config.hand.enabled?await $x(E.tensor,V):[]:(y=(A=this.config.hand.detector)==null?void 0:A.modelPath)!=null&&y.includes("handtrack")&&(P=this.config.hand.enabled?await Dx(E.tensor,V):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(oe()-C):Math.trunc(oe()-C)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((x=this.config.object.modelPath)!=null&&x.includes("nanodet")?D=this.config.object.enabled?Jx(E.tensor,this.config):[]:(b=this.config.object.modelPath)!=null&&b.includes("centernet")&&(D=this.config.object.enabled?ox(E.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(C=oe(),(w=this.config.object.modelPath)!=null&&w.includes("nanodet")?D=this.config.object.enabled?await Jx(E.tensor,this.config):[]:(S=this.config.object.modelPath)!=null&&S.includes("centernet")&&(D=this.config.object.enabled?await ox(E.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(oe()-C):Math.trunc(oe()-C)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([I,R,P,D]=await Promise.all([I,R,P,D])),this.state="detect:gesture";let G=[];this.config.gesture.enabled&&(C=oe(),G=[...che(I),...phe(R),...fhe(P),...hhe(I)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(oe()-C):Math.trunc(oe()-C)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(oe()-$):Math.trunc(oe()-$);let U=((N=this.process.tensor)==null?void 0:N.shape)||[];this.result={face:I,body:R,hand:P,gesture:G,object:D,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return Ahe(I,R,P,G,U)}},le(E.tensor),this.emit("detect"),this.state="idle",a(this.result)})}async sleep(e){return new Promise(t=>{setTimeout(t,e)})}async video(e,t=!0,a=0){t?(Zn(this,Os)[e.id]||(this.config.debug&&ae("video start",e.id),Zn(this,Os)[e.id]=!0),!e.paused&&Zn(this,Os)[e.id]&&e.readyState>=2&&await this.detect(e),a>0&&await this.sleep(a),Zn(this,Os)[e.id]&&requestAnimationFrame(()=>this.video(e,t,a))):(this.config.debug&&ae("video stop",e.id),Zn(this,Os)[e.id]=!1)}};Fu=new WeakMap;mc=new WeakMap;gc=new WeakMap;F2=new WeakMap;Os=new WeakMap;var Ar;onmessage=async e=>{if(Ar||(Ar=new RI(e.data.config),await Ar.init(),console.log("human",{worker:!0,backend:Ar.tf.getBackend(),env:Ar.env})),e.data.image){let t=Ar.tf.tensor(e.data.image,[1,e.data.height,e.data.width,3],"float32"),a=await Ar.detect(t,e.data.config);Ar.tf.dispose(t),postMessage({result:a,state:JSON.stringify(Ar.tf.engine().state)})}};
//# sourceMappingURL=worker.js.map
